#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace tradelr.DBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tradelr")]
	public partial class tradelrDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertactivity(activity instance);
    partial void Updateactivity(activity instance);
    partial void Deleteactivity(activity instance);
    partial void InsertadminSupportMessage(adminSupportMessage instance);
    partial void UpdateadminSupportMessage(adminSupportMessage instance);
    partial void DeleteadminSupportMessage(adminSupportMessage instance);
    partial void InsertchangeHistory(changeHistory instance);
    partial void UpdatechangeHistory(changeHistory instance);
    partial void DeletechangeHistory(changeHistory instance);
    partial void InsertchangeHistoryItem(changeHistoryItem instance);
    partial void UpdatechangeHistoryItem(changeHistoryItem instance);
    partial void DeletechangeHistoryItem(changeHistoryItem instance);
    partial void InsertELMAH_Error(ELMAH_Error instance);
    partial void UpdateELMAH_Error(ELMAH_Error instance);
    partial void DeleteELMAH_Error(ELMAH_Error instance);
    partial void Insertfavourite(favourite instance);
    partial void Updatefavourite(favourite instance);
    partial void Deletefavourite(favourite instance);
    partial void Insertfriend(friend instance);
    partial void Updatefriend(friend instance);
    partial void Deletefriend(friend instance);
    partial void InsertMASTERcity(MASTERcity instance);
    partial void UpdateMASTERcity(MASTERcity instance);
    partial void DeleteMASTERcity(MASTERcity instance);
    partial void InsertMASTERproductCategory(MASTERproductCategory instance);
    partial void UpdateMASTERproductCategory(MASTERproductCategory instance);
    partial void DeleteMASTERproductCategory(MASTERproductCategory instance);
    partial void InsertMASTERstockUnit(MASTERstockUnit instance);
    partial void UpdateMASTERstockUnit(MASTERstockUnit instance);
    partial void DeleteMASTERstockUnit(MASTERstockUnit instance);
    partial void InsertfacebookPage(facebookPage instance);
    partial void UpdatefacebookPage(facebookPage instance);
    partial void DeletefacebookPage(facebookPage instance);
    partial void InsertopensocialPage(opensocialPage instance);
    partial void UpdateopensocialPage(opensocialPage instance);
    partial void DeleteopensocialPage(opensocialPage instance);
    partial void InsertgoogleBlogsProductPost(googleBlogsProductPost instance);
    partial void UpdategoogleBlogsProductPost(googleBlogsProductPost instance);
    partial void DeletegoogleBlogsProductPost(googleBlogsProductPost instance);
    partial void InserttwitterSearch(twitterSearch instance);
    partial void UpdatetwitterSearch(twitterSearch instance);
    partial void DeletetwitterSearch(twitterSearch instance);
    partial void Insertimage(image instance);
    partial void Updateimage(image instance);
    partial void Deleteimage(image instance);
    partial void InsertinventoryLocation(inventoryLocation instance);
    partial void UpdateinventoryLocation(inventoryLocation instance);
    partial void DeleteinventoryLocation(inventoryLocation instance);
    partial void InsertproductCategory(productCategory instance);
    partial void UpdateproductCategory(productCategory instance);
    partial void DeleteproductCategory(productCategory instance);
    partial void Insertmessage(message instance);
    partial void Updatemessage(message instance);
    partial void Deletemessage(message instance);
    partial void InsertlinkRequest(linkRequest instance);
    partial void UpdatelinkRequest(linkRequest instance);
    partial void DeletelinkRequest(linkRequest instance);
    partial void InsertshipwireTransaction(shipwireTransaction instance);
    partial void UpdateshipwireTransaction(shipwireTransaction instance);
    partial void DeleteshipwireTransaction(shipwireTransaction instance);
    partial void InsertgoogleBlog(googleBlog instance);
    partial void UpdategoogleBlog(googleBlog instance);
    partial void DeletegoogleBlog(googleBlog instance);
    partial void Insertproduct_comment(product_comment instance);
    partial void Updateproduct_comment(product_comment instance);
    partial void Deleteproduct_comment(product_comment instance);
    partial void Insertvideo(video instance);
    partial void Updatevideo(video instance);
    partial void Deletevideo(video instance);
    partial void Inserttransaction(transaction instance);
    partial void Updatetransaction(transaction instance);
    partial void Deletetransaction(transaction instance);
    partial void Insertreview(review instance);
    partial void Updatereview(review instance);
    partial void Deletereview(review instance);
    partial void Insertoauth_token(oauth_token instance);
    partial void Updateoauth_token(oauth_token instance);
    partial void Deleteoauth_token(oauth_token instance);
    partial void InsertshippingRule(shippingRule instance);
    partial void UpdateshippingRule(shippingRule instance);
    partial void DeleteshippingRule(shippingRule instance);
    partial void InsertstockUnit(stockUnit instance);
    partial void UpdatestockUnit(stockUnit instance);
    partial void DeletestockUnit(stockUnit instance);
    partial void Insertfacebook_token(facebook_token instance);
    partial void Updatefacebook_token(facebook_token instance);
    partial void Deletefacebook_token(facebook_token instance);
    partial void Insertfacebook_import(facebook_import instance);
    partial void Updatefacebook_import(facebook_import instance);
    partial void Deletefacebook_import(facebook_import instance);
    partial void InsertwordpressSite(wordpressSite instance);
    partial void UpdatewordpressSite(wordpressSite instance);
    partial void DeletewordpressSite(wordpressSite instance);
    partial void InsertwordpressPost(wordpressPost instance);
    partial void UpdatewordpressPost(wordpressPost instance);
    partial void DeletewordpressPost(wordpressPost instance);
    partial void InserttumblrSite(tumblrSite instance);
    partial void UpdatetumblrSite(tumblrSite instance);
    partial void DeletetumblrSite(tumblrSite instance);
    partial void InserttumblrPost(tumblrPost instance);
    partial void UpdatetumblrPost(tumblrPost instance);
    partial void DeletetumblrPost(tumblrPost instance);
    partial void InsertinventoryLocationItem(inventoryLocationItem instance);
    partial void UpdateinventoryLocationItem(inventoryLocationItem instance);
    partial void DeleteinventoryLocationItem(inventoryLocationItem instance);
    partial void InsertorderItem(orderItem instance);
    partial void UpdateorderItem(orderItem instance);
    partial void DeleteorderItem(orderItem instance);
    partial void InsertcontactGroupMember(contactGroupMember instance);
    partial void UpdatecontactGroupMember(contactGroupMember instance);
    partial void DeletecontactGroupMember(contactGroupMember instance);
    partial void InsertcontactGroupPricing(contactGroupPricing instance);
    partial void UpdatecontactGroupPricing(contactGroupPricing instance);
    partial void DeletecontactGroupPricing(contactGroupPricing instance);
    partial void InsertcontactGroup(contactGroup instance);
    partial void UpdatecontactGroup(contactGroup instance);
    partial void DeletecontactGroup(contactGroup instance);
    partial void InsertproductCollectionMember(productCollectionMember instance);
    partial void UpdateproductCollectionMember(productCollectionMember instance);
    partial void DeleteproductCollectionMember(productCollectionMember instance);
    partial void Insertlink(link instance);
    partial void Updatelink(link instance);
    partial void Deletelink(link instance);
    partial void Insertcartitem(cartitem instance);
    partial void Updatecartitem(cartitem instance);
    partial void Deletecartitem(cartitem instance);
    partial void Insertaddress(address instance);
    partial void Updateaddress(address instance);
    partial void Deleteaddress(address instance);
    partial void Insertcart(cart instance);
    partial void Updatecart(cart instance);
    partial void Deletecart(cart instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertarticle_comment(article_comment instance);
    partial void Updatearticle_comment(article_comment instance);
    partial void Deletearticle_comment(article_comment instance);
    partial void Insertarticle(article instance);
    partial void Updatearticle(article instance);
    partial void Deletearticle(article instance);
    partial void Insertblog(blog instance);
    partial void Updateblog(blog instance);
    partial void Deleteblog(blog instance);
    partial void Insertlinklist(linklist instance);
    partial void Updatelinklist(linklist instance);
    partial void Deletelinklist(linklist instance);
    partial void Insertcoupon(coupon instance);
    partial void Updatecoupon(coupon instance);
    partial void Deletecoupon(coupon instance);
    partial void InsertshippingProfile(shippingProfile instance);
    partial void UpdateshippingProfile(shippingProfile instance);
    partial void DeleteshippingProfile(shippingProfile instance);
    partial void Insertproduct_variant(product_variant instance);
    partial void Updateproduct_variant(product_variant instance);
    partial void Deleteproduct_variant(product_variant instance);
    partial void InsertinventoryHistory(inventoryHistory instance);
    partial void UpdateinventoryHistory(inventoryHistory instance);
    partial void DeleteinventoryHistory(inventoryHistory instance);
    partial void Insertorganisation(organisation instance);
    partial void Updateorganisation(organisation instance);
    partial void Deleteorganisation(organisation instance);
    partial void Insertgbase_product(gbase_product instance);
    partial void Updategbase_product(gbase_product instance);
    partial void Deletegbase_product(gbase_product instance);
    partial void InsertgoogleBase(googleBase instance);
    partial void UpdategoogleBase(googleBase instance);
    partial void DeletegoogleBase(googleBase instance);
    partial void Insertproducts_digital(products_digital instance);
    partial void Updateproducts_digital(products_digital instance);
    partial void Deleteproducts_digital(products_digital instance);
    partial void InsertorderItems_digital(orderItems_digital instance);
    partial void UpdateorderItems_digital(orderItems_digital instance);
    partial void DeleteorderItems_digital(orderItems_digital instance);
    partial void Insertcomment(comment instance);
    partial void Updatecomment(comment instance);
    partial void Deletecomment(comment instance);
    partial void Inserttheme(theme instance);
    partial void Updatetheme(theme instance);
    partial void Deletetheme(theme instance);
    partial void Insertebay_condition(ebay_condition instance);
    partial void Updateebay_condition(ebay_condition instance);
    partial void Deleteebay_condition(ebay_condition instance);
    partial void InsertpaymentMethod(paymentMethod instance);
    partial void UpdatepaymentMethod(paymentMethod instance);
    partial void DeletepaymentMethod(paymentMethod instance);
    partial void Insertebay_listingduration(ebay_listingduration instance);
    partial void Updateebay_listingduration(ebay_listingduration instance);
    partial void Deleteebay_listingduration(ebay_listingduration instance);
    partial void Insertebay_category(ebay_category instance);
    partial void Updateebay_category(ebay_category instance);
    partial void Deleteebay_category(ebay_category instance);
    partial void Insertebay_shippingservice(ebay_shippingservice instance);
    partial void Updateebay_shippingservice(ebay_shippingservice instance);
    partial void Deleteebay_shippingservice(ebay_shippingservice instance);
    partial void Insertebay_shippingprofile(ebay_shippingprofile instance);
    partial void Updateebay_shippingprofile(ebay_shippingprofile instance);
    partial void Deleteebay_shippingprofile(ebay_shippingprofile instance);
    partial void Insertebay_shippingrule(ebay_shippingrule instance);
    partial void Updateebay_shippingrule(ebay_shippingrule instance);
    partial void Deleteebay_shippingrule(ebay_shippingrule instance);
    partial void Insertebay_shippinglocation(ebay_shippinglocation instance);
    partial void Updateebay_shippinglocation(ebay_shippinglocation instance);
    partial void Deleteebay_shippinglocation(ebay_shippinglocation instance);
    partial void Insertebay_shippingrule_location(ebay_shippingrule_location instance);
    partial void Updateebay_shippingrule_location(ebay_shippingrule_location instance);
    partial void Deleteebay_shippingrule_location(ebay_shippingrule_location instance);
    partial void Insertebay_dispatchtime(ebay_dispatchtime instance);
    partial void Updateebay_dispatchtime(ebay_dispatchtime instance);
    partial void Deleteebay_dispatchtime(ebay_dispatchtime instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertebay_user(ebay_user instance);
    partial void Updateebay_user(ebay_user instance);
    partial void Deleteebay_user(ebay_user instance);
    partial void Insertebay_order(ebay_order instance);
    partial void Updateebay_order(ebay_order instance);
    partial void Deleteebay_order(ebay_order instance);
    partial void Insertebay_orderitem(ebay_orderitem instance);
    partial void Updateebay_orderitem(ebay_orderitem instance);
    partial void Deleteebay_orderitem(ebay_orderitem instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertebay_product(ebay_product instance);
    partial void Updateebay_product(ebay_product instance);
    partial void Deleteebay_product(ebay_product instance);
    partial void Insertarticle_tag(article_tag instance);
    partial void Updatearticle_tag(article_tag instance);
    partial void Deletearticle_tag(article_tag instance);
    partial void Inserttag(tag instance);
    partial void Updatetag(tag instance);
    partial void Deletetag(tag instance);
    partial void Inserttrademe_listingduration(trademe_listingduration instance);
    partial void Updatetrademe_listingduration(trademe_listingduration instance);
    partial void Deletetrademe_listingduration(trademe_listingduration instance);
    partial void Insertproduct_image(product_image instance);
    partial void Updateproduct_image(product_image instance);
    partial void Deleteproduct_image(product_image instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Inserttrademe_category(trademe_category instance);
    partial void Updatetrademe_category(trademe_category instance);
    partial void Deletetrademe_category(trademe_category instance);
    partial void Inserttrademe_shippingcost(trademe_shippingcost instance);
    partial void Updatetrademe_shippingcost(trademe_shippingcost instance);
    partial void Deletetrademe_shippingcost(trademe_shippingcost instance);
    partial void Inserttrademe_product(trademe_product instance);
    partial void Updatetrademe_product(trademe_product instance);
    partial void Deletetrademe_product(trademe_product instance);
    partial void InsertMASTERsubdomain(MASTERsubdomain instance);
    partial void UpdateMASTERsubdomain(MASTERsubdomain instance);
    partial void DeleteMASTERsubdomain(MASTERsubdomain instance);
    partial void Insertpage(page instance);
    partial void Updatepage(page instance);
    partial void Deletepage(page instance);
    partial void Insertproduct_collection(product_collection instance);
    partial void Updateproduct_collection(product_collection instance);
    partial void Deleteproduct_collection(product_collection instance);
    partial void Insertmail(mail instance);
    partial void Updatemail(mail instance);
    partial void Deletemail(mail instance);
    partial void InsertindexingQueue(indexingQueue instance);
    partial void UpdateindexingQueue(indexingQueue instance);
    partial void DeleteindexingQueue(indexingQueue instance);
    #endregion
		
		public tradelrDataContext() : 
				base(global::tradelr.DBML.Properties.Settings.Default.tradelrConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public tradelrDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tradelrDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tradelrDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public tradelrDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<activity> activities
		{
			get
			{
				return this.GetTable<activity>();
			}
		}
		
		public System.Data.Linq.Table<adminSupportMessage> adminSupportMessages
		{
			get
			{
				return this.GetTable<adminSupportMessage>();
			}
		}
		
		public System.Data.Linq.Table<changeHistory> changeHistories
		{
			get
			{
				return this.GetTable<changeHistory>();
			}
		}
		
		public System.Data.Linq.Table<changeHistoryItem> changeHistoryItems
		{
			get
			{
				return this.GetTable<changeHistoryItem>();
			}
		}
		
		public System.Data.Linq.Table<ELMAH_Error> ELMAH_Errors
		{
			get
			{
				return this.GetTable<ELMAH_Error>();
			}
		}
		
		public System.Data.Linq.Table<favourite> favourites
		{
			get
			{
				return this.GetTable<favourite>();
			}
		}
		
		public System.Data.Linq.Table<friend> friends
		{
			get
			{
				return this.GetTable<friend>();
			}
		}
		
		public System.Data.Linq.Table<MASTERcity> MASTERcities
		{
			get
			{
				return this.GetTable<MASTERcity>();
			}
		}
		
		public System.Data.Linq.Table<MASTERproductCategory> MASTERproductCategories
		{
			get
			{
				return this.GetTable<MASTERproductCategory>();
			}
		}
		
		public System.Data.Linq.Table<MASTERstockUnit> MASTERstockUnits
		{
			get
			{
				return this.GetTable<MASTERstockUnit>();
			}
		}
		
		public System.Data.Linq.Table<facebookPage> facebookPages
		{
			get
			{
				return this.GetTable<facebookPage>();
			}
		}
		
		public System.Data.Linq.Table<opensocialPage> opensocialPages
		{
			get
			{
				return this.GetTable<opensocialPage>();
			}
		}
		
		public System.Data.Linq.Table<googleBlogsProductPost> googleBlogsProductPosts
		{
			get
			{
				return this.GetTable<googleBlogsProductPost>();
			}
		}
		
		public System.Data.Linq.Table<twitterSearch> twitterSearches
		{
			get
			{
				return this.GetTable<twitterSearch>();
			}
		}
		
		public System.Data.Linq.Table<image> images
		{
			get
			{
				return this.GetTable<image>();
			}
		}
		
		public System.Data.Linq.Table<inventoryLocation> inventoryLocations
		{
			get
			{
				return this.GetTable<inventoryLocation>();
			}
		}
		
		public System.Data.Linq.Table<productCategory> productCategories
		{
			get
			{
				return this.GetTable<productCategory>();
			}
		}
		
		public System.Data.Linq.Table<message> messages
		{
			get
			{
				return this.GetTable<message>();
			}
		}
		
		public System.Data.Linq.Table<linkRequest> linkRequests
		{
			get
			{
				return this.GetTable<linkRequest>();
			}
		}
		
		public System.Data.Linq.Table<shipwireTransaction> shipwireTransactions
		{
			get
			{
				return this.GetTable<shipwireTransaction>();
			}
		}
		
		public System.Data.Linq.Table<googleBlog> googleBlogs
		{
			get
			{
				return this.GetTable<googleBlog>();
			}
		}
		
		public System.Data.Linq.Table<product_comment> product_comments
		{
			get
			{
				return this.GetTable<product_comment>();
			}
		}
		
		public System.Data.Linq.Table<video> videos
		{
			get
			{
				return this.GetTable<video>();
			}
		}
		
		public System.Data.Linq.Table<transaction> transactions
		{
			get
			{
				return this.GetTable<transaction>();
			}
		}
		
		public System.Data.Linq.Table<review> reviews
		{
			get
			{
				return this.GetTable<review>();
			}
		}
		
		public System.Data.Linq.Table<oauth_token> oauth_tokens
		{
			get
			{
				return this.GetTable<oauth_token>();
			}
		}
		
		public System.Data.Linq.Table<shippingRule> shippingRules
		{
			get
			{
				return this.GetTable<shippingRule>();
			}
		}
		
		public System.Data.Linq.Table<stockUnit> stockUnits
		{
			get
			{
				return this.GetTable<stockUnit>();
			}
		}
		
		public System.Data.Linq.Table<facebook_token> facebook_tokens
		{
			get
			{
				return this.GetTable<facebook_token>();
			}
		}
		
		public System.Data.Linq.Table<facebook_import> facebook_imports
		{
			get
			{
				return this.GetTable<facebook_import>();
			}
		}
		
		public System.Data.Linq.Table<wordpressSite> wordpressSites
		{
			get
			{
				return this.GetTable<wordpressSite>();
			}
		}
		
		public System.Data.Linq.Table<wordpressPost> wordpressPosts
		{
			get
			{
				return this.GetTable<wordpressPost>();
			}
		}
		
		public System.Data.Linq.Table<tumblrSite> tumblrSites
		{
			get
			{
				return this.GetTable<tumblrSite>();
			}
		}
		
		public System.Data.Linq.Table<tumblrPost> tumblrPosts
		{
			get
			{
				return this.GetTable<tumblrPost>();
			}
		}
		
		public System.Data.Linq.Table<inventoryLocationItem> inventoryLocationItems
		{
			get
			{
				return this.GetTable<inventoryLocationItem>();
			}
		}
		
		public System.Data.Linq.Table<orderItem> orderItems
		{
			get
			{
				return this.GetTable<orderItem>();
			}
		}
		
		public System.Data.Linq.Table<contactGroupMember> contactGroupMembers
		{
			get
			{
				return this.GetTable<contactGroupMember>();
			}
		}
		
		public System.Data.Linq.Table<contactGroupPricing> contactGroupPricings
		{
			get
			{
				return this.GetTable<contactGroupPricing>();
			}
		}
		
		public System.Data.Linq.Table<contactGroup> contactGroups
		{
			get
			{
				return this.GetTable<contactGroup>();
			}
		}
		
		public System.Data.Linq.Table<productCollectionMember> productCollectionMembers
		{
			get
			{
				return this.GetTable<productCollectionMember>();
			}
		}
		
		public System.Data.Linq.Table<link> links
		{
			get
			{
				return this.GetTable<link>();
			}
		}
		
		public System.Data.Linq.Table<cartitem> cartitems
		{
			get
			{
				return this.GetTable<cartitem>();
			}
		}
		
		public System.Data.Linq.Table<address> addresses
		{
			get
			{
				return this.GetTable<address>();
			}
		}
		
		public System.Data.Linq.Table<cart> carts
		{
			get
			{
				return this.GetTable<cart>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<article_comment> article_comments
		{
			get
			{
				return this.GetTable<article_comment>();
			}
		}
		
		public System.Data.Linq.Table<article> articles
		{
			get
			{
				return this.GetTable<article>();
			}
		}
		
		public System.Data.Linq.Table<blog> blogs
		{
			get
			{
				return this.GetTable<blog>();
			}
		}
		
		public System.Data.Linq.Table<linklist> linklists
		{
			get
			{
				return this.GetTable<linklist>();
			}
		}
		
		public System.Data.Linq.Table<coupon> coupons
		{
			get
			{
				return this.GetTable<coupon>();
			}
		}
		
		public System.Data.Linq.Table<shippingProfile> shippingProfiles
		{
			get
			{
				return this.GetTable<shippingProfile>();
			}
		}
		
		public System.Data.Linq.Table<product_variant> product_variants
		{
			get
			{
				return this.GetTable<product_variant>();
			}
		}
		
		public System.Data.Linq.Table<inventoryHistory> inventoryHistories
		{
			get
			{
				return this.GetTable<inventoryHistory>();
			}
		}
		
		public System.Data.Linq.Table<organisation> organisations
		{
			get
			{
				return this.GetTable<organisation>();
			}
		}
		
		public System.Data.Linq.Table<gbase_product> gbase_products
		{
			get
			{
				return this.GetTable<gbase_product>();
			}
		}
		
		public System.Data.Linq.Table<googleBase> googleBases
		{
			get
			{
				return this.GetTable<googleBase>();
			}
		}
		
		public System.Data.Linq.Table<products_digital> products_digitals
		{
			get
			{
				return this.GetTable<products_digital>();
			}
		}
		
		public System.Data.Linq.Table<orderItems_digital> orderItems_digitals
		{
			get
			{
				return this.GetTable<orderItems_digital>();
			}
		}
		
		public System.Data.Linq.Table<comment> comments
		{
			get
			{
				return this.GetTable<comment>();
			}
		}
		
		public System.Data.Linq.Table<theme> themes
		{
			get
			{
				return this.GetTable<theme>();
			}
		}
		
		public System.Data.Linq.Table<ebay_condition> ebay_conditions
		{
			get
			{
				return this.GetTable<ebay_condition>();
			}
		}
		
		public System.Data.Linq.Table<paymentMethod> paymentMethods
		{
			get
			{
				return this.GetTable<paymentMethod>();
			}
		}
		
		public System.Data.Linq.Table<ebay_listingduration> ebay_listingdurations
		{
			get
			{
				return this.GetTable<ebay_listingduration>();
			}
		}
		
		public System.Data.Linq.Table<ebay_category> ebay_categories
		{
			get
			{
				return this.GetTable<ebay_category>();
			}
		}
		
		public System.Data.Linq.Table<ebay_shippingservice> ebay_shippingservices
		{
			get
			{
				return this.GetTable<ebay_shippingservice>();
			}
		}
		
		public System.Data.Linq.Table<ebay_shippingprofile> ebay_shippingprofiles
		{
			get
			{
				return this.GetTable<ebay_shippingprofile>();
			}
		}
		
		public System.Data.Linq.Table<ebay_shippingrule> ebay_shippingrules
		{
			get
			{
				return this.GetTable<ebay_shippingrule>();
			}
		}
		
		public System.Data.Linq.Table<ebay_shippinglocation> ebay_shippinglocations
		{
			get
			{
				return this.GetTable<ebay_shippinglocation>();
			}
		}
		
		public System.Data.Linq.Table<ebay_shippingrule_location> ebay_shippingrule_locations
		{
			get
			{
				return this.GetTable<ebay_shippingrule_location>();
			}
		}
		
		public System.Data.Linq.Table<ebay_dispatchtime> ebay_dispatchtimes
		{
			get
			{
				return this.GetTable<ebay_dispatchtime>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<ebay_user> ebay_users
		{
			get
			{
				return this.GetTable<ebay_user>();
			}
		}
		
		public System.Data.Linq.Table<ebay_order> ebay_orders
		{
			get
			{
				return this.GetTable<ebay_order>();
			}
		}
		
		public System.Data.Linq.Table<ebay_orderitem> ebay_orderitems
		{
			get
			{
				return this.GetTable<ebay_orderitem>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<ebay_product> ebay_products
		{
			get
			{
				return this.GetTable<ebay_product>();
			}
		}
		
		public System.Data.Linq.Table<article_tag> article_tags
		{
			get
			{
				return this.GetTable<article_tag>();
			}
		}
		
		public System.Data.Linq.Table<tag> tags
		{
			get
			{
				return this.GetTable<tag>();
			}
		}
		
		public System.Data.Linq.Table<trademe_listingduration> trademe_listingdurations
		{
			get
			{
				return this.GetTable<trademe_listingduration>();
			}
		}
		
		public System.Data.Linq.Table<product_image> product_images
		{
			get
			{
				return this.GetTable<product_image>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<trademe_category> trademe_categories
		{
			get
			{
				return this.GetTable<trademe_category>();
			}
		}
		
		public System.Data.Linq.Table<trademe_shippingcost> trademe_shippingcosts
		{
			get
			{
				return this.GetTable<trademe_shippingcost>();
			}
		}
		
		public System.Data.Linq.Table<trademe_product> trademe_products
		{
			get
			{
				return this.GetTable<trademe_product>();
			}
		}
		
		public System.Data.Linq.Table<MASTERsubdomain> MASTERsubdomains
		{
			get
			{
				return this.GetTable<MASTERsubdomain>();
			}
		}
		
		public System.Data.Linq.Table<page> pages
		{
			get
			{
				return this.GetTable<page>();
			}
		}
		
		public System.Data.Linq.Table<product_collection> product_collections
		{
			get
			{
				return this.GetTable<product_collection>();
			}
		}
		
		public System.Data.Linq.Table<mail> mails
		{
			get
			{
				return this.GetTable<mail>();
			}
		}
		
		public System.Data.Linq.Table<indexingQueue> indexingQueues
		{
			get
			{
				return this.GetTable<indexingQueue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.activities")]
	public partial class activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _owner;
		
		private long _appid;
		
		private string _type;
		
		private string _title;
		
		private string _body;
		
		private System.DateTime _created;
		
		private System.Nullable<long> _targetUserid;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnownerChanging(long value);
    partial void OnownerChanged();
    partial void OnappidChanging(long value);
    partial void OnappidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OntargetUseridChanging(System.Nullable<long> value);
    partial void OntargetUseridChanged();
    #endregion
		
		public activity()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="BigInt NOT NULL")]
		public long owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appid", DbType="BigInt NOT NULL")]
		public long appid
		{
			get
			{
				return this._appid;
			}
			set
			{
				if ((this._appid != value))
				{
					this.OnappidChanging(value);
					this.SendPropertyChanging();
					this._appid = value;
					this.SendPropertyChanged("appid");
					this.OnappidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(MAX)")]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_targetUserid", DbType="BigInt")]
		public System.Nullable<long> targetUserid
		{
			get
			{
				return this._targetUserid;
			}
			set
			{
				if ((this._targetUserid != value))
				{
					this.OntargetUseridChanging(value);
					this.SendPropertyChanging();
					this._targetUserid = value;
					this.SendPropertyChanged("targetUserid");
					this.OntargetUseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_activity", Storage="_user", ThisKey="owner", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.activities.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.activities.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.adminSupportMessages")]
	public partial class adminSupportMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _email;
		
		private string _message;
		
		private System.DateTime _created;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    #endregion
		
		public adminSupportMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.changeHistories")]
	public partial class changeHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _historyType;
		
		private long _contextID;
		
		private EntitySet<changeHistoryItem> _changeHistoryItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnhistoryTypeChanging(string value);
    partial void OnhistoryTypeChanged();
    partial void OncontextIDChanging(long value);
    partial void OncontextIDChanged();
    #endregion
		
		public changeHistory()
		{
			this._changeHistoryItems = new EntitySet<changeHistoryItem>(new Action<changeHistoryItem>(this.attach_changeHistoryItems), new Action<changeHistoryItem>(this.detach_changeHistoryItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_historyType", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string historyType
		{
			get
			{
				return this._historyType;
			}
			set
			{
				if ((this._historyType != value))
				{
					this.OnhistoryTypeChanging(value);
					this.SendPropertyChanging();
					this._historyType = value;
					this.SendPropertyChanged("historyType");
					this.OnhistoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contextID", DbType="BigInt NOT NULL")]
		public long contextID
		{
			get
			{
				return this._contextID;
			}
			set
			{
				if ((this._contextID != value))
				{
					this.OncontextIDChanging(value);
					this.SendPropertyChanging();
					this._contextID = value;
					this.SendPropertyChanged("contextID");
					this.OncontextIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="changeHistory_changeHistoryItem", Storage="_changeHistoryItems", ThisKey="id", OtherKey="changeID")]
		public EntitySet<changeHistoryItem> changeHistoryItems
		{
			get
			{
				return this._changeHistoryItems;
			}
			set
			{
				this._changeHistoryItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_changeHistoryItems(changeHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.changeHistory = this;
		}
		
		private void detach_changeHistoryItems(changeHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.changeHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.changeHistoryItems")]
	public partial class changeHistoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _changeID;
		
		private string _changedField;
		
		private string _oldValue;
		
		private string _newValue;
		
		private System.DateTime _changeDate;
		
		private long _changer;
		
		private EntityRef<changeHistory> _changeHistory;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnchangeIDChanging(long value);
    partial void OnchangeIDChanged();
    partial void OnchangedFieldChanging(string value);
    partial void OnchangedFieldChanged();
    partial void OnoldValueChanging(string value);
    partial void OnoldValueChanged();
    partial void OnnewValueChanging(string value);
    partial void OnnewValueChanged();
    partial void OnchangeDateChanging(System.DateTime value);
    partial void OnchangeDateChanged();
    partial void OnchangerChanging(long value);
    partial void OnchangerChanged();
    #endregion
		
		public changeHistoryItem()
		{
			this._changeHistory = default(EntityRef<changeHistory>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changeID", DbType="BigInt NOT NULL")]
		public long changeID
		{
			get
			{
				return this._changeID;
			}
			set
			{
				if ((this._changeID != value))
				{
					if (this._changeHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchangeIDChanging(value);
					this.SendPropertyChanging();
					this._changeID = value;
					this.SendPropertyChanged("changeID");
					this.OnchangeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changedField", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string changedField
		{
			get
			{
				return this._changedField;
			}
			set
			{
				if ((this._changedField != value))
				{
					this.OnchangedFieldChanging(value);
					this.SendPropertyChanging();
					this._changedField = value;
					this.SendPropertyChanged("changedField");
					this.OnchangedFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldValue", DbType="VarChar(1000)")]
		public string oldValue
		{
			get
			{
				return this._oldValue;
			}
			set
			{
				if ((this._oldValue != value))
				{
					this.OnoldValueChanging(value);
					this.SendPropertyChanging();
					this._oldValue = value;
					this.SendPropertyChanged("oldValue");
					this.OnoldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newValue", DbType="VarChar(1000)")]
		public string newValue
		{
			get
			{
				return this._newValue;
			}
			set
			{
				if ((this._newValue != value))
				{
					this.OnnewValueChanging(value);
					this.SendPropertyChanging();
					this._newValue = value;
					this.SendPropertyChanged("newValue");
					this.OnnewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changeDate", DbType="DateTime NOT NULL")]
		public System.DateTime changeDate
		{
			get
			{
				return this._changeDate;
			}
			set
			{
				if ((this._changeDate != value))
				{
					this.OnchangeDateChanging(value);
					this.SendPropertyChanging();
					this._changeDate = value;
					this.SendPropertyChanged("changeDate");
					this.OnchangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_changer", DbType="BigInt NOT NULL")]
		public long changer
		{
			get
			{
				return this._changer;
			}
			set
			{
				if ((this._changer != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnchangerChanging(value);
					this.SendPropertyChanging();
					this._changer = value;
					this.SendPropertyChanged("changer");
					this.OnchangerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="changeHistory_changeHistoryItem", Storage="_changeHistory", ThisKey="changeID", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public changeHistory changeHistory
		{
			get
			{
				return this._changeHistory.Entity;
			}
			set
			{
				changeHistory previousValue = this._changeHistory.Entity;
				if (((previousValue != value) 
							|| (this._changeHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._changeHistory.Entity = null;
						previousValue.changeHistoryItems.Remove(this);
					}
					this._changeHistory.Entity = value;
					if ((value != null))
					{
						value.changeHistoryItems.Add(this);
						this._changeID = value.id;
					}
					else
					{
						this._changeID = default(long);
					}
					this.SendPropertyChanged("changeHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_changeHistoryItem", Storage="_user", ThisKey="changer", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.changeHistoryItems.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.changeHistoryItems.Add(this);
						this._changer = value.id;
					}
					else
					{
						this._changer = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ELMAH_Error")]
	public partial class ELMAH_Error : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ErrorId;
		
		private string _Application;
		
		private string _Host;
		
		private string _Type;
		
		private string _Source;
		
		private string _Message;
		
		private string _User;
		
		private int _StatusCode;
		
		private System.DateTime _TimeUtc;
		
		private int _Sequence;
		
		private string _AllXml;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorIdChanging(System.Guid value);
    partial void OnErrorIdChanged();
    partial void OnApplicationChanging(string value);
    partial void OnApplicationChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnUserChanging(string value);
    partial void OnUserChanged();
    partial void OnStatusCodeChanging(int value);
    partial void OnStatusCodeChanged();
    partial void OnTimeUtcChanging(System.DateTime value);
    partial void OnTimeUtcChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnAllXmlChanging(string value);
    partial void OnAllXmlChanged();
    #endregion
		
		public ELMAH_Error()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ErrorId
		{
			get
			{
				return this._ErrorId;
			}
			set
			{
				if ((this._ErrorId != value))
				{
					this.OnErrorIdChanging(value);
					this.SendPropertyChanging();
					this._ErrorId = value;
					this.SendPropertyChanged("ErrorId");
					this.OnErrorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Application
		{
			get
			{
				return this._Application;
			}
			set
			{
				if ((this._Application != value))
				{
					this.OnApplicationChanging(value);
					this.SendPropertyChanging();
					this._Application = value;
					this.SendPropertyChanged("Application");
					this.OnApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Host", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusCode", DbType="Int NOT NULL")]
		public int StatusCode
		{
			get
			{
				return this._StatusCode;
			}
			set
			{
				if ((this._StatusCode != value))
				{
					this.OnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._StatusCode = value;
					this.SendPropertyChanged("StatusCode");
					this.OnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime TimeUtc
		{
			get
			{
				return this._TimeUtc;
			}
			set
			{
				if ((this._TimeUtc != value))
				{
					this.OnTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._TimeUtc = value;
					this.SendPropertyChanged("TimeUtc");
					this.OnTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllXml", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AllXml
		{
			get
			{
				return this._AllXml;
			}
			set
			{
				if ((this._AllXml != value))
				{
					this.OnAllXmlChanging(value);
					this.SendPropertyChanging();
					this._AllXml = value;
					this.SendPropertyChanged("AllXml");
					this.OnAllXmlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.favourites")]
	public partial class favourite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _owner;
		
		private long _productid;
		
		private EntityRef<user> _user;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnownerChanging(long value);
    partial void OnownerChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    #endregion
		
		public favourite()
		{
			this._user = default(EntityRef<user>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="BigInt NOT NULL")]
		public long owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_favourite", Storage="_user", ThisKey="owner", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.favourites.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.favourites.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_favourite", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.favourites.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.favourites.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.friends")]
	public partial class friend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomainid;
		
		private long _friendsubdomainid;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnfriendsubdomainidChanging(long value);
    partial void OnfriendsubdomainidChanged();
    #endregion
		
		public friend()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			this._MASTERsubdomain1 = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_friendsubdomainid", DbType="BigInt NOT NULL")]
		public long friendsubdomainid
		{
			get
			{
				return this._friendsubdomainid;
			}
			set
			{
				if ((this._friendsubdomainid != value))
				{
					if (this._MASTERsubdomain1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfriendsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._friendsubdomainid = value;
					this.SendPropertyChanged("friendsubdomainid");
					this.OnfriendsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_friend", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.friends.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.friends.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_friend1", Storage="_MASTERsubdomain1", ThisKey="friendsubdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain1
		{
			get
			{
				return this._MASTERsubdomain1.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain1.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain1.Entity = null;
						previousValue.friends1.Remove(this);
					}
					this._MASTERsubdomain1.Entity = value;
					if ((value != null))
					{
						value.friends1.Add(this);
						this._friendsubdomainid = value.id;
					}
					else
					{
						this._friendsubdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MASTERcity")]
	public partial class MASTERcity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private EntitySet<organisation> _organisations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public MASTERcity()
		{
			this._organisations = new EntitySet<organisation>(new Action<organisation>(this.attach_organisations), new Action<organisation>(this.detach_organisations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERcity_organisation", Storage="_organisations", ThisKey="id", OtherKey="city")]
		public EntitySet<organisation> organisations
		{
			get
			{
				return this._organisations;
			}
			set
			{
				this._organisations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.MASTERcity = this;
		}
		
		private void detach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.MASTERcity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MASTERproductCategory")]
	public partial class MASTERproductCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private EntitySet<productCategory> _productCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public MASTERproductCategory()
		{
			this._productCategories = new EntitySet<productCategory>(new Action<productCategory>(this.attach_productCategories), new Action<productCategory>(this.detach_productCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERproductCategory_productCategory", Storage="_productCategories", ThisKey="id", OtherKey="masterID")]
		public EntitySet<productCategory> productCategories
		{
			get
			{
				return this._productCategories;
			}
			set
			{
				this._productCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_productCategories(productCategory entity)
		{
			this.SendPropertyChanging();
			entity.MASTERproductCategory = this;
		}
		
		private void detach_productCategories(productCategory entity)
		{
			this.SendPropertyChanging();
			entity.MASTERproductCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MASTERstockUnit")]
	public partial class MASTERstockUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private EntitySet<stockUnit> _stockUnits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public MASTERstockUnit()
		{
			this._stockUnits = new EntitySet<stockUnit>(new Action<stockUnit>(this.attach_stockUnits), new Action<stockUnit>(this.detach_stockUnits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERstockUnit_stockUnit", Storage="_stockUnits", ThisKey="id", OtherKey="unitID")]
		public EntitySet<stockUnit> stockUnits
		{
			get
			{
				return this._stockUnits;
			}
			set
			{
				this._stockUnits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_stockUnits(stockUnit entity)
		{
			this.SendPropertyChanging();
			entity.MASTERstockUnit = this;
		}
		
		private void detach_stockUnits(stockUnit entity)
		{
			this.SendPropertyChanging();
			entity.MASTERstockUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.facebookPages")]
	public partial class facebookPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _pageid;
		
		private long _subdomainid;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpageidChanging(string value);
    partial void OnpageidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public facebookPage()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_facebookPage", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.facebookPages.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.facebookPages.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.opensocialPages")]
	public partial class opensocialPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _osid;
		
		private long _subdomainid;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnosidChanging(string value);
    partial void OnosidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public opensocialPage()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_osid", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string osid
		{
			get
			{
				return this._osid;
			}
			set
			{
				if ((this._osid != value))
				{
					this.OnosidChanging(value);
					this.SendPropertyChanging();
					this._osid = value;
					this.SendPropertyChanged("osid");
					this.OnosidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_opensocialPage", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.opensocialPages.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.opensocialPages.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.googleBlogsProductPosts")]
	public partial class googleBlogsProductPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _productid;
		
		private string _postUrl;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OnpostUrlChanging(string value);
    partial void OnpostUrlChanged();
    #endregion
		
		public googleBlogsProductPost()
		{
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string postUrl
		{
			get
			{
				return this._postUrl;
			}
			set
			{
				if ((this._postUrl != value))
				{
					this.OnpostUrlChanging(value);
					this.SendPropertyChanging();
					this._postUrl = value;
					this.SendPropertyChanged("postUrl");
					this.OnpostUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_googleBlogsProductPost", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.googleBlogsProductPosts.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.googleBlogsProductPosts.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.twitterSearches")]
	public partial class twitterSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _keyword;
		
		private long _subdomainid;
		
		private long _parameters;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnkeywordChanging(string value);
    partial void OnkeywordChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnparametersChanging(long value);
    partial void OnparametersChanged();
    #endregion
		
		public twitterSearch()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyword", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string keyword
		{
			get
			{
				return this._keyword;
			}
			set
			{
				if ((this._keyword != value))
				{
					this.OnkeywordChanging(value);
					this.SendPropertyChanging();
					this._keyword = value;
					this.SendPropertyChanged("keyword");
					this.OnkeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameters", DbType="BigInt NOT NULL")]
		public long parameters
		{
			get
			{
				return this._parameters;
			}
			set
			{
				if ((this._parameters != value))
				{
					this.OnparametersChanging(value);
					this.SendPropertyChanging();
					this._parameters = value;
					this.SendPropertyChanged("parameters");
					this.OnparametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_twitterSearch", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.twitterSearches.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.twitterSearches.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.images")]
	public partial class image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomain;
		
		private long _contextID;
		
		private string _url;
		
		private string _imageType;
		
		private EntityRef<video> _videos;
		
		private EntitySet<organisation> _organisations;
		
		private EntitySet<user> _users;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainChanging(long value);
    partial void OnsubdomainChanged();
    partial void OncontextIDChanging(long value);
    partial void OncontextIDChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnimageTypeChanging(string value);
    partial void OnimageTypeChanged();
    #endregion
		
		public image()
		{
			this._videos = default(EntityRef<video>);
			this._organisations = new EntitySet<organisation>(new Action<organisation>(this.attach_organisations), new Action<organisation>(this.detach_organisations));
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomain", DbType="BigInt NOT NULL")]
		public long subdomain
		{
			get
			{
				return this._subdomain;
			}
			set
			{
				if ((this._subdomain != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainChanging(value);
					this.SendPropertyChanging();
					this._subdomain = value;
					this.SendPropertyChanged("subdomain");
					this.OnsubdomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contextID", DbType="BigInt NOT NULL")]
		public long contextID
		{
			get
			{
				return this._contextID;
			}
			set
			{
				if ((this._contextID != value))
				{
					this.OncontextIDChanging(value);
					this.SendPropertyChanging();
					this._contextID = value;
					this.SendPropertyChanged("contextID");
					this.OncontextIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageType", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string imageType
		{
			get
			{
				return this._imageType;
			}
			set
			{
				if ((this._imageType != value))
				{
					this.OnimageTypeChanging(value);
					this.SendPropertyChanging();
					this._imageType = value;
					this.SendPropertyChanged("imageType");
					this.OnimageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_video", Storage="_videos", ThisKey="id", OtherKey="thumbnailid", IsUnique=true, IsForeignKey=false)]
		public video videos
		{
			get
			{
				return this._videos.Entity;
			}
			set
			{
				video previousValue = this._videos.Entity;
				if (((previousValue != value) 
							|| (this._videos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._videos.Entity = null;
						previousValue.image = null;
					}
					this._videos.Entity = value;
					if ((value != null))
					{
						value.image = this;
					}
					this.SendPropertyChanged("videos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_organisation", Storage="_organisations", ThisKey="id", OtherKey="logo")]
		public EntitySet<organisation> organisations
		{
			get
			{
				return this._organisations;
			}
			set
			{
				this._organisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_user", Storage="_users", ThisKey="id", OtherKey="profilePhoto")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_image", Storage="_MASTERsubdomain", ThisKey="subdomain", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.images.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.images.Add(this);
						this._subdomain = value.id;
					}
					else
					{
						this._subdomain = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.image = this;
		}
		
		private void detach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.image = null;
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.image = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.image = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventoryLocations")]
	public partial class inventoryLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomain;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private EntitySet<inventoryLocationItem> _inventoryLocationItems;
		
		private EntitySet<order> _orders;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainChanging(long value);
    partial void OnsubdomainChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    #endregion
		
		public inventoryLocation()
		{
			this._inventoryLocationItems = new EntitySet<inventoryLocationItem>(new Action<inventoryLocationItem>(this.attach_inventoryLocationItems), new Action<inventoryLocationItem>(this.detach_inventoryLocationItems));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomain", DbType="BigInt NOT NULL")]
		public long subdomain
		{
			get
			{
				return this._subdomain;
			}
			set
			{
				if ((this._subdomain != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainChanging(value);
					this.SendPropertyChanging();
					this._subdomain = value;
					this.SendPropertyChanged("subdomain");
					this.OnsubdomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventoryLocation_inventoryLocationItem", Storage="_inventoryLocationItems", ThisKey="id", OtherKey="locationid")]
		public EntitySet<inventoryLocationItem> inventoryLocationItems
		{
			get
			{
				return this._inventoryLocationItems;
			}
			set
			{
				this._inventoryLocationItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventoryLocation_order", Storage="_orders", ThisKey="id", OtherKey="inventoryLocation")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_inventoryLocation", Storage="_MASTERsubdomain", ThisKey="subdomain", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.inventoryLocations.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.inventoryLocations.Add(this);
						this._subdomain = value.id;
					}
					else
					{
						this._subdomain = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inventoryLocationItems(inventoryLocationItem entity)
		{
			this.SendPropertyChanging();
			entity.inventoryLocation = this;
		}
		
		private void detach_inventoryLocationItems(inventoryLocationItem entity)
		{
			this.SendPropertyChanging();
			entity.inventoryLocation = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.inventoryLocation1 = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.inventoryLocation1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.productCategories")]
	public partial class productCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _masterID;
		
		private string _details;
		
		private long _subdomain;
		
		private System.Nullable<long> _parentID;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private EntitySet<productCategory> _productCategories;
		
		private EntitySet<product> _products;
		
		private EntityRef<MASTERproductCategory> _MASTERproductCategory;
		
		private EntityRef<productCategory> _productCategory1;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnmasterIDChanging(long value);
    partial void OnmasterIDChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnsubdomainChanging(long value);
    partial void OnsubdomainChanged();
    partial void OnparentIDChanging(System.Nullable<long> value);
    partial void OnparentIDChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    #endregion
		
		public productCategory()
		{
			this._productCategories = new EntitySet<productCategory>(new Action<productCategory>(this.attach_productCategories), new Action<productCategory>(this.detach_productCategories));
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._MASTERproductCategory = default(EntityRef<MASTERproductCategory>);
			this._productCategory1 = default(EntityRef<productCategory>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masterID", DbType="BigInt NOT NULL")]
		public long masterID
		{
			get
			{
				return this._masterID;
			}
			set
			{
				if ((this._masterID != value))
				{
					if (this._MASTERproductCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmasterIDChanging(value);
					this.SendPropertyChanging();
					this._masterID = value;
					this.SendPropertyChanged("masterID");
					this.OnmasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="NVarChar(1000)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomain", DbType="BigInt NOT NULL")]
		public long subdomain
		{
			get
			{
				return this._subdomain;
			}
			set
			{
				if ((this._subdomain != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainChanging(value);
					this.SendPropertyChanging();
					this._subdomain = value;
					this.SendPropertyChanged("subdomain");
					this.OnsubdomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="BigInt")]
		public System.Nullable<long> parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					if (this._productCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productCategory_productCategory", Storage="_productCategories", ThisKey="id", OtherKey="parentID")]
		public EntitySet<productCategory> productCategories
		{
			get
			{
				return this._productCategories;
			}
			set
			{
				this._productCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productCategory_product", Storage="_products", ThisKey="id", OtherKey="category")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERproductCategory_productCategory", Storage="_MASTERproductCategory", ThisKey="masterID", OtherKey="id", IsForeignKey=true)]
		public MASTERproductCategory MASTERproductCategory
		{
			get
			{
				return this._MASTERproductCategory.Entity;
			}
			set
			{
				MASTERproductCategory previousValue = this._MASTERproductCategory.Entity;
				if (((previousValue != value) 
							|| (this._MASTERproductCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERproductCategory.Entity = null;
						previousValue.productCategories.Remove(this);
					}
					this._MASTERproductCategory.Entity = value;
					if ((value != null))
					{
						value.productCategories.Add(this);
						this._masterID = value.id;
					}
					else
					{
						this._masterID = default(long);
					}
					this.SendPropertyChanged("MASTERproductCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productCategory_productCategory", Storage="_productCategory1", ThisKey="parentID", OtherKey="id", IsForeignKey=true)]
		public productCategory productCategory1
		{
			get
			{
				return this._productCategory1.Entity;
			}
			set
			{
				productCategory previousValue = this._productCategory1.Entity;
				if (((previousValue != value) 
							|| (this._productCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._productCategory1.Entity = null;
						previousValue.productCategories.Remove(this);
					}
					this._productCategory1.Entity = value;
					if ((value != null))
					{
						value.productCategories.Add(this);
						this._parentID = value.id;
					}
					else
					{
						this._parentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("productCategory1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_productCategory", Storage="_MASTERsubdomain", ThisKey="subdomain", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.productCategories.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.productCategories.Add(this);
						this._subdomain = value.id;
					}
					else
					{
						this._subdomain = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_productCategories(productCategory entity)
		{
			this.SendPropertyChanging();
			entity.productCategory1 = this;
		}
		
		private void detach_productCategories(productCategory entity)
		{
			this.SendPropertyChanging();
			entity.productCategory1 = null;
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.productCategory = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.productCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.messages")]
	public partial class message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _sender;
		
		private long _recipient;
		
		private string _title;
		
		private string _body;
		
		private bool _readStatus;
		
		private bool _senderDeleted;
		
		private bool _recipientDeleted;
		
		private System.DateTime _created;
		
		private string _type;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsenderChanging(long value);
    partial void OnsenderChanged();
    partial void OnrecipientChanging(long value);
    partial void OnrecipientChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnreadStatusChanging(bool value);
    partial void OnreadStatusChanged();
    partial void OnsenderDeletedChanging(bool value);
    partial void OnsenderDeletedChanged();
    partial void OnrecipientDeletedChanging(bool value);
    partial void OnrecipientDeletedChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public message()
		{
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender", DbType="BigInt NOT NULL")]
		public long sender
		{
			get
			{
				return this._sender;
			}
			set
			{
				if ((this._sender != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsenderChanging(value);
					this.SendPropertyChanging();
					this._sender = value;
					this.SendPropertyChanged("sender");
					this.OnsenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipient", DbType="BigInt NOT NULL")]
		public long recipient
		{
			get
			{
				return this._recipient;
			}
			set
			{
				if ((this._recipient != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnrecipientChanging(value);
					this.SendPropertyChanging();
					this._recipient = value;
					this.SendPropertyChanged("recipient");
					this.OnrecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_readStatus", DbType="Bit NOT NULL")]
		public bool readStatus
		{
			get
			{
				return this._readStatus;
			}
			set
			{
				if ((this._readStatus != value))
				{
					this.OnreadStatusChanging(value);
					this.SendPropertyChanging();
					this._readStatus = value;
					this.SendPropertyChanged("readStatus");
					this.OnreadStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_senderDeleted", DbType="Bit NOT NULL")]
		public bool senderDeleted
		{
			get
			{
				return this._senderDeleted;
			}
			set
			{
				if ((this._senderDeleted != value))
				{
					this.OnsenderDeletedChanging(value);
					this.SendPropertyChanging();
					this._senderDeleted = value;
					this.SendPropertyChanged("senderDeleted");
					this.OnsenderDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipientDeleted", DbType="Bit NOT NULL")]
		public bool recipientDeleted
		{
			get
			{
				return this._recipientDeleted;
			}
			set
			{
				if ((this._recipientDeleted != value))
				{
					this.OnrecipientDeletedChanging(value);
					this.SendPropertyChanging();
					this._recipientDeleted = value;
					this.SendPropertyChanged("recipientDeleted");
					this.OnrecipientDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_message", Storage="_user", ThisKey="recipient", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.messages.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.messages.Add(this);
						this._recipient = value.id;
					}
					else
					{
						this._recipient = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_message1", Storage="_user1", ThisKey="sender", OtherKey="id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.messages1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.messages1.Add(this);
						this._sender = value.id;
					}
					else
					{
						this._sender = default(long);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.linkRequests")]
	public partial class linkRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _friendid;
		
		private long _userid;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnfriendidChanging(long value);
    partial void OnfriendidChanged();
    partial void OnuseridChanging(long value);
    partial void OnuseridChanged();
    #endregion
		
		public linkRequest()
		{
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_friendid", DbType="BigInt NOT NULL")]
		public long friendid
		{
			get
			{
				return this._friendid;
			}
			set
			{
				if ((this._friendid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfriendidChanging(value);
					this.SendPropertyChanging();
					this._friendid = value;
					this.SendPropertyChanged("friendid");
					this.OnfriendidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="BigInt NOT NULL")]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_linkRequest", Storage="_user", ThisKey="friendid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.linkRequests.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.linkRequests.Add(this);
						this._friendid = value.id;
					}
					else
					{
						this._friendid = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_linkRequest1", Storage="_user1", ThisKey="userid", OtherKey="id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.linkRequests1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.linkRequests1.Add(this);
						this._userid = value.id;
					}
					else
					{
						this._userid = default(long);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shipwireTransactions")]
	public partial class shipwireTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transactionid;
		
		private long _orderid;
		
		private System.Xml.Linq.XElement _message;
		
		private string _state;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransactionidChanging(string value);
    partial void OntransactionidChanged();
    partial void OnorderidChanging(long value);
    partial void OnorderidChanged();
    partial void OnmessageChanging(System.Xml.Linq.XElement value);
    partial void OnmessageChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    #endregion
		
		public shipwireTransaction()
		{
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionid", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string transactionid
		{
			get
			{
				return this._transactionid;
			}
			set
			{
				if ((this._transactionid != value))
				{
					this.OntransactionidChanging(value);
					this.SendPropertyChanging();
					this._transactionid = value;
					this.SendPropertyChanged("transactionid");
					this.OntransactionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(20)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_shipwireTransaction", Storage="_order", ThisKey="orderid", OtherKey="id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.shipwireTransaction = null;
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.shipwireTransaction = this;
						this._orderid = value.id;
					}
					else
					{
						this._orderid = default(long);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.googleBlogs")]
	public partial class googleBlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomainid;
		
		private string _title;
		
		private string _blogUri;
		
		private string _blogHref;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnblogUriChanging(string value);
    partial void OnblogUriChanged();
    partial void OnblogHrefChanging(string value);
    partial void OnblogHrefChanged();
    #endregion
		
		public googleBlog()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogUri", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string blogUri
		{
			get
			{
				return this._blogUri;
			}
			set
			{
				if ((this._blogUri != value))
				{
					this.OnblogUriChanging(value);
					this.SendPropertyChanging();
					this._blogUri = value;
					this.SendPropertyChanged("blogUri");
					this.OnblogUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogHref", DbType="VarChar(128)")]
		public string blogHref
		{
			get
			{
				return this._blogHref;
			}
			set
			{
				if ((this._blogHref != value))
				{
					this.OnblogHrefChanging(value);
					this.SendPropertyChanging();
					this._blogHref = value;
					this.SendPropertyChanged("blogHref");
					this.OnblogHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_googleBlog", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.googleBlogs.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.googleBlogs.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_comments")]
	public partial class product_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _productid;
		
		private long _commenter;
		
		private System.DateTime _created;
		
		private System.Nullable<long> _replyto;
		
		private string _comment;
		
		private long _subdomainid;
		
		private EntitySet<product_comment> _product_comments;
		
		private EntityRef<product_comment> _product_comment1;
		
		private EntityRef<user> _user;
		
		private EntityRef<product> _product;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OncommenterChanging(long value);
    partial void OncommenterChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnreplytoChanging(System.Nullable<long> value);
    partial void OnreplytoChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public product_comment()
		{
			this._product_comments = new EntitySet<product_comment>(new Action<product_comment>(this.attach_product_comments), new Action<product_comment>(this.detach_product_comments));
			this._product_comment1 = default(EntityRef<product_comment>);
			this._user = default(EntityRef<user>);
			this._product = default(EntityRef<product>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commenter", DbType="BigInt NOT NULL")]
		public long commenter
		{
			get
			{
				return this._commenter;
			}
			set
			{
				if ((this._commenter != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncommenterChanging(value);
					this.SendPropertyChanging();
					this._commenter = value;
					this.SendPropertyChanged("commenter");
					this.OncommenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replyto", DbType="BigInt")]
		public System.Nullable<long> replyto
		{
			get
			{
				return this._replyto;
			}
			set
			{
				if ((this._replyto != value))
				{
					if (this._product_comment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreplytoChanging(value);
					this.SendPropertyChanging();
					this._replyto = value;
					this.SendPropertyChanged("replyto");
					this.OnreplytoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_comment_product_comment", Storage="_product_comments", ThisKey="id", OtherKey="replyto")]
		public EntitySet<product_comment> product_comments
		{
			get
			{
				return this._product_comments;
			}
			set
			{
				this._product_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_comment_product_comment", Storage="_product_comment1", ThisKey="replyto", OtherKey="id", IsForeignKey=true)]
		public product_comment product_comment1
		{
			get
			{
				return this._product_comment1.Entity;
			}
			set
			{
				product_comment previousValue = this._product_comment1.Entity;
				if (((previousValue != value) 
							|| (this._product_comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_comment1.Entity = null;
						previousValue.product_comments.Remove(this);
					}
					this._product_comment1.Entity = value;
					if ((value != null))
					{
						value.product_comments.Add(this);
						this._replyto = value.id;
					}
					else
					{
						this._replyto = default(Nullable<long>);
					}
					this.SendPropertyChanged("product_comment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_product_comment", Storage="_user", ThisKey="commenter", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.product_comments.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.product_comments.Add(this);
						this._commenter = value.id;
					}
					else
					{
						this._commenter = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_comment", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.product_comments.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.product_comments.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product_comment", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.product_comments.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.product_comments.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.product_comment1 = this;
		}
		
		private void detach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.product_comment1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.videos")]
	public partial class video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _youtubeid;
		
		private long _thumbnailid;
		
		private long _subdomainid;
		
		private EntityRef<image> _image;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnyoutubeidChanging(string value);
    partial void OnyoutubeidChanged();
    partial void OnthumbnailidChanging(long value);
    partial void OnthumbnailidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public video()
		{
			this._image = default(EntityRef<image>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_youtubeid", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string youtubeid
		{
			get
			{
				return this._youtubeid;
			}
			set
			{
				if ((this._youtubeid != value))
				{
					this.OnyoutubeidChanging(value);
					this.SendPropertyChanging();
					this._youtubeid = value;
					this.SendPropertyChanged("youtubeid");
					this.OnyoutubeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnailid", DbType="BigInt NOT NULL")]
		public long thumbnailid
		{
			get
			{
				return this._thumbnailid;
			}
			set
			{
				if ((this._thumbnailid != value))
				{
					if (this._image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnthumbnailidChanging(value);
					this.SendPropertyChanging();
					this._thumbnailid = value;
					this.SendPropertyChanged("thumbnailid");
					this.OnthumbnailidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_video", Storage="_image", ThisKey="thumbnailid", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public image image
		{
			get
			{
				return this._image.Entity;
			}
			set
			{
				image previousValue = this._image.Entity;
				if (((previousValue != value) 
							|| (this._image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._image.Entity = null;
						previousValue.videos = null;
					}
					this._image.Entity = value;
					if ((value != null))
					{
						value.videos = this;
						this._thumbnailid = value.id;
					}
					else
					{
						this._thumbnailid = default(long);
					}
					this.SendPropertyChanged("image");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_video", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.videos.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.videos.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transactions")]
	public partial class transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _primaryOrderID;
		
		private System.Nullable<long> _secondaryOrderID;
		
		private System.Nullable<long> _reviewid;
		
		private EntitySet<comment> _comments;
		
		private EntityRef<review> _review;
		
		private EntityRef<order> _order;
		
		private EntityRef<order> _order1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnprimaryOrderIDChanging(long value);
    partial void OnprimaryOrderIDChanged();
    partial void OnsecondaryOrderIDChanging(System.Nullable<long> value);
    partial void OnsecondaryOrderIDChanged();
    partial void OnreviewidChanging(System.Nullable<long> value);
    partial void OnreviewidChanged();
    #endregion
		
		public transaction()
		{
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._review = default(EntityRef<review>);
			this._order = default(EntityRef<order>);
			this._order1 = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryOrderID", DbType="BigInt NOT NULL")]
		public long primaryOrderID
		{
			get
			{
				return this._primaryOrderID;
			}
			set
			{
				if ((this._primaryOrderID != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprimaryOrderIDChanging(value);
					this.SendPropertyChanging();
					this._primaryOrderID = value;
					this.SendPropertyChanged("primaryOrderID");
					this.OnprimaryOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryOrderID", DbType="BigInt")]
		public System.Nullable<long> secondaryOrderID
		{
			get
			{
				return this._secondaryOrderID;
			}
			set
			{
				if ((this._secondaryOrderID != value))
				{
					if (this._order1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsecondaryOrderIDChanging(value);
					this.SendPropertyChanging();
					this._secondaryOrderID = value;
					this.SendPropertyChanged("secondaryOrderID");
					this.OnsecondaryOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reviewid", DbType="BigInt")]
		public System.Nullable<long> reviewid
		{
			get
			{
				return this._reviewid;
			}
			set
			{
				if ((this._reviewid != value))
				{
					if (this._review.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreviewidChanging(value);
					this.SendPropertyChanging();
					this._reviewid = value;
					this.SendPropertyChanged("reviewid");
					this.OnreviewidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transaction_comment", Storage="_comments", ThisKey="id", OtherKey="transactionID")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="review_transaction", Storage="_review", ThisKey="reviewid", OtherKey="id", IsForeignKey=true)]
		public review review
		{
			get
			{
				return this._review.Entity;
			}
			set
			{
				review previousValue = this._review.Entity;
				if (((previousValue != value) 
							|| (this._review.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._review.Entity = null;
						previousValue.transactions.Remove(this);
					}
					this._review.Entity = value;
					if ((value != null))
					{
						value.transactions.Add(this);
						this._reviewid = value.id;
					}
					else
					{
						this._reviewid = default(Nullable<long>);
					}
					this.SendPropertyChanged("review");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_transaction", Storage="_order", ThisKey="primaryOrderID", OtherKey="id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.transactions = null;
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.transactions = this;
						this._primaryOrderID = value.id;
					}
					else
					{
						this._primaryOrderID = default(long);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_transaction1", Storage="_order1", ThisKey="secondaryOrderID", OtherKey="id", IsForeignKey=true)]
		public order order1
		{
			get
			{
				return this._order1.Entity;
			}
			set
			{
				order previousValue = this._order1.Entity;
				if (((previousValue != value) 
							|| (this._order1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order1.Entity = null;
						previousValue.transactions1.Remove(this);
					}
					this._order1.Entity = value;
					if ((value != null))
					{
						value.transactions1.Add(this);
						this._secondaryOrderID = value.id;
					}
					else
					{
						this._secondaryOrderID = default(Nullable<long>);
					}
					this.SendPropertyChanged("order1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.transaction = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.transaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reviews")]
	public partial class review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _comment;
		
		private System.DateTime _created;
		
		private byte _rating_overall;
		
		private byte _rating_willshopagain;
		
		private byte _rating_delivery;
		
		private byte _rating_support;
		
		private string _response;
		
		private bool _pending;
		
		private long _subdomainid;
		
		private EntitySet<transaction> _transactions;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void Onrating_overallChanging(byte value);
    partial void Onrating_overallChanged();
    partial void Onrating_willshopagainChanging(byte value);
    partial void Onrating_willshopagainChanged();
    partial void Onrating_deliveryChanging(byte value);
    partial void Onrating_deliveryChanged();
    partial void Onrating_supportChanging(byte value);
    partial void Onrating_supportChanged();
    partial void OnresponseChanging(string value);
    partial void OnresponseChanged();
    partial void OnpendingChanging(bool value);
    partial void OnpendingChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public review()
		{
			this._transactions = new EntitySet<transaction>(new Action<transaction>(this.attach_transactions), new Action<transaction>(this.detach_transactions));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(500)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_overall", DbType="TinyInt NOT NULL")]
		public byte rating_overall
		{
			get
			{
				return this._rating_overall;
			}
			set
			{
				if ((this._rating_overall != value))
				{
					this.Onrating_overallChanging(value);
					this.SendPropertyChanging();
					this._rating_overall = value;
					this.SendPropertyChanged("rating_overall");
					this.Onrating_overallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_willshopagain", DbType="TinyInt NOT NULL")]
		public byte rating_willshopagain
		{
			get
			{
				return this._rating_willshopagain;
			}
			set
			{
				if ((this._rating_willshopagain != value))
				{
					this.Onrating_willshopagainChanging(value);
					this.SendPropertyChanging();
					this._rating_willshopagain = value;
					this.SendPropertyChanged("rating_willshopagain");
					this.Onrating_willshopagainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_delivery", DbType="TinyInt NOT NULL")]
		public byte rating_delivery
		{
			get
			{
				return this._rating_delivery;
			}
			set
			{
				if ((this._rating_delivery != value))
				{
					this.Onrating_deliveryChanging(value);
					this.SendPropertyChanging();
					this._rating_delivery = value;
					this.SendPropertyChanged("rating_delivery");
					this.Onrating_deliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating_support", DbType="TinyInt NOT NULL")]
		public byte rating_support
		{
			get
			{
				return this._rating_support;
			}
			set
			{
				if ((this._rating_support != value))
				{
					this.Onrating_supportChanging(value);
					this.SendPropertyChanging();
					this._rating_support = value;
					this.SendPropertyChanged("rating_support");
					this.Onrating_supportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response", DbType="NVarChar(500)")]
		public string response
		{
			get
			{
				return this._response;
			}
			set
			{
				if ((this._response != value))
				{
					this.OnresponseChanging(value);
					this.SendPropertyChanging();
					this._response = value;
					this.SendPropertyChanged("response");
					this.OnresponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pending", DbType="Bit NOT NULL")]
		public bool pending
		{
			get
			{
				return this._pending;
			}
			set
			{
				if ((this._pending != value))
				{
					this.OnpendingChanging(value);
					this.SendPropertyChanging();
					this._pending = value;
					this.SendPropertyChanged("pending");
					this.OnpendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="review_transaction", Storage="_transactions", ThisKey="id", OtherKey="reviewid")]
		public EntitySet<transaction> transactions
		{
			get
			{
				return this._transactions;
			}
			set
			{
				this._transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_review", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.reviews.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.reviews.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_transactions(transaction entity)
		{
			this.SendPropertyChanging();
			entity.review = this;
		}
		
		private void detach_transactions(transaction entity)
		{
			this.SendPropertyChanging();
			entity.review = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.oauth_tokens")]
	public partial class oauth_token : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _token_key;
		
		private string _token_secret;
		
		private string _type;
		
		private long _subdomainid;
		
		private string _appid;
		
		private string _guid;
		
		private bool _authorised;
		
		private System.Nullable<System.DateTime> _expires;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Ontoken_keyChanging(string value);
    partial void Ontoken_keyChanged();
    partial void Ontoken_secretChanging(string value);
    partial void Ontoken_secretChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnappidChanging(string value);
    partial void OnappidChanged();
    partial void OnguidChanging(string value);
    partial void OnguidChanged();
    partial void OnauthorisedChanging(bool value);
    partial void OnauthorisedChanged();
    partial void OnexpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiresChanged();
    #endregion
		
		public oauth_token()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token_key", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string token_key
		{
			get
			{
				return this._token_key;
			}
			set
			{
				if ((this._token_key != value))
				{
					this.Ontoken_keyChanging(value);
					this.SendPropertyChanging();
					this._token_key = value;
					this.SendPropertyChanged("token_key");
					this.Ontoken_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token_secret", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string token_secret
		{
			get
			{
				return this._token_secret;
			}
			set
			{
				if ((this._token_secret != value))
				{
					this.Ontoken_secretChanging(value);
					this.SendPropertyChanging();
					this._token_secret = value;
					this.SendPropertyChanged("token_secret");
					this.Ontoken_secretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appid", DbType="NVarChar(64)")]
		public string appid
		{
			get
			{
				return this._appid;
			}
			set
			{
				if ((this._appid != value))
				{
					this.OnappidChanging(value);
					this.SendPropertyChanging();
					this._appid = value;
					this.SendPropertyChanged("appid");
					this.OnappidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guid", DbType="VarChar(64)")]
		public string guid
		{
			get
			{
				return this._guid;
			}
			set
			{
				if ((this._guid != value))
				{
					this.OnguidChanging(value);
					this.SendPropertyChanging();
					this._guid = value;
					this.SendPropertyChanged("guid");
					this.OnguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorised", DbType="Bit NOT NULL")]
		public bool authorised
		{
			get
			{
				return this._authorised;
			}
			set
			{
				if ((this._authorised != value))
				{
					this.OnauthorisedChanging(value);
					this.SendPropertyChanging();
					this._authorised = value;
					this.SendPropertyChanged("authorised");
					this.OnauthorisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expires", DbType="DateTime")]
		public System.Nullable<System.DateTime> expires
		{
			get
			{
				return this._expires;
			}
			set
			{
				if ((this._expires != value))
				{
					this.OnexpiresChanging(value);
					this.SendPropertyChanging();
					this._expires = value;
					this.SendPropertyChanged("expires");
					this.OnexpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_oauth_token", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.oauth_tokens.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.oauth_tokens.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shippingRules")]
	public partial class shippingRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private byte _ruletype;
		
		private decimal _matchvalue;
		
		private decimal _cost;
		
		private decimal _secondaryCost;
		
		private System.Nullable<int> _country;
		
		private string _state;
		
		private long _profileid;
		
		private System.Nullable<long> _etsy_templateentryid;
		
		private EntityRef<shippingProfile> _shippingProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnruletypeChanging(byte value);
    partial void OnruletypeChanged();
    partial void OnmatchvalueChanging(decimal value);
    partial void OnmatchvalueChanged();
    partial void OncostChanging(decimal value);
    partial void OncostChanged();
    partial void OnsecondaryCostChanging(decimal value);
    partial void OnsecondaryCostChanged();
    partial void OncountryChanging(System.Nullable<int> value);
    partial void OncountryChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnprofileidChanging(long value);
    partial void OnprofileidChanged();
    partial void Onetsy_templateentryidChanging(System.Nullable<long> value);
    partial void Onetsy_templateentryidChanged();
    #endregion
		
		public shippingRule()
		{
			this._shippingProfile = default(EntityRef<shippingProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ruletype", DbType="TinyInt NOT NULL")]
		public byte ruletype
		{
			get
			{
				return this._ruletype;
			}
			set
			{
				if ((this._ruletype != value))
				{
					this.OnruletypeChanging(value);
					this.SendPropertyChanging();
					this._ruletype = value;
					this.SendPropertyChanged("ruletype");
					this.OnruletypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matchvalue", DbType="Decimal(10,2) NOT NULL")]
		public decimal matchvalue
		{
			get
			{
				return this._matchvalue;
			}
			set
			{
				if ((this._matchvalue != value))
				{
					this.OnmatchvalueChanging(value);
					this.SendPropertyChanging();
					this._matchvalue = value;
					this.SendPropertyChanged("matchvalue");
					this.OnmatchvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Money NOT NULL")]
		public decimal cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryCost", DbType="Money NOT NULL")]
		public decimal secondaryCost
		{
			get
			{
				return this._secondaryCost;
			}
			set
			{
				if ((this._secondaryCost != value))
				{
					this.OnsecondaryCostChanging(value);
					this.SendPropertyChanging();
					this._secondaryCost = value;
					this.SendPropertyChanged("secondaryCost");
					this.OnsecondaryCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="Int")]
		public System.Nullable<int> country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileid", DbType="BigInt NOT NULL")]
		public long profileid
		{
			get
			{
				return this._profileid;
			}
			set
			{
				if ((this._profileid != value))
				{
					if (this._shippingProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprofileidChanging(value);
					this.SendPropertyChanging();
					this._profileid = value;
					this.SendPropertyChanged("profileid");
					this.OnprofileidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etsy_templateentryid", DbType="BigInt")]
		public System.Nullable<long> etsy_templateentryid
		{
			get
			{
				return this._etsy_templateentryid;
			}
			set
			{
				if ((this._etsy_templateentryid != value))
				{
					this.Onetsy_templateentryidChanging(value);
					this.SendPropertyChanging();
					this._etsy_templateentryid = value;
					this.SendPropertyChanged("etsy_templateentryid");
					this.Onetsy_templateentryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shippingProfile_shippingRule", Storage="_shippingProfile", ThisKey="profileid", OtherKey="id", IsForeignKey=true)]
		public shippingProfile shippingProfile
		{
			get
			{
				return this._shippingProfile.Entity;
			}
			set
			{
				shippingProfile previousValue = this._shippingProfile.Entity;
				if (((previousValue != value) 
							|| (this._shippingProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._shippingProfile.Entity = null;
						previousValue.shippingRules.Remove(this);
					}
					this._shippingProfile.Entity = value;
					if ((value != null))
					{
						value.shippingRules.Add(this);
						this._profileid = value.id;
					}
					else
					{
						this._profileid = default(long);
					}
					this.SendPropertyChanged("shippingProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stockUnit")]
	public partial class stockUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _unitID;
		
		private string _details;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private long _subdomainid;
		
		private EntitySet<product> _products;
		
		private EntityRef<MASTERstockUnit> _MASTERstockUnit;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnunitIDChanging(long value);
    partial void OnunitIDChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public stockUnit()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._MASTERstockUnit = default(EntityRef<MASTERstockUnit>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitID", DbType="BigInt NOT NULL")]
		public long unitID
		{
			get
			{
				return this._unitID;
			}
			set
			{
				if ((this._unitID != value))
				{
					if (this._MASTERstockUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnunitIDChanging(value);
					this.SendPropertyChanging();
					this._unitID = value;
					this.SendPropertyChanged("unitID");
					this.OnunitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="NVarChar(512)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stockUnit_product", Storage="_products", ThisKey="id", OtherKey="stockUnitId")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERstockUnit_stockUnit", Storage="_MASTERstockUnit", ThisKey="unitID", OtherKey="id", IsForeignKey=true)]
		public MASTERstockUnit MASTERstockUnit
		{
			get
			{
				return this._MASTERstockUnit.Entity;
			}
			set
			{
				MASTERstockUnit previousValue = this._MASTERstockUnit.Entity;
				if (((previousValue != value) 
							|| (this._MASTERstockUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERstockUnit.Entity = null;
						previousValue.stockUnits.Remove(this);
					}
					this._MASTERstockUnit.Entity = value;
					if ((value != null))
					{
						value.stockUnits.Add(this);
						this._unitID = value.id;
					}
					else
					{
						this._unitID = default(long);
					}
					this.SendPropertyChanged("MASTERstockUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_stockUnit", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.stockUnits.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.stockUnits.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.stockUnit = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.stockUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.facebook_tokens")]
	public partial class facebook_token : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _pageid;
		
		private long _subdomainid;
		
		private string _accesstoken;
		
		private string _name;
		
		private int _flags;
		
		private string _category;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpageidChanging(string value);
    partial void OnpageidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnaccesstokenChanging(string value);
    partial void OnaccesstokenChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnflagsChanging(int value);
    partial void OnflagsChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    #endregion
		
		public facebook_token()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accesstoken", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string accesstoken
		{
			get
			{
				return this._accesstoken;
			}
			set
			{
				if ((this._accesstoken != value))
				{
					this.OnaccesstokenChanging(value);
					this.SendPropertyChanging();
					this._accesstoken = value;
					this.SendPropertyChanged("accesstoken");
					this.OnaccesstokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="Int NOT NULL")]
		public int flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="NVarChar(50)")]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_facebook_token", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.facebook_tokens.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.facebook_tokens.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.facebook_imports")]
	public partial class facebook_import : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _productid;
		
		private long _facebookID;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OnfacebookIDChanging(long value);
    partial void OnfacebookIDChanged();
    #endregion
		
		public facebook_import()
		{
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facebookID", DbType="BigInt NOT NULL")]
		public long facebookID
		{
			get
			{
				return this._facebookID;
			}
			set
			{
				if ((this._facebookID != value))
				{
					this.OnfacebookIDChanging(value);
					this.SendPropertyChanging();
					this._facebookID = value;
					this.SendPropertyChanged("facebookID");
					this.OnfacebookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_facebook_import", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.facebook_imports.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.facebook_imports.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wordpressSites")]
	public partial class wordpressSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomainid;
		
		private string _email;
		
		private string _password;
		
		private string _url;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public wordpressSite()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(320) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_wordpressSite", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.wordpressSites = null;
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.wordpressSites = this;
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wordpressPosts")]
	public partial class wordpressPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _productid;
		
		private int _postid;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OnpostidChanging(int value);
    partial void OnpostidChanged();
    #endregion
		
		public wordpressPost()
		{
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postid", DbType="Int NOT NULL")]
		public int postid
		{
			get
			{
				return this._postid;
			}
			set
			{
				if ((this._postid != value))
				{
					this.OnpostidChanging(value);
					this.SendPropertyChanging();
					this._postid = value;
					this.SendPropertyChanged("postid");
					this.OnpostidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_wordpressPost", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.wordpressPosts = null;
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.wordpressPosts = this;
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tumblrSites")]
	public partial class tumblrSite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomainid;
		
		private string _email;
		
		private string _password;
		
		private string _accountname;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnaccountnameChanging(string value);
    partial void OnaccountnameChanged();
    #endregion
		
		public tumblrSite()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string accountname
		{
			get
			{
				return this._accountname;
			}
			set
			{
				if ((this._accountname != value))
				{
					this.OnaccountnameChanging(value);
					this.SendPropertyChanging();
					this._accountname = value;
					this.SendPropertyChanged("accountname");
					this.OnaccountnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_tumblrSite", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.tumblrSites = null;
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.tumblrSites = this;
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tumblrPosts")]
	public partial class tumblrPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _productid;
		
		private string _postid;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OnpostidChanging(string value);
    partial void OnpostidChanged();
    #endregion
		
		public tumblrPost()
		{
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string postid
		{
			get
			{
				return this._postid;
			}
			set
			{
				if ((this._postid != value))
				{
					this.OnpostidChanging(value);
					this.SendPropertyChanging();
					this._postid = value;
					this.SendPropertyChanged("postid");
					this.OnpostidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_tumblrPost", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.tumblrPosts = null;
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.tumblrPosts = this;
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventoryLocationItems")]
	public partial class inventoryLocationItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _locationid;
		
		private long _variantid;
		
		private System.Nullable<int> _available;
		
		private System.Nullable<int> _alarmLevel;
		
		private System.Nullable<int> _onOrder;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private System.Nullable<int> _reserved;
		
		private System.Nullable<int> _sold;
		
		private EntitySet<inventoryHistory> _inventoryHistories;
		
		private EntityRef<inventoryLocation> _inventoryLocation;
		
		private EntityRef<product_variant> _product_variant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnlocationidChanging(long value);
    partial void OnlocationidChanged();
    partial void OnvariantidChanging(long value);
    partial void OnvariantidChanged();
    partial void OnavailableChanging(System.Nullable<int> value);
    partial void OnavailableChanged();
    partial void OnalarmLevelChanging(System.Nullable<int> value);
    partial void OnalarmLevelChanged();
    partial void OnonOrderChanging(System.Nullable<int> value);
    partial void OnonOrderChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    partial void OnreservedChanging(System.Nullable<int> value);
    partial void OnreservedChanged();
    partial void OnsoldChanging(System.Nullable<int> value);
    partial void OnsoldChanged();
    #endregion
		
		public inventoryLocationItem()
		{
			this._inventoryHistories = new EntitySet<inventoryHistory>(new Action<inventoryHistory>(this.attach_inventoryHistories), new Action<inventoryHistory>(this.detach_inventoryHistories));
			this._inventoryLocation = default(EntityRef<inventoryLocation>);
			this._product_variant = default(EntityRef<product_variant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationid", DbType="BigInt NOT NULL")]
		public long locationid
		{
			get
			{
				return this._locationid;
			}
			set
			{
				if ((this._locationid != value))
				{
					if (this._inventoryLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationidChanging(value);
					this.SendPropertyChanging();
					this._locationid = value;
					this.SendPropertyChanged("locationid");
					this.OnlocationidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variantid", DbType="BigInt NOT NULL")]
		public long variantid
		{
			get
			{
				return this._variantid;
			}
			set
			{
				if ((this._variantid != value))
				{
					if (this._product_variant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvariantidChanging(value);
					this.SendPropertyChanging();
					this._variantid = value;
					this.SendPropertyChanged("variantid");
					this.OnvariantidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available", DbType="Int")]
		public System.Nullable<int> available
		{
			get
			{
				return this._available;
			}
			set
			{
				if ((this._available != value))
				{
					this.OnavailableChanging(value);
					this.SendPropertyChanging();
					this._available = value;
					this.SendPropertyChanged("available");
					this.OnavailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alarmLevel", DbType="Int")]
		public System.Nullable<int> alarmLevel
		{
			get
			{
				return this._alarmLevel;
			}
			set
			{
				if ((this._alarmLevel != value))
				{
					this.OnalarmLevelChanging(value);
					this.SendPropertyChanging();
					this._alarmLevel = value;
					this.SendPropertyChanged("alarmLevel");
					this.OnalarmLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onOrder", DbType="Int")]
		public System.Nullable<int> onOrder
		{
			get
			{
				return this._onOrder;
			}
			set
			{
				if ((this._onOrder != value))
				{
					this.OnonOrderChanging(value);
					this.SendPropertyChanging();
					this._onOrder = value;
					this.SendPropertyChanged("onOrder");
					this.OnonOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reserved", DbType="Int")]
		public System.Nullable<int> reserved
		{
			get
			{
				return this._reserved;
			}
			set
			{
				if ((this._reserved != value))
				{
					this.OnreservedChanging(value);
					this.SendPropertyChanging();
					this._reserved = value;
					this.SendPropertyChanged("reserved");
					this.OnreservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sold", DbType="Int")]
		public System.Nullable<int> sold
		{
			get
			{
				return this._sold;
			}
			set
			{
				if ((this._sold != value))
				{
					this.OnsoldChanging(value);
					this.SendPropertyChanging();
					this._sold = value;
					this.SendPropertyChanged("sold");
					this.OnsoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventoryLocationItem_inventoryHistory", Storage="_inventoryHistories", ThisKey="id", OtherKey="itemLocationID")]
		public EntitySet<inventoryHistory> inventoryHistories
		{
			get
			{
				return this._inventoryHistories;
			}
			set
			{
				this._inventoryHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventoryLocation_inventoryLocationItem", Storage="_inventoryLocation", ThisKey="locationid", OtherKey="id", IsForeignKey=true)]
		public inventoryLocation inventoryLocation
		{
			get
			{
				return this._inventoryLocation.Entity;
			}
			set
			{
				inventoryLocation previousValue = this._inventoryLocation.Entity;
				if (((previousValue != value) 
							|| (this._inventoryLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inventoryLocation.Entity = null;
						previousValue.inventoryLocationItems.Remove(this);
					}
					this._inventoryLocation.Entity = value;
					if ((value != null))
					{
						value.inventoryLocationItems.Add(this);
						this._locationid = value.id;
					}
					else
					{
						this._locationid = default(long);
					}
					this.SendPropertyChanged("inventoryLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_variant_inventoryLocationItem", Storage="_product_variant", ThisKey="variantid", OtherKey="id", IsForeignKey=true)]
		public product_variant product_variant
		{
			get
			{
				return this._product_variant.Entity;
			}
			set
			{
				product_variant previousValue = this._product_variant.Entity;
				if (((previousValue != value) 
							|| (this._product_variant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_variant.Entity = null;
						previousValue.inventoryLocationItems.Remove(this);
					}
					this._product_variant.Entity = value;
					if ((value != null))
					{
						value.inventoryLocationItems.Add(this);
						this._variantid = value.id;
					}
					else
					{
						this._variantid = default(long);
					}
					this.SendPropertyChanged("product_variant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inventoryHistories(inventoryHistory entity)
		{
			this.SendPropertyChanging();
			entity.inventoryLocationItem = this;
		}
		
		private void detach_inventoryHistories(inventoryHistory entity)
		{
			this.SendPropertyChanging();
			entity.inventoryLocationItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderItems")]
	public partial class orderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _orderid;
		
		private long _variantid;
		
		private string _description;
		
		private int _quantity;
		
		private System.Nullable<decimal> _unitPrice;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private System.Nullable<decimal> _tax;
		
		private EntityRef<orderItems_digital> _orderItems_digitals;
		
		private EntityRef<product_variant> _product_variant;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnorderidChanging(long value);
    partial void OnorderidChanged();
    partial void OnvariantidChanging(long value);
    partial void OnvariantidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnunitPriceChanging(System.Nullable<decimal> value);
    partial void OnunitPriceChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    partial void OntaxChanging(System.Nullable<decimal> value);
    partial void OntaxChanged();
    #endregion
		
		public orderItem()
		{
			this._orderItems_digitals = default(EntityRef<orderItems_digital>);
			this._product_variant = default(EntityRef<product_variant>);
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="BigInt NOT NULL")]
		public long orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variantid", DbType="BigInt NOT NULL")]
		public long variantid
		{
			get
			{
				return this._variantid;
			}
			set
			{
				if ((this._variantid != value))
				{
					if (this._product_variant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvariantidChanging(value);
					this.SendPropertyChanging();
					this._variantid = value;
					this.SendPropertyChanged("variantid");
					this.OnvariantidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1024)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Money")]
		public System.Nullable<decimal> unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="orderItem_orderItems_digital", Storage="_orderItems_digitals", ThisKey="id", OtherKey="orderitemid", IsUnique=true, IsForeignKey=false)]
		public orderItems_digital orderItems_digitals
		{
			get
			{
				return this._orderItems_digitals.Entity;
			}
			set
			{
				orderItems_digital previousValue = this._orderItems_digitals.Entity;
				if (((previousValue != value) 
							|| (this._orderItems_digitals.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._orderItems_digitals.Entity = null;
						previousValue.orderItem = null;
					}
					this._orderItems_digitals.Entity = value;
					if ((value != null))
					{
						value.orderItem = this;
					}
					this.SendPropertyChanged("orderItems_digitals");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_variant_orderItem", Storage="_product_variant", ThisKey="variantid", OtherKey="id", IsForeignKey=true)]
		public product_variant product_variant
		{
			get
			{
				return this._product_variant.Entity;
			}
			set
			{
				product_variant previousValue = this._product_variant.Entity;
				if (((previousValue != value) 
							|| (this._product_variant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_variant.Entity = null;
						previousValue.orderItems.Remove(this);
					}
					this._product_variant.Entity = value;
					if ((value != null))
					{
						value.orderItems.Add(this);
						this._variantid = value.id;
					}
					else
					{
						this._variantid = default(long);
					}
					this.SendPropertyChanged("product_variant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderItem", Storage="_order", ThisKey="orderid", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.orderItems.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.orderItems.Add(this);
						this._orderid = value.id;
					}
					else
					{
						this._orderid = default(long);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contactGroupMembers")]
	public partial class contactGroupMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _userid;
		
		private long _groupid;
		
		private EntityRef<contactGroup> _contactGroup;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnuseridChanging(long value);
    partial void OnuseridChanged();
    partial void OngroupidChanging(long value);
    partial void OngroupidChanged();
    #endregion
		
		public contactGroupMember()
		{
			this._contactGroup = default(EntityRef<contactGroup>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="BigInt NOT NULL")]
		public long userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupid", DbType="BigInt NOT NULL")]
		public long groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if ((this._groupid != value))
				{
					if (this._contactGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactGroup_contactGroupMember", Storage="_contactGroup", ThisKey="groupid", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public contactGroup contactGroup
		{
			get
			{
				return this._contactGroup.Entity;
			}
			set
			{
				contactGroup previousValue = this._contactGroup.Entity;
				if (((previousValue != value) 
							|| (this._contactGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contactGroup.Entity = null;
						previousValue.contactGroupMembers.Remove(this);
					}
					this._contactGroup.Entity = value;
					if ((value != null))
					{
						value.contactGroupMembers.Add(this);
						this._groupid = value.id;
					}
					else
					{
						this._groupid = default(long);
					}
					this.SendPropertyChanged("contactGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_contactGroupMember", Storage="_user", ThisKey="userid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.contactGroupMembers.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.contactGroupMembers.Add(this);
						this._userid = value.id;
					}
					else
					{
						this._userid = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contactGroupPricings")]
	public partial class contactGroupPricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _productid;
		
		private long _groupid;
		
		private decimal _price;
		
		private EntityRef<contactGroup> _contactGroup;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OngroupidChanging(long value);
    partial void OngroupidChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    #endregion
		
		public contactGroupPricing()
		{
			this._contactGroup = default(EntityRef<contactGroup>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupid", DbType="BigInt NOT NULL")]
		public long groupid
		{
			get
			{
				return this._groupid;
			}
			set
			{
				if ((this._groupid != value))
				{
					if (this._contactGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngroupidChanging(value);
					this.SendPropertyChanging();
					this._groupid = value;
					this.SendPropertyChanged("groupid");
					this.OngroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactGroup_contactGroupPricing", Storage="_contactGroup", ThisKey="groupid", OtherKey="id", IsForeignKey=true)]
		public contactGroup contactGroup
		{
			get
			{
				return this._contactGroup.Entity;
			}
			set
			{
				contactGroup previousValue = this._contactGroup.Entity;
				if (((previousValue != value) 
							|| (this._contactGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contactGroup.Entity = null;
						previousValue.contactGroupPricings.Remove(this);
					}
					this._contactGroup.Entity = value;
					if ((value != null))
					{
						value.contactGroupPricings.Add(this);
						this._groupid = value.id;
					}
					else
					{
						this._groupid = default(long);
					}
					this.SendPropertyChanged("contactGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_contactGroupPricing", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.contactGroupPricings.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.contactGroupPricings.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contactGroups")]
	public partial class contactGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomainid;
		
		private string _title;
		
		private System.Nullable<int> _permissions;
		
		private System.Nullable<int> _flags;
		
		private EntitySet<contactGroupMember> _contactGroupMembers;
		
		private EntitySet<contactGroupPricing> _contactGroupPricings;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnpermissionsChanging(System.Nullable<int> value);
    partial void OnpermissionsChanged();
    partial void OnflagsChanging(System.Nullable<int> value);
    partial void OnflagsChanged();
    #endregion
		
		public contactGroup()
		{
			this._contactGroupMembers = new EntitySet<contactGroupMember>(new Action<contactGroupMember>(this.attach_contactGroupMembers), new Action<contactGroupMember>(this.detach_contactGroupMembers));
			this._contactGroupPricings = new EntitySet<contactGroupPricing>(new Action<contactGroupPricing>(this.attach_contactGroupPricings), new Action<contactGroupPricing>(this.detach_contactGroupPricings));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissions", DbType="Int")]
		public System.Nullable<int> permissions
		{
			get
			{
				return this._permissions;
			}
			set
			{
				if ((this._permissions != value))
				{
					this.OnpermissionsChanging(value);
					this.SendPropertyChanging();
					this._permissions = value;
					this.SendPropertyChanged("permissions");
					this.OnpermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="Int")]
		public System.Nullable<int> flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactGroup_contactGroupMember", Storage="_contactGroupMembers", ThisKey="id", OtherKey="groupid")]
		public EntitySet<contactGroupMember> contactGroupMembers
		{
			get
			{
				return this._contactGroupMembers;
			}
			set
			{
				this._contactGroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contactGroup_contactGroupPricing", Storage="_contactGroupPricings", ThisKey="id", OtherKey="groupid")]
		public EntitySet<contactGroupPricing> contactGroupPricings
		{
			get
			{
				return this._contactGroupPricings;
			}
			set
			{
				this._contactGroupPricings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_contactGroup", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.contactGroups.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.contactGroups.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contactGroupMembers(contactGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.contactGroup = this;
		}
		
		private void detach_contactGroupMembers(contactGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.contactGroup = null;
		}
		
		private void attach_contactGroupPricings(contactGroupPricing entity)
		{
			this.SendPropertyChanging();
			entity.contactGroup = this;
		}
		
		private void detach_contactGroupPricings(contactGroupPricing entity)
		{
			this.SendPropertyChanging();
			entity.contactGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.productCollectionMembers")]
	public partial class productCollectionMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _productid;
		
		private long _collectionid;
		
		private EntityRef<product> _product;
		
		private EntityRef<product_collection> _product_collection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OncollectionidChanging(long value);
    partial void OncollectionidChanged();
    #endregion
		
		public productCollectionMember()
		{
			this._product = default(EntityRef<product>);
			this._product_collection = default(EntityRef<product_collection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_collectionid", DbType="BigInt NOT NULL")]
		public long collectionid
		{
			get
			{
				return this._collectionid;
			}
			set
			{
				if ((this._collectionid != value))
				{
					if (this._product_collection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncollectionidChanging(value);
					this.SendPropertyChanging();
					this._collectionid = value;
					this.SendPropertyChanged("collectionid");
					this.OncollectionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_productCollectionMember", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.productCollectionMembers.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.productCollectionMembers.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_collection_productCollectionMember", Storage="_product_collection", ThisKey="collectionid", OtherKey="id", IsForeignKey=true)]
		public product_collection product_collection
		{
			get
			{
				return this._product_collection.Entity;
			}
			set
			{
				product_collection previousValue = this._product_collection.Entity;
				if (((previousValue != value) 
							|| (this._product_collection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_collection.Entity = null;
						previousValue.productCollectionMembers.Remove(this);
					}
					this._product_collection.Entity = value;
					if ((value != null))
					{
						value.productCollectionMembers.Add(this);
						this._collectionid = value.id;
					}
					else
					{
						this._collectionid = default(long);
					}
					this.SendPropertyChanged("product_collection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.links")]
	public partial class link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _url;
		
		private string _title;
		
		private long _linklistid;
		
		private short _type;
		
		private EntityRef<linklist> _linklist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnlinklistidChanging(long value);
    partial void OnlinklistidChanged();
    partial void OntypeChanging(short value);
    partial void OntypeChanged();
    #endregion
		
		public link()
		{
			this._linklist = default(EntityRef<linklist>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linklistid", DbType="BigInt NOT NULL")]
		public long linklistid
		{
			get
			{
				return this._linklistid;
			}
			set
			{
				if ((this._linklistid != value))
				{
					if (this._linklist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlinklistidChanging(value);
					this.SendPropertyChanging();
					this._linklistid = value;
					this.SendPropertyChanged("linklistid");
					this.OnlinklistidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="SmallInt NOT NULL")]
		public short type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="linklist_link", Storage="_linklist", ThisKey="linklistid", OtherKey="id", IsForeignKey=true)]
		public linklist linklist
		{
			get
			{
				return this._linklist.Entity;
			}
			set
			{
				linklist previousValue = this._linklist.Entity;
				if (((previousValue != value) 
							|| (this._linklist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._linklist.Entity = null;
						previousValue.links.Remove(this);
					}
					this._linklist.Entity = value;
					if ((value != null))
					{
						value.links.Add(this);
						this._linklistid = value.id;
					}
					else
					{
						this._linklistid = default(long);
					}
					this.SendPropertyChanged("linklist");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cartitems")]
	public partial class cartitem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _quantity;
		
		private System.Guid _cartid;
		
		private long _variantid;
		
		private EntityRef<cart> _cart;
		
		private EntityRef<product_variant> _product_variant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OncartidChanging(System.Guid value);
    partial void OncartidChanged();
    partial void OnvariantidChanging(long value);
    partial void OnvariantidChanged();
    #endregion
		
		public cartitem()
		{
			this._cart = default(EntityRef<cart>);
			this._product_variant = default(EntityRef<product_variant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid cartid
		{
			get
			{
				return this._cartid;
			}
			set
			{
				if ((this._cartid != value))
				{
					if (this._cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncartidChanging(value);
					this.SendPropertyChanging();
					this._cartid = value;
					this.SendPropertyChanged("cartid");
					this.OncartidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_variantid", DbType="BigInt NOT NULL")]
		public long variantid
		{
			get
			{
				return this._variantid;
			}
			set
			{
				if ((this._variantid != value))
				{
					if (this._product_variant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnvariantidChanging(value);
					this.SendPropertyChanging();
					this._variantid = value;
					this.SendPropertyChanged("variantid");
					this.OnvariantidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cart_cartitem", Storage="_cart", ThisKey="cartid", OtherKey="id", IsForeignKey=true)]
		public cart cart
		{
			get
			{
				return this._cart.Entity;
			}
			set
			{
				cart previousValue = this._cart.Entity;
				if (((previousValue != value) 
							|| (this._cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cart.Entity = null;
						previousValue.cartitems.Remove(this);
					}
					this._cart.Entity = value;
					if ((value != null))
					{
						value.cartitems.Add(this);
						this._cartid = value.id;
					}
					else
					{
						this._cartid = default(System.Guid);
					}
					this.SendPropertyChanged("cart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_variant_cartitem", Storage="_product_variant", ThisKey="variantid", OtherKey="id", IsForeignKey=true)]
		public product_variant product_variant
		{
			get
			{
				return this._product_variant.Entity;
			}
			set
			{
				product_variant previousValue = this._product_variant.Entity;
				if (((previousValue != value) 
							|| (this._product_variant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_variant.Entity = null;
						previousValue.cartitems.Remove(this);
					}
					this._product_variant.Entity = value;
					if ((value != null))
					{
						value.cartitems.Add(this);
						this._variantid = value.id;
					}
					else
					{
						this._variantid = default(long);
					}
					this.SendPropertyChanged("product_variant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.addresses")]
	public partial class address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _organisation_name;
		
		private System.Nullable<int> _country;
		
		private string _state;
		
		private string _city;
		
		private string _street_address;
		
		private string _postcode;
		
		private string _phone;
		
		private EntitySet<organisation> _organisations;
		
		private EntitySet<organisation> _organisations1;
		
		private EntitySet<order> _orders;
		
		private EntitySet<order> _orders1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onorganisation_nameChanging(string value);
    partial void Onorganisation_nameChanged();
    partial void OncountryChanging(System.Nullable<int> value);
    partial void OncountryChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void Onstreet_addressChanging(string value);
    partial void Onstreet_addressChanged();
    partial void OnpostcodeChanging(string value);
    partial void OnpostcodeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public address()
		{
			this._organisations = new EntitySet<organisation>(new Action<organisation>(this.attach_organisations), new Action<organisation>(this.detach_organisations));
			this._organisations1 = new EntitySet<organisation>(new Action<organisation>(this.attach_organisations1), new Action<organisation>(this.detach_organisations1));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._orders1 = new EntitySet<order>(new Action<order>(this.attach_orders1), new Action<order>(this.detach_orders1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organisation_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string organisation_name
		{
			get
			{
				return this._organisation_name;
			}
			set
			{
				if ((this._organisation_name != value))
				{
					this.Onorganisation_nameChanging(value);
					this.SendPropertyChanging();
					this._organisation_name = value;
					this.SendPropertyChanged("organisation_name");
					this.Onorganisation_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="Int")]
		public System.Nullable<int> country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street_address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string street_address
		{
			get
			{
				return this._street_address;
			}
			set
			{
				if ((this._street_address != value))
				{
					this.Onstreet_addressChanging(value);
					this.SendPropertyChanging();
					this._street_address = value;
					this.SendPropertyChanged("street_address");
					this.Onstreet_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postcode", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string postcode
		{
			get
			{
				return this._postcode;
			}
			set
			{
				if ((this._postcode != value))
				{
					this.OnpostcodeChanging(value);
					this.SendPropertyChanging();
					this._postcode = value;
					this.SendPropertyChanged("postcode");
					this.OnpostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_organisation", Storage="_organisations", ThisKey="id", OtherKey="shippingAddressID")]
		public EntitySet<organisation> organisations
		{
			get
			{
				return this._organisations;
			}
			set
			{
				this._organisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_organisation1", Storage="_organisations1", ThisKey="id", OtherKey="billingAddressID")]
		public EntitySet<organisation> organisations1
		{
			get
			{
				return this._organisations1;
			}
			set
			{
				this._organisations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_order", Storage="_orders", ThisKey="id", OtherKey="shippingAddressID")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_order1", Storage="_orders1", ThisKey="id", OtherKey="billingAddressID")]
		public EntitySet<order> orders1
		{
			get
			{
				return this._orders1;
			}
			set
			{
				this._orders1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.address1 = this;
		}
		
		private void detach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.address1 = null;
		}
		
		private void attach_organisations1(organisation entity)
		{
			this.SendPropertyChanging();
			entity.address2 = this;
		}
		
		private void detach_organisations1(organisation entity)
		{
			this.SendPropertyChanging();
			entity.address2 = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.address = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.address = null;
		}
		
		private void attach_orders1(order entity)
		{
			this.SendPropertyChanging();
			entity.address1 = this;
		}
		
		private void detach_orders1(order entity)
		{
			this.SendPropertyChanging();
			entity.address1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.carts")]
	public partial class cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _subdomainid;
		
		private string _note;
		
		private string _coupon;
		
		private System.Nullable<long> _userid;
		
		private System.Nullable<long> _orderid;
		
		private string _paymentMethod;
		
		private System.Nullable<long> _paymentCustomId;
		
		private EntitySet<cartitem> _cartitems;
		
		private EntityRef<paymentMethod> _paymentMethod1;
		
		private EntityRef<user> _user;
		
		private EntityRef<order> _order;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OncouponChanging(string value);
    partial void OncouponChanged();
    partial void OnuseridChanging(System.Nullable<long> value);
    partial void OnuseridChanged();
    partial void OnorderidChanging(System.Nullable<long> value);
    partial void OnorderidChanged();
    partial void OnpaymentMethodChanging(string value);
    partial void OnpaymentMethodChanged();
    partial void OnpaymentCustomIdChanging(System.Nullable<long> value);
    partial void OnpaymentCustomIdChanged();
    #endregion
		
		public cart()
		{
			this._cartitems = new EntitySet<cartitem>(new Action<cartitem>(this.attach_cartitems), new Action<cartitem>(this.detach_cartitems));
			this._paymentMethod1 = default(EntityRef<paymentMethod>);
			this._user = default(EntityRef<user>);
			this._order = default(EntityRef<order>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(1000)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coupon", DbType="NVarChar(50)")]
		public string coupon
		{
			get
			{
				return this._coupon;
			}
			set
			{
				if ((this._coupon != value))
				{
					this.OncouponChanging(value);
					this.SendPropertyChanging();
					this._coupon = value;
					this.SendPropertyChanged("coupon");
					this.OncouponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="BigInt")]
		public System.Nullable<long> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="BigInt")]
		public System.Nullable<long> orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentMethod", DbType="VarChar(20)")]
		public string paymentMethod
		{
			get
			{
				return this._paymentMethod;
			}
			set
			{
				if ((this._paymentMethod != value))
				{
					this.OnpaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._paymentMethod = value;
					this.SendPropertyChanged("paymentMethod");
					this.OnpaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentCustomId", DbType="BigInt")]
		public System.Nullable<long> paymentCustomId
		{
			get
			{
				return this._paymentCustomId;
			}
			set
			{
				if ((this._paymentCustomId != value))
				{
					if (this._paymentMethod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpaymentCustomIdChanging(value);
					this.SendPropertyChanging();
					this._paymentCustomId = value;
					this.SendPropertyChanged("paymentCustomId");
					this.OnpaymentCustomIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cart_cartitem", Storage="_cartitems", ThisKey="id", OtherKey="cartid")]
		public EntitySet<cartitem> cartitems
		{
			get
			{
				return this._cartitems;
			}
			set
			{
				this._cartitems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="paymentMethod_cart", Storage="_paymentMethod1", ThisKey="paymentCustomId", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public paymentMethod paymentMethod1
		{
			get
			{
				return this._paymentMethod1.Entity;
			}
			set
			{
				paymentMethod previousValue = this._paymentMethod1.Entity;
				if (((previousValue != value) 
							|| (this._paymentMethod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._paymentMethod1.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._paymentMethod1.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._paymentCustomId = value.id;
					}
					else
					{
						this._paymentCustomId = default(Nullable<long>);
					}
					this.SendPropertyChanged("paymentMethod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_cart", Storage="_user", ThisKey="userid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._userid = value.id;
					}
					else
					{
						this._userid = default(Nullable<long>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_cart", Storage="_order", ThisKey="orderid", OtherKey="id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._orderid = value.id;
					}
					else
					{
						this._orderid = default(Nullable<long>);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_cart", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cartitems(cartitem entity)
		{
			this.SendPropertyChanging();
			entity.cart = this;
		}
		
		private void detach_cartitems(cartitem entity)
		{
			this.SendPropertyChanging();
			entity.cart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payments")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private decimal _paidAmount;
		
		private System.DateTime _created;
		
		private string _notes;
		
		private string _method;
		
		private long _orderid;
		
		private string _status;
		
		private string _reference;
		
		private string _redirectUrl;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnpaidAmountChanging(decimal value);
    partial void OnpaidAmountChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnmethodChanging(string value);
    partial void OnmethodChanged();
    partial void OnorderidChanging(long value);
    partial void OnorderidChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnreferenceChanging(string value);
    partial void OnreferenceChanged();
    partial void OnredirectUrlChanging(string value);
    partial void OnredirectUrlChanged();
    #endregion
		
		public payment()
		{
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paidAmount", DbType="Money NOT NULL")]
		public decimal paidAmount
		{
			get
			{
				return this._paidAmount;
			}
			set
			{
				if ((this._paidAmount != value))
				{
					this.OnpaidAmountChanging(value);
					this.SendPropertyChanging();
					this._paidAmount = value;
					this.SendPropertyChanged("paidAmount");
					this.OnpaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(500)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_method", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string method
		{
			get
			{
				return this._method;
			}
			set
			{
				if ((this._method != value))
				{
					this.OnmethodChanging(value);
					this.SendPropertyChanging();
					this._method = value;
					this.SendPropertyChanged("method");
					this.OnmethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="BigInt NOT NULL")]
		public long orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reference", DbType="VarChar(100)")]
		public string reference
		{
			get
			{
				return this._reference;
			}
			set
			{
				if ((this._reference != value))
				{
					this.OnreferenceChanging(value);
					this.SendPropertyChanging();
					this._reference = value;
					this.SendPropertyChanged("reference");
					this.OnreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_redirectUrl", DbType="VarChar(500)")]
		public string redirectUrl
		{
			get
			{
				return this._redirectUrl;
			}
			set
			{
				if ((this._redirectUrl != value))
				{
					this.OnredirectUrlChanging(value);
					this.SendPropertyChanging();
					this._redirectUrl = value;
					this.SendPropertyChanged("redirectUrl");
					this.OnredirectUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_payment", Storage="_order", ThisKey="orderid", OtherKey="id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.payments.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.payments.Add(this);
						this._orderid = value.id;
					}
					else
					{
						this._orderid = default(long);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.article_comments")]
	public partial class article_comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _articleid;
		
		private string _comment;
		
		private string _name;
		
		private string _email;
		
		private bool _isApproved;
		
		private bool _isSpam;
		
		private System.DateTime _created;
		
		private EntityRef<article> _article;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnarticleidChanging(long value);
    partial void OnarticleidChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnisApprovedChanging(bool value);
    partial void OnisApprovedChanged();
    partial void OnisSpamChanging(bool value);
    partial void OnisSpamChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    #endregion
		
		public article_comment()
		{
			this._article = default(EntityRef<article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articleid", DbType="BigInt NOT NULL")]
		public long articleid
		{
			get
			{
				return this._articleid;
			}
			set
			{
				if ((this._articleid != value))
				{
					if (this._article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticleidChanging(value);
					this.SendPropertyChanging();
					this._articleid = value;
					this.SendPropertyChanged("articleid");
					this.OnarticleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(320) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isApproved", DbType="Bit NOT NULL")]
		public bool isApproved
		{
			get
			{
				return this._isApproved;
			}
			set
			{
				if ((this._isApproved != value))
				{
					this.OnisApprovedChanging(value);
					this.SendPropertyChanging();
					this._isApproved = value;
					this.SendPropertyChanged("isApproved");
					this.OnisApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSpam", DbType="Bit NOT NULL")]
		public bool isSpam
		{
			get
			{
				return this._isSpam;
			}
			set
			{
				if ((this._isSpam != value))
				{
					this.OnisSpamChanging(value);
					this.SendPropertyChanging();
					this._isSpam = value;
					this.SendPropertyChanged("isSpam");
					this.OnisSpamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_article_comment", Storage="_article", ThisKey="articleid", OtherKey="id", IsForeignKey=true)]
		public article article
		{
			get
			{
				return this._article.Entity;
			}
			set
			{
				article previousValue = this._article.Entity;
				if (((previousValue != value) 
							|| (this._article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._article.Entity = null;
						previousValue.article_comments.Remove(this);
					}
					this._article.Entity = value;
					if ((value != null))
					{
						value.article_comments.Add(this);
						this._articleid = value.id;
					}
					else
					{
						this._articleid = default(long);
					}
					this.SendPropertyChanged("article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.articles")]
	public partial class article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _creator;
		
		private int _blogid;
		
		private string _title;
		
		private string _content;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _published;
		
		private EntitySet<article_comment> _article_comments;
		
		private EntitySet<article_tag> _article_tags;
		
		private EntityRef<blog> _blog;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncreatorChanging(long value);
    partial void OncreatorChanged();
    partial void OnblogidChanging(int value);
    partial void OnblogidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnpublishedChanging(System.Nullable<System.DateTime> value);
    partial void OnpublishedChanged();
    #endregion
		
		public article()
		{
			this._article_comments = new EntitySet<article_comment>(new Action<article_comment>(this.attach_article_comments), new Action<article_comment>(this.detach_article_comments));
			this._article_tags = new EntitySet<article_tag>(new Action<article_tag>(this.attach_article_tags), new Action<article_tag>(this.detach_article_tags));
			this._blog = default(EntityRef<blog>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creator", DbType="BigInt NOT NULL")]
		public long creator
		{
			get
			{
				return this._creator;
			}
			set
			{
				if ((this._creator != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreatorChanging(value);
					this.SendPropertyChanging();
					this._creator = value;
					this.SendPropertyChanged("creator");
					this.OncreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogid", DbType="Int NOT NULL")]
		public int blogid
		{
			get
			{
				return this._blogid;
			}
			set
			{
				if ((this._blogid != value))
				{
					if (this._blog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblogidChanging(value);
					this.SendPropertyChanging();
					this._blogid = value;
					this.SendPropertyChanged("blogid");
					this.OnblogidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="DateTime")]
		public System.Nullable<System.DateTime> published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_article_comment", Storage="_article_comments", ThisKey="id", OtherKey="articleid")]
		public EntitySet<article_comment> article_comments
		{
			get
			{
				return this._article_comments;
			}
			set
			{
				this._article_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_article_tag", Storage="_article_tags", ThisKey="id", OtherKey="articleid")]
		public EntitySet<article_tag> article_tags
		{
			get
			{
				return this._article_tags;
			}
			set
			{
				this._article_tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="blog_article", Storage="_blog", ThisKey="blogid", OtherKey="id", IsForeignKey=true)]
		public blog blog
		{
			get
			{
				return this._blog.Entity;
			}
			set
			{
				blog previousValue = this._blog.Entity;
				if (((previousValue != value) 
							|| (this._blog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._blog.Entity = null;
						previousValue.articles.Remove(this);
					}
					this._blog.Entity = value;
					if ((value != null))
					{
						value.articles.Add(this);
						this._blogid = value.id;
					}
					else
					{
						this._blogid = default(int);
					}
					this.SendPropertyChanged("blog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_article", Storage="_user", ThisKey="creator", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.articles.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.articles.Add(this);
						this._creator = value.id;
					}
					else
					{
						this._creator = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_article_comments(article_comment entity)
		{
			this.SendPropertyChanging();
			entity.article = this;
		}
		
		private void detach_article_comments(article_comment entity)
		{
			this.SendPropertyChanging();
			entity.article = null;
		}
		
		private void attach_article_tags(article_tag entity)
		{
			this.SendPropertyChanging();
			entity.article = this;
		}
		
		private void detach_article_tags(article_tag entity)
		{
			this.SendPropertyChanging();
			entity.article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.blogs")]
	public partial class blog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _permalink;
		
		private string _title;
		
		private short _comments;
		
		private System.DateTime _updated;
		
		private long _subdomainid;
		
		private EntitySet<article> _articles;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpermalinkChanging(string value);
    partial void OnpermalinkChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncommentsChanging(short value);
    partial void OncommentsChanged();
    partial void OnupdatedChanging(System.DateTime value);
    partial void OnupdatedChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public blog()
		{
			this._articles = new EntitySet<article>(new Action<article>(this.attach_articles), new Action<article>(this.detach_articles));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permalink", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string permalink
		{
			get
			{
				return this._permalink;
			}
			set
			{
				if ((this._permalink != value))
				{
					this.OnpermalinkChanging(value);
					this.SendPropertyChanging();
					this._permalink = value;
					this.SendPropertyChanged("permalink");
					this.OnpermalinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="SmallInt NOT NULL")]
		public short comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="DateTime NOT NULL")]
		public System.DateTime updated
		{
			get
			{
				return this._updated;
			}
			set
			{
				if ((this._updated != value))
				{
					this.OnupdatedChanging(value);
					this.SendPropertyChanging();
					this._updated = value;
					this.SendPropertyChanged("updated");
					this.OnupdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="blog_article", Storage="_articles", ThisKey="id", OtherKey="blogid")]
		public EntitySet<article> articles
		{
			get
			{
				return this._articles;
			}
			set
			{
				this._articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_blog", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.blogs.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.blogs.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_articles(article entity)
		{
			this.SendPropertyChanging();
			entity.blog = this;
		}
		
		private void detach_articles(article entity)
		{
			this.SendPropertyChanging();
			entity.blog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.linklists")]
	public partial class linklist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _title;
		
		private string _permalink;
		
		private long _subdomainid;
		
		private bool _permanent;
		
		private EntitySet<link> _links;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnpermalinkChanging(string value);
    partial void OnpermalinkChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnpermanentChanging(bool value);
    partial void OnpermanentChanged();
    #endregion
		
		public linklist()
		{
			this._links = new EntitySet<link>(new Action<link>(this.attach_links), new Action<link>(this.detach_links));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permalink", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string permalink
		{
			get
			{
				return this._permalink;
			}
			set
			{
				if ((this._permalink != value))
				{
					this.OnpermalinkChanging(value);
					this.SendPropertyChanging();
					this._permalink = value;
					this.SendPropertyChanged("permalink");
					this.OnpermalinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[permanent]", Storage="_permanent", DbType="Bit NOT NULL")]
		public bool permanent
		{
			get
			{
				return this._permanent;
			}
			set
			{
				if ((this._permanent != value))
				{
					this.OnpermanentChanging(value);
					this.SendPropertyChanging();
					this._permanent = value;
					this.SendPropertyChanged("permanent");
					this.OnpermanentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="linklist_link", Storage="_links", ThisKey="id", OtherKey="linklistid")]
		public EntitySet<link> links
		{
			get
			{
				return this._links;
			}
			set
			{
				this._links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_linklist", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.linklists.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.linklists.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_links(link entity)
		{
			this.SendPropertyChanging();
			entity.linklist = this;
		}
		
		private void detach_links(link entity)
		{
			this.SendPropertyChanging();
			entity.linklist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.coupons")]
	public partial class coupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomainid;
		
		private string _code;
		
		private string _description;
		
		private System.DateTime _startDate;
		
		private System.Nullable<System.DateTime> _expiryDate;
		
		private int _impressions;
		
		private System.Nullable<decimal> _minimumPurchase;
		
		private System.Nullable<int> _maxImpressions;
		
		private System.Nullable<decimal> _couponValue;
		
		private System.Nullable<decimal> _couponPercentage;
		
		private bool _expired;
		
		private EntitySet<MASTERsubdomain> _MASTERsubdomains;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnexpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiryDateChanged();
    partial void OnimpressionsChanging(int value);
    partial void OnimpressionsChanged();
    partial void OnminimumPurchaseChanging(System.Nullable<decimal> value);
    partial void OnminimumPurchaseChanged();
    partial void OnmaxImpressionsChanging(System.Nullable<int> value);
    partial void OnmaxImpressionsChanged();
    partial void OncouponValueChanging(System.Nullable<decimal> value);
    partial void OncouponValueChanged();
    partial void OncouponPercentageChanging(System.Nullable<decimal> value);
    partial void OncouponPercentageChanged();
    partial void OnexpiredChanging(bool value);
    partial void OnexpiredChanged();
    #endregion
		
		public coupon()
		{
			this._MASTERsubdomains = new EntitySet<MASTERsubdomain>(new Action<MASTERsubdomain>(this.attach_MASTERsubdomains), new Action<MASTERsubdomain>(this.detach_MASTERsubdomains));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expiryDate
		{
			get
			{
				return this._expiryDate;
			}
			set
			{
				if ((this._expiryDate != value))
				{
					this.OnexpiryDateChanging(value);
					this.SendPropertyChanging();
					this._expiryDate = value;
					this.SendPropertyChanged("expiryDate");
					this.OnexpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_impressions", DbType="Int NOT NULL")]
		public int impressions
		{
			get
			{
				return this._impressions;
			}
			set
			{
				if ((this._impressions != value))
				{
					this.OnimpressionsChanging(value);
					this.SendPropertyChanging();
					this._impressions = value;
					this.SendPropertyChanged("impressions");
					this.OnimpressionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minimumPurchase", DbType="Money")]
		public System.Nullable<decimal> minimumPurchase
		{
			get
			{
				return this._minimumPurchase;
			}
			set
			{
				if ((this._minimumPurchase != value))
				{
					this.OnminimumPurchaseChanging(value);
					this.SendPropertyChanging();
					this._minimumPurchase = value;
					this.SendPropertyChanged("minimumPurchase");
					this.OnminimumPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxImpressions", DbType="Int")]
		public System.Nullable<int> maxImpressions
		{
			get
			{
				return this._maxImpressions;
			}
			set
			{
				if ((this._maxImpressions != value))
				{
					this.OnmaxImpressionsChanging(value);
					this.SendPropertyChanging();
					this._maxImpressions = value;
					this.SendPropertyChanged("maxImpressions");
					this.OnmaxImpressionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_couponValue", DbType="Money")]
		public System.Nullable<decimal> couponValue
		{
			get
			{
				return this._couponValue;
			}
			set
			{
				if ((this._couponValue != value))
				{
					this.OncouponValueChanging(value);
					this.SendPropertyChanging();
					this._couponValue = value;
					this.SendPropertyChanged("couponValue");
					this.OncouponValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_couponPercentage", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> couponPercentage
		{
			get
			{
				return this._couponPercentage;
			}
			set
			{
				if ((this._couponPercentage != value))
				{
					this.OncouponPercentageChanging(value);
					this.SendPropertyChanging();
					this._couponPercentage = value;
					this.SendPropertyChanged("couponPercentage");
					this.OncouponPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expired", DbType="Bit NOT NULL")]
		public bool expired
		{
			get
			{
				return this._expired;
			}
			set
			{
				if ((this._expired != value))
				{
					this.OnexpiredChanging(value);
					this.SendPropertyChanging();
					this._expired = value;
					this.SendPropertyChanged("expired");
					this.OnexpiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coupon_MASTERsubdomain", Storage="_MASTERsubdomains", ThisKey="id", OtherKey="facebookCoupon")]
		public EntitySet<MASTERsubdomain> MASTERsubdomains
		{
			get
			{
				return this._MASTERsubdomains;
			}
			set
			{
				this._MASTERsubdomains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_coupon", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.coupons.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.coupons.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.coupon = this;
		}
		
		private void detach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.coupon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shippingProfiles")]
	public partial class shippingProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _title;
		
		private long _subdomainid;
		
		private string _type;
		
		private System.Nullable<long> _etsy_templateid;
		
		private bool _permanent;
		
		private EntitySet<shippingRule> _shippingRules;
		
		private EntitySet<product> _products;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onetsy_templateidChanging(System.Nullable<long> value);
    partial void Onetsy_templateidChanged();
    partial void OnpermanentChanging(bool value);
    partial void OnpermanentChanged();
    #endregion
		
		public shippingProfile()
		{
			this._shippingRules = new EntitySet<shippingRule>(new Action<shippingRule>(this.attach_shippingRules), new Action<shippingRule>(this.detach_shippingRules));
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etsy_templateid", DbType="BigInt")]
		public System.Nullable<long> etsy_templateid
		{
			get
			{
				return this._etsy_templateid;
			}
			set
			{
				if ((this._etsy_templateid != value))
				{
					this.Onetsy_templateidChanging(value);
					this.SendPropertyChanging();
					this._etsy_templateid = value;
					this.SendPropertyChanged("etsy_templateid");
					this.Onetsy_templateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[permanent]", Storage="_permanent", DbType="Bit")]
		public bool permanent
		{
			get
			{
				return this._permanent;
			}
			set
			{
				if ((this._permanent != value))
				{
					this.OnpermanentChanging(value);
					this.SendPropertyChanging();
					this._permanent = value;
					this.SendPropertyChanged("permanent");
					this.OnpermanentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shippingProfile_shippingRule", Storage="_shippingRules", ThisKey="id", OtherKey="profileid")]
		public EntitySet<shippingRule> shippingRules
		{
			get
			{
				return this._shippingRules;
			}
			set
			{
				this._shippingRules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shippingProfile_product", Storage="_products", ThisKey="id", OtherKey="shippingProfileID")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_shippingProfile", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.shippingProfiles.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.shippingProfiles.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_shippingRules(shippingRule entity)
		{
			this.SendPropertyChanging();
			entity.shippingProfile = this;
		}
		
		private void detach_shippingRules(shippingRule entity)
		{
			this.SendPropertyChanging();
			entity.shippingProfile = null;
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.shippingProfile = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.shippingProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_variants")]
	public partial class product_variant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _sku;
		
		private long _productid;
		
		private string _color;
		
		private string _size;
		
		private EntitySet<inventoryLocationItem> _inventoryLocationItems;
		
		private EntitySet<orderItem> _orderItems;
		
		private EntitySet<cartitem> _cartitems;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnskuChanging(string value);
    partial void OnskuChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    #endregion
		
		public product_variant()
		{
			this._inventoryLocationItems = new EntitySet<inventoryLocationItem>(new Action<inventoryLocationItem>(this.attach_inventoryLocationItems), new Action<inventoryLocationItem>(this.detach_inventoryLocationItems));
			this._orderItems = new EntitySet<orderItem>(new Action<orderItem>(this.attach_orderItems), new Action<orderItem>(this.detach_orderItems));
			this._cartitems = new EntitySet<cartitem>(new Action<cartitem>(this.attach_cartitems), new Action<cartitem>(this.detach_cartitems));
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sku", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string sku
		{
			get
			{
				return this._sku;
			}
			set
			{
				if ((this._sku != value))
				{
					this.OnskuChanging(value);
					this.SendPropertyChanging();
					this._sku = value;
					this.SendPropertyChanged("sku");
					this.OnskuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NVarChar(20)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="NVarChar(20)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_variant_inventoryLocationItem", Storage="_inventoryLocationItems", ThisKey="id", OtherKey="variantid")]
		public EntitySet<inventoryLocationItem> inventoryLocationItems
		{
			get
			{
				return this._inventoryLocationItems;
			}
			set
			{
				this._inventoryLocationItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_variant_orderItem", Storage="_orderItems", ThisKey="id", OtherKey="variantid")]
		public EntitySet<orderItem> orderItems
		{
			get
			{
				return this._orderItems;
			}
			set
			{
				this._orderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_variant_cartitem", Storage="_cartitems", ThisKey="id", OtherKey="variantid")]
		public EntitySet<cartitem> cartitems
		{
			get
			{
				return this._cartitems;
			}
			set
			{
				this._cartitems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_variant", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.product_variants.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.product_variants.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_inventoryLocationItems(inventoryLocationItem entity)
		{
			this.SendPropertyChanging();
			entity.product_variant = this;
		}
		
		private void detach_inventoryLocationItems(inventoryLocationItem entity)
		{
			this.SendPropertyChanging();
			entity.product_variant = null;
		}
		
		private void attach_orderItems(orderItem entity)
		{
			this.SendPropertyChanging();
			entity.product_variant = this;
		}
		
		private void detach_orderItems(orderItem entity)
		{
			this.SendPropertyChanging();
			entity.product_variant = null;
		}
		
		private void attach_cartitems(cartitem entity)
		{
			this.SendPropertyChanging();
			entity.product_variant = this;
		}
		
		private void detach_cartitems(cartitem entity)
		{
			this.SendPropertyChanging();
			entity.product_variant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventoryHistory")]
	public partial class inventoryHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.DateTime _created;
		
		private string _description;
		
		private long _itemLocationID;
		
		private System.Nullable<int> _available;
		
		private System.Nullable<int> _onOrder;
		
		private System.Nullable<int> _reserved;
		
		private System.Nullable<int> _sold;
		
		private EntityRef<inventoryLocationItem> _inventoryLocationItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnitemLocationIDChanging(long value);
    partial void OnitemLocationIDChanged();
    partial void OnavailableChanging(System.Nullable<int> value);
    partial void OnavailableChanged();
    partial void OnonOrderChanging(System.Nullable<int> value);
    partial void OnonOrderChanged();
    partial void OnreservedChanging(System.Nullable<int> value);
    partial void OnreservedChanged();
    partial void OnsoldChanging(System.Nullable<int> value);
    partial void OnsoldChanged();
    #endregion
		
		public inventoryHistory()
		{
			this._inventoryLocationItem = default(EntityRef<inventoryLocationItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemLocationID", DbType="BigInt NOT NULL")]
		public long itemLocationID
		{
			get
			{
				return this._itemLocationID;
			}
			set
			{
				if ((this._itemLocationID != value))
				{
					if (this._inventoryLocationItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemLocationIDChanging(value);
					this.SendPropertyChanging();
					this._itemLocationID = value;
					this.SendPropertyChanged("itemLocationID");
					this.OnitemLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available", DbType="Int")]
		public System.Nullable<int> available
		{
			get
			{
				return this._available;
			}
			set
			{
				if ((this._available != value))
				{
					this.OnavailableChanging(value);
					this.SendPropertyChanging();
					this._available = value;
					this.SendPropertyChanged("available");
					this.OnavailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onOrder", DbType="Int")]
		public System.Nullable<int> onOrder
		{
			get
			{
				return this._onOrder;
			}
			set
			{
				if ((this._onOrder != value))
				{
					this.OnonOrderChanging(value);
					this.SendPropertyChanging();
					this._onOrder = value;
					this.SendPropertyChanged("onOrder");
					this.OnonOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reserved", DbType="Int")]
		public System.Nullable<int> reserved
		{
			get
			{
				return this._reserved;
			}
			set
			{
				if ((this._reserved != value))
				{
					this.OnreservedChanging(value);
					this.SendPropertyChanging();
					this._reserved = value;
					this.SendPropertyChanged("reserved");
					this.OnreservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sold", DbType="Int")]
		public System.Nullable<int> sold
		{
			get
			{
				return this._sold;
			}
			set
			{
				if ((this._sold != value))
				{
					this.OnsoldChanging(value);
					this.SendPropertyChanging();
					this._sold = value;
					this.SendPropertyChanged("sold");
					this.OnsoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventoryLocationItem_inventoryHistory", Storage="_inventoryLocationItem", ThisKey="itemLocationID", OtherKey="id", IsForeignKey=true)]
		public inventoryLocationItem inventoryLocationItem
		{
			get
			{
				return this._inventoryLocationItem.Entity;
			}
			set
			{
				inventoryLocationItem previousValue = this._inventoryLocationItem.Entity;
				if (((previousValue != value) 
							|| (this._inventoryLocationItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inventoryLocationItem.Entity = null;
						previousValue.inventoryHistories.Remove(this);
					}
					this._inventoryLocationItem.Entity = value;
					if ((value != null))
					{
						value.inventoryHistories.Add(this);
						this._itemLocationID = value.id;
					}
					else
					{
						this._itemLocationID = default(long);
					}
					this.SendPropertyChanged("inventoryLocationItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.organisations")]
	public partial class organisation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private long _subdomain;
		
		private string _address;
		
		private string _state;
		
		private System.Nullable<int> _country;
		
		private System.Nullable<long> _city;
		
		private string _postcode;
		
		private string _phone;
		
		private string _fax;
		
		private System.Nullable<long> _logo;
		
		private string _motd;
		
		private System.Nullable<decimal> _latitude;
		
		private System.Nullable<decimal> _longtitude;
		
		private System.Nullable<int> _zoom;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private System.Nullable<long> _shippingAddressID;
		
		private System.Nullable<long> _billingAddressID;
		
		private EntitySet<user> _users;
		
		private EntitySet<MASTERsubdomain> _MASTERsubdomains;
		
		private EntityRef<address> _address1;
		
		private EntityRef<address> _address2;
		
		private EntityRef<image> _image;
		
		private EntityRef<MASTERcity> _MASTERcity;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsubdomainChanging(long value);
    partial void OnsubdomainChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncountryChanging(System.Nullable<int> value);
    partial void OncountryChanged();
    partial void OncityChanging(System.Nullable<long> value);
    partial void OncityChanged();
    partial void OnpostcodeChanging(string value);
    partial void OnpostcodeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnlogoChanging(System.Nullable<long> value);
    partial void OnlogoChanged();
    partial void OnmotdChanging(string value);
    partial void OnmotdChanged();
    partial void OnlatitudeChanging(System.Nullable<decimal> value);
    partial void OnlatitudeChanged();
    partial void OnlongtitudeChanging(System.Nullable<decimal> value);
    partial void OnlongtitudeChanged();
    partial void OnzoomChanging(System.Nullable<int> value);
    partial void OnzoomChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    partial void OnshippingAddressIDChanging(System.Nullable<long> value);
    partial void OnshippingAddressIDChanged();
    partial void OnbillingAddressIDChanging(System.Nullable<long> value);
    partial void OnbillingAddressIDChanged();
    #endregion
		
		public organisation()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			this._MASTERsubdomains = new EntitySet<MASTERsubdomain>(new Action<MASTERsubdomain>(this.attach_MASTERsubdomains), new Action<MASTERsubdomain>(this.detach_MASTERsubdomains));
			this._address1 = default(EntityRef<address>);
			this._address2 = default(EntityRef<address>);
			this._image = default(EntityRef<image>);
			this._MASTERcity = default(EntityRef<MASTERcity>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomain", DbType="BigInt NOT NULL")]
		public long subdomain
		{
			get
			{
				return this._subdomain;
			}
			set
			{
				if ((this._subdomain != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainChanging(value);
					this.SendPropertyChanging();
					this._subdomain = value;
					this.SendPropertyChanged("subdomain");
					this.OnsubdomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(100)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="Int")]
		public System.Nullable<int> country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="BigInt")]
		public System.Nullable<long> city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					if (this._MASTERcity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postcode", DbType="NVarChar(64)")]
		public string postcode
		{
			get
			{
				return this._postcode;
			}
			set
			{
				if ((this._postcode != value))
				{
					this.OnpostcodeChanging(value);
					this.SendPropertyChanging();
					this._postcode = value;
					this.SendPropertyChanged("postcode");
					this.OnpostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(128)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(128)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="BigInt")]
		public System.Nullable<long> logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					if (this._image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motd", DbType="NVarChar(500)")]
		public string motd
		{
			get
			{
				return this._motd;
			}
			set
			{
				if ((this._motd != value))
				{
					this.OnmotdChanging(value);
					this.SendPropertyChanging();
					this._motd = value;
					this.SendPropertyChanged("motd");
					this.OnmotdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longtitude", DbType="Decimal(9,6)")]
		public System.Nullable<decimal> longtitude
		{
			get
			{
				return this._longtitude;
			}
			set
			{
				if ((this._longtitude != value))
				{
					this.OnlongtitudeChanging(value);
					this.SendPropertyChanging();
					this._longtitude = value;
					this.SendPropertyChanged("longtitude");
					this.OnlongtitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zoom", DbType="Int")]
		public System.Nullable<int> zoom
		{
			get
			{
				return this._zoom;
			}
			set
			{
				if ((this._zoom != value))
				{
					this.OnzoomChanging(value);
					this.SendPropertyChanging();
					this._zoom = value;
					this.SendPropertyChanged("zoom");
					this.OnzoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingAddressID", DbType="BigInt")]
		public System.Nullable<long> shippingAddressID
		{
			get
			{
				return this._shippingAddressID;
			}
			set
			{
				if ((this._shippingAddressID != value))
				{
					if (this._address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshippingAddressIDChanging(value);
					this.SendPropertyChanging();
					this._shippingAddressID = value;
					this.SendPropertyChanged("shippingAddressID");
					this.OnshippingAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingAddressID", DbType="BigInt")]
		public System.Nullable<long> billingAddressID
		{
			get
			{
				return this._billingAddressID;
			}
			set
			{
				if ((this._billingAddressID != value))
				{
					if (this._address2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbillingAddressIDChanging(value);
					this.SendPropertyChanging();
					this._billingAddressID = value;
					this.SendPropertyChanged("billingAddressID");
					this.OnbillingAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organisation_user", Storage="_users", ThisKey="id", OtherKey="organisation")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organisation_MASTERsubdomain", Storage="_MASTERsubdomains", ThisKey="id", OtherKey="creator")]
		public EntitySet<MASTERsubdomain> MASTERsubdomains
		{
			get
			{
				return this._MASTERsubdomains;
			}
			set
			{
				this._MASTERsubdomains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_organisation", Storage="_address1", ThisKey="shippingAddressID", OtherKey="id", IsForeignKey=true)]
		public address address1
		{
			get
			{
				return this._address1.Entity;
			}
			set
			{
				address previousValue = this._address1.Entity;
				if (((previousValue != value) 
							|| (this._address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address1.Entity = null;
						previousValue.organisations.Remove(this);
					}
					this._address1.Entity = value;
					if ((value != null))
					{
						value.organisations.Add(this);
						this._shippingAddressID = value.id;
					}
					else
					{
						this._shippingAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_organisation1", Storage="_address2", ThisKey="billingAddressID", OtherKey="id", IsForeignKey=true)]
		public address address2
		{
			get
			{
				return this._address2.Entity;
			}
			set
			{
				address previousValue = this._address2.Entity;
				if (((previousValue != value) 
							|| (this._address2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address2.Entity = null;
						previousValue.organisations1.Remove(this);
					}
					this._address2.Entity = value;
					if ((value != null))
					{
						value.organisations1.Add(this);
						this._billingAddressID = value.id;
					}
					else
					{
						this._billingAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("address2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_organisation", Storage="_image", ThisKey="logo", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public image image
		{
			get
			{
				return this._image.Entity;
			}
			set
			{
				image previousValue = this._image.Entity;
				if (((previousValue != value) 
							|| (this._image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._image.Entity = null;
						previousValue.organisations.Remove(this);
					}
					this._image.Entity = value;
					if ((value != null))
					{
						value.organisations.Add(this);
						this._logo = value.id;
					}
					else
					{
						this._logo = default(Nullable<long>);
					}
					this.SendPropertyChanged("image");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERcity_organisation", Storage="_MASTERcity", ThisKey="city", OtherKey="id", IsForeignKey=true)]
		public MASTERcity MASTERcity
		{
			get
			{
				return this._MASTERcity.Entity;
			}
			set
			{
				MASTERcity previousValue = this._MASTERcity.Entity;
				if (((previousValue != value) 
							|| (this._MASTERcity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERcity.Entity = null;
						previousValue.organisations.Remove(this);
					}
					this._MASTERcity.Entity = value;
					if ((value != null))
					{
						value.organisations.Add(this);
						this._city = value.id;
					}
					else
					{
						this._city = default(Nullable<long>);
					}
					this.SendPropertyChanged("MASTERcity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_organisation", Storage="_MASTERsubdomain", ThisKey="subdomain", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.organisations.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.organisations.Add(this);
						this._subdomain = value.id;
					}
					else
					{
						this._subdomain = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.organisation1 = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.organisation1 = null;
		}
		
		private void attach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.organisation = this;
		}
		
		private void detach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.organisation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gbase_products")]
	public partial class gbase_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _externalid;
		
		private string _externallink;
		
		private System.DateTime _expirydate;
		
		private int _flags;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnexternalidChanging(string value);
    partial void OnexternalidChanged();
    partial void OnexternallinkChanging(string value);
    partial void OnexternallinkChanged();
    partial void OnexpirydateChanging(System.DateTime value);
    partial void OnexpirydateChanged();
    partial void OnflagsChanging(int value);
    partial void OnflagsChanged();
    #endregion
		
		public gbase_product()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externalid", DbType="VarChar(100)")]
		public string externalid
		{
			get
			{
				return this._externalid;
			}
			set
			{
				if ((this._externalid != value))
				{
					this.OnexternalidChanging(value);
					this.SendPropertyChanging();
					this._externalid = value;
					this.SendPropertyChanged("externalid");
					this.OnexternalidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externallink", DbType="VarChar(320)")]
		public string externallink
		{
			get
			{
				return this._externallink;
			}
			set
			{
				if ((this._externallink != value))
				{
					this.OnexternallinkChanging(value);
					this.SendPropertyChanging();
					this._externallink = value;
					this.SendPropertyChanged("externallink");
					this.OnexternallinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expirydate", DbType="DateTime NOT NULL")]
		public System.DateTime expirydate
		{
			get
			{
				return this._expirydate;
			}
			set
			{
				if ((this._expirydate != value))
				{
					this.OnexpirydateChanging(value);
					this.SendPropertyChanging();
					this._expirydate = value;
					this.SendPropertyChanged("expirydate");
					this.OnexpirydateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="Int NOT NULL")]
		public int flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gbase_product_product", Storage="_products", ThisKey="id", OtherKey="gbase")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.gbase_product = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.gbase_product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.googleBase")]
	public partial class googleBase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _country;
		
		private long _accountid;
		
		private string _sessiontoken;
		
		private EntitySet<MASTERsubdomain> _MASTERsubdomains;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncountryChanging(int value);
    partial void OncountryChanged();
    partial void OnaccountidChanging(long value);
    partial void OnaccountidChanged();
    partial void OnsessiontokenChanging(string value);
    partial void OnsessiontokenChanged();
    #endregion
		
		public googleBase()
		{
			this._MASTERsubdomains = new EntitySet<MASTERsubdomain>(new Action<MASTERsubdomain>(this.attach_MASTERsubdomains), new Action<MASTERsubdomain>(this.detach_MASTERsubdomains));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="Int NOT NULL")]
		public int country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountid", DbType="BigInt NOT NULL")]
		public long accountid
		{
			get
			{
				return this._accountid;
			}
			set
			{
				if ((this._accountid != value))
				{
					this.OnaccountidChanging(value);
					this.SendPropertyChanging();
					this._accountid = value;
					this.SendPropertyChanged("accountid");
					this.OnaccountidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessiontoken", DbType="VarChar(64)")]
		public string sessiontoken
		{
			get
			{
				return this._sessiontoken;
			}
			set
			{
				if ((this._sessiontoken != value))
				{
					this.OnsessiontokenChanging(value);
					this.SendPropertyChanging();
					this._sessiontoken = value;
					this.SendPropertyChanged("sessiontoken");
					this.OnsessiontokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="googleBase_MASTERsubdomain", Storage="_MASTERsubdomains", ThisKey="id", OtherKey="gbaseid")]
		public EntitySet<MASTERsubdomain> MASTERsubdomains
		{
			get
			{
				return this._MASTERsubdomains;
			}
			set
			{
				this._MASTERsubdomains.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.googleBase = this;
		}
		
		private void detach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.googleBase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products_digitals")]
	public partial class products_digital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<int> _limit;
		
		private System.Nullable<System.DateTime> _expiryDate;
		
		private string _filepath;
		
		private string _filename;
		
		private System.Nullable<long> _productid;
		
		private string _linkid;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnlimitChanging(System.Nullable<int> value);
    partial void OnlimitChanged();
    partial void OnexpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiryDateChanged();
    partial void OnfilepathChanging(string value);
    partial void OnfilepathChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OnproductidChanging(System.Nullable<long> value);
    partial void OnproductidChanged();
    partial void OnlinkidChanging(string value);
    partial void OnlinkidChanged();
    #endregion
		
		public products_digital()
		{
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit", DbType="Int")]
		public System.Nullable<int> limit
		{
			get
			{
				return this._limit;
			}
			set
			{
				if ((this._limit != value))
				{
					this.OnlimitChanging(value);
					this.SendPropertyChanging();
					this._limit = value;
					this.SendPropertyChanged("limit");
					this.OnlimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expiryDate
		{
			get
			{
				return this._expiryDate;
			}
			set
			{
				if ((this._expiryDate != value))
				{
					this.OnexpiryDateChanging(value);
					this.SendPropertyChanging();
					this._expiryDate = value;
					this.SendPropertyChanged("expiryDate");
					this.OnexpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filepath", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string filepath
		{
			get
			{
				return this._filepath;
			}
			set
			{
				if ((this._filepath != value))
				{
					this.OnfilepathChanging(value);
					this.SendPropertyChanging();
					this._filepath = value;
					this.SendPropertyChanged("filepath");
					this.OnfilepathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt")]
		public System.Nullable<long> productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkid", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string linkid
		{
			get
			{
				return this._linkid;
			}
			set
			{
				if ((this._linkid != value))
				{
					this.OnlinkidChanging(value);
					this.SendPropertyChanging();
					this._linkid = value;
					this.SendPropertyChanged("linkid");
					this.OnlinkidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_digital", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.products_digitals = null;
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.products_digitals = this;
						this._productid = value.id;
					}
					else
					{
						this._productid = default(Nullable<long>);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderItems_digitals")]
	public partial class orderItems_digital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _downloadid;
		
		private int _downloadCount;
		
		private System.Nullable<long> _orderitemid;
		
		private EntityRef<orderItem> _orderItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OndownloadidChanging(string value);
    partial void OndownloadidChanged();
    partial void OndownloadCountChanging(int value);
    partial void OndownloadCountChanged();
    partial void OnorderitemidChanging(System.Nullable<long> value);
    partial void OnorderitemidChanged();
    #endregion
		
		public orderItems_digital()
		{
			this._orderItem = default(EntityRef<orderItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_downloadid", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string downloadid
		{
			get
			{
				return this._downloadid;
			}
			set
			{
				if ((this._downloadid != value))
				{
					this.OndownloadidChanging(value);
					this.SendPropertyChanging();
					this._downloadid = value;
					this.SendPropertyChanged("downloadid");
					this.OndownloadidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_downloadCount", DbType="Int NOT NULL")]
		public int downloadCount
		{
			get
			{
				return this._downloadCount;
			}
			set
			{
				if ((this._downloadCount != value))
				{
					this.OndownloadCountChanging(value);
					this.SendPropertyChanging();
					this._downloadCount = value;
					this.SendPropertyChanged("downloadCount");
					this.OndownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderitemid", DbType="BigInt")]
		public System.Nullable<long> orderitemid
		{
			get
			{
				return this._orderitemid;
			}
			set
			{
				if ((this._orderitemid != value))
				{
					if (this._orderItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderitemidChanging(value);
					this.SendPropertyChanging();
					this._orderitemid = value;
					this.SendPropertyChanged("orderitemid");
					this.OnorderitemidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="orderItem_orderItems_digital", Storage="_orderItem", ThisKey="orderitemid", OtherKey="id", IsForeignKey=true)]
		public orderItem orderItem
		{
			get
			{
				return this._orderItem.Entity;
			}
			set
			{
				orderItem previousValue = this._orderItem.Entity;
				if (((previousValue != value) 
							|| (this._orderItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._orderItem.Entity = null;
						previousValue.orderItems_digitals = null;
					}
					this._orderItem.Entity = value;
					if ((value != null))
					{
						value.orderItems_digitals = this;
						this._orderitemid = value.id;
					}
					else
					{
						this._orderitemid = default(Nullable<long>);
					}
					this.SendPropertyChanged("orderItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.comments")]
	public partial class comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _transactionID;
		
		private string _comments;
		
		private System.Nullable<long> _creator;
		
		private System.DateTime _created;
		
		private EntityRef<transaction> _transaction;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntransactionIDChanging(long value);
    partial void OntransactionIDChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OncreatorChanging(System.Nullable<long> value);
    partial void OncreatorChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    #endregion
		
		public comment()
		{
			this._transaction = default(EntityRef<transaction>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transactionID", DbType="BigInt NOT NULL")]
		public long transactionID
		{
			get
			{
				return this._transactionID;
			}
			set
			{
				if ((this._transactionID != value))
				{
					if (this._transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransactionIDChanging(value);
					this.SendPropertyChanging();
					this._transactionID = value;
					this.SendPropertyChanged("transactionID");
					this.OntransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(600) NOT NULL", CanBeNull=false)]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creator", DbType="BigInt")]
		public System.Nullable<long> creator
		{
			get
			{
				return this._creator;
			}
			set
			{
				if ((this._creator != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreatorChanging(value);
					this.SendPropertyChanging();
					this._creator = value;
					this.SendPropertyChanged("creator");
					this.OncreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="transaction_comment", Storage="_transaction", ThisKey="transactionID", OtherKey="id", IsForeignKey=true)]
		public transaction transaction
		{
			get
			{
				return this._transaction.Entity;
			}
			set
			{
				transaction previousValue = this._transaction.Entity;
				if (((previousValue != value) 
							|| (this._transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._transaction.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._transaction.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._transactionID = value.id;
					}
					else
					{
						this._transactionID = default(long);
					}
					this.SendPropertyChanged("transaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_comment", Storage="_user", ThisKey="creator", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.comments.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.comments.Add(this);
						this._creator = value.id;
					}
					else
					{
						this._creator = default(Nullable<long>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.themes")]
	public partial class theme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _url;
		
		private string _title;
		
		private System.DateTime _created;
		
		private string _preset;
		
		private string _theme_version;
		
		private string _theme_mobile_version;
		
		private EntitySet<MASTERsubdomain> _MASTERsubdomains;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnpresetChanging(string value);
    partial void OnpresetChanged();
    partial void Ontheme_versionChanging(string value);
    partial void Ontheme_versionChanged();
    partial void Ontheme_mobile_versionChanging(string value);
    partial void Ontheme_mobile_versionChanged();
    #endregion
		
		public theme()
		{
			this._MASTERsubdomains = new EntitySet<MASTERsubdomain>(new Action<MASTERsubdomain>(this.attach_MASTERsubdomains), new Action<MASTERsubdomain>(this.detach_MASTERsubdomains));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preset", DbType="NVarChar(100)")]
		public string preset
		{
			get
			{
				return this._preset;
			}
			set
			{
				if ((this._preset != value))
				{
					this.OnpresetChanging(value);
					this.SendPropertyChanging();
					this._preset = value;
					this.SendPropertyChanged("preset");
					this.OnpresetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theme_version", DbType="VarChar(20)")]
		public string theme_version
		{
			get
			{
				return this._theme_version;
			}
			set
			{
				if ((this._theme_version != value))
				{
					this.Ontheme_versionChanging(value);
					this.SendPropertyChanging();
					this._theme_version = value;
					this.SendPropertyChanged("theme_version");
					this.Ontheme_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theme_mobile_version", DbType="VarChar(20)")]
		public string theme_mobile_version
		{
			get
			{
				return this._theme_mobile_version;
			}
			set
			{
				if ((this._theme_mobile_version != value))
				{
					this.Ontheme_mobile_versionChanging(value);
					this.SendPropertyChanging();
					this._theme_mobile_version = value;
					this.SendPropertyChanged("theme_mobile_version");
					this.Ontheme_mobile_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theme_MASTERsubdomain", Storage="_MASTERsubdomains", ThisKey="id", OtherKey="currentThemeID")]
		public EntitySet<MASTERsubdomain> MASTERsubdomains
		{
			get
			{
				return this._MASTERsubdomains;
			}
			set
			{
				this._MASTERsubdomains.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.theme = this;
		}
		
		private void detach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.theme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_conditions")]
	public partial class ebay_condition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _ebayrowid;
		
		private string _name;
		
		private int _value;
		
		private EntityRef<ebay_category> _ebay_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnebayrowidChanging(long value);
    partial void OnebayrowidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(int value);
    partial void OnvalueChanged();
    #endregion
		
		public ebay_condition()
		{
			this._ebay_category = default(EntityRef<ebay_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebayrowid", DbType="BigInt NOT NULL")]
		public long ebayrowid
		{
			get
			{
				return this._ebayrowid;
			}
			set
			{
				if ((this._ebayrowid != value))
				{
					if (this._ebay_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnebayrowidChanging(value);
					this.SendPropertyChanging();
					this._ebayrowid = value;
					this.SendPropertyChanged("ebayrowid");
					this.OnebayrowidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int NOT NULL")]
		public int value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_category_ebay_condition", Storage="_ebay_category", ThisKey="ebayrowid", OtherKey="id", IsForeignKey=true)]
		public ebay_category ebay_category
		{
			get
			{
				return this._ebay_category.Entity;
			}
			set
			{
				ebay_category previousValue = this._ebay_category.Entity;
				if (((previousValue != value) 
							|| (this._ebay_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_category.Entity = null;
						previousValue.ebay_conditions.Remove(this);
					}
					this._ebay_category.Entity = value;
					if ((value != null))
					{
						value.ebay_conditions.Add(this);
						this._ebayrowid = value.id;
					}
					else
					{
						this._ebayrowid = default(long);
					}
					this.SendPropertyChanged("ebay_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.paymentMethods")]
	public partial class paymentMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _method;
		
		private string _name;
		
		private string _instructions;
		
		private long _subdomainid;
		
		private string _identifier;
		
		private EntitySet<cart> _carts;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnmethodChanging(string value);
    partial void OnmethodChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OninstructionsChanging(string value);
    partial void OninstructionsChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnidentifierChanging(string value);
    partial void OnidentifierChanged();
    #endregion
		
		public paymentMethod()
		{
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_method", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string method
		{
			get
			{
				return this._method;
			}
			set
			{
				if ((this._method != value))
				{
					this.OnmethodChanging(value);
					this.SendPropertyChanging();
					this._method = value;
					this.SendPropertyChanged("method");
					this.OnmethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_instructions", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string instructions
		{
			get
			{
				return this._instructions;
			}
			set
			{
				if ((this._instructions != value))
				{
					this.OninstructionsChanging(value);
					this.SendPropertyChanging();
					this._instructions = value;
					this.SendPropertyChanged("instructions");
					this.OninstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identifier", DbType="NVarChar(320)")]
		public string identifier
		{
			get
			{
				return this._identifier;
			}
			set
			{
				if ((this._identifier != value))
				{
					this.OnidentifierChanging(value);
					this.SendPropertyChanging();
					this._identifier = value;
					this.SendPropertyChanged("identifier");
					this.OnidentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="paymentMethod_cart", Storage="_carts", ThisKey="id", OtherKey="paymentCustomId")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_paymentMethod", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.paymentMethods.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.paymentMethods.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.paymentMethod1 = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.paymentMethod1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_listingdurations")]
	public partial class ebay_listingduration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _ebayrowid;
		
		private string _listingtypeid;
		
		private string _duration;
		
		private EntityRef<ebay_category> _ebay_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnebayrowidChanging(long value);
    partial void OnebayrowidChanged();
    partial void OnlistingtypeidChanging(string value);
    partial void OnlistingtypeidChanged();
    partial void OndurationChanging(string value);
    partial void OndurationChanged();
    #endregion
		
		public ebay_listingduration()
		{
			this._ebay_category = default(EntityRef<ebay_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebayrowid", DbType="BigInt NOT NULL")]
		public long ebayrowid
		{
			get
			{
				return this._ebayrowid;
			}
			set
			{
				if ((this._ebayrowid != value))
				{
					if (this._ebay_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnebayrowidChanging(value);
					this.SendPropertyChanging();
					this._ebayrowid = value;
					this.SendPropertyChanged("ebayrowid");
					this.OnebayrowidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_listingtypeid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string listingtypeid
		{
			get
			{
				return this._listingtypeid;
			}
			set
			{
				if ((this._listingtypeid != value))
				{
					this.OnlistingtypeidChanging(value);
					this.SendPropertyChanging();
					this._listingtypeid = value;
					this.SendPropertyChanged("listingtypeid");
					this.OnlistingtypeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_category_ebay_listingduration", Storage="_ebay_category", ThisKey="ebayrowid", OtherKey="id", IsForeignKey=true)]
		public ebay_category ebay_category
		{
			get
			{
				return this._ebay_category.Entity;
			}
			set
			{
				ebay_category previousValue = this._ebay_category.Entity;
				if (((previousValue != value) 
							|| (this._ebay_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_category.Entity = null;
						previousValue.ebay_listingdurations.Remove(this);
					}
					this._ebay_category.Entity = value;
					if ((value != null))
					{
						value.ebay_listingdurations.Add(this);
						this._ebayrowid = value.id;
					}
					else
					{
						this._ebayrowid = default(long);
					}
					this.SendPropertyChanged("ebay_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_categories")]
	public partial class ebay_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _siteid;
		
		private int _categoryid;
		
		private int _level;
		
		private string _name;
		
		private int _parentid;
		
		private bool _leaf;
		
		private System.Nullable<bool> _requiresReturnPolicy;
		
		private System.Nullable<bool> _done;
		
		private System.Nullable<bool> _supportsVariants;
		
		private EntitySet<ebay_condition> _ebay_conditions;
		
		private EntitySet<ebay_listingduration> _ebay_listingdurations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsiteidChanging(string value);
    partial void OnsiteidChanged();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentidChanging(int value);
    partial void OnparentidChanged();
    partial void OnleafChanging(bool value);
    partial void OnleafChanged();
    partial void OnrequiresReturnPolicyChanging(System.Nullable<bool> value);
    partial void OnrequiresReturnPolicyChanged();
    partial void OndoneChanging(System.Nullable<bool> value);
    partial void OndoneChanged();
    partial void OnsupportsVariantsChanging(System.Nullable<bool> value);
    partial void OnsupportsVariantsChanged();
    #endregion
		
		public ebay_category()
		{
			this._ebay_conditions = new EntitySet<ebay_condition>(new Action<ebay_condition>(this.attach_ebay_conditions), new Action<ebay_condition>(this.detach_ebay_conditions));
			this._ebay_listingdurations = new EntitySet<ebay_listingduration>(new Action<ebay_listingduration>(this.attach_ebay_listingdurations), new Action<ebay_listingduration>(this.detach_ebay_listingdurations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string siteid
		{
			get
			{
				return this._siteid;
			}
			set
			{
				if ((this._siteid != value))
				{
					this.OnsiteidChanging(value);
					this.SendPropertyChanging();
					this._siteid = value;
					this.SendPropertyChanged("siteid");
					this.OnsiteidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", DbType="Int NOT NULL")]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentid", DbType="Int NOT NULL")]
		public int parentid
		{
			get
			{
				return this._parentid;
			}
			set
			{
				if ((this._parentid != value))
				{
					this.OnparentidChanging(value);
					this.SendPropertyChanging();
					this._parentid = value;
					this.SendPropertyChanged("parentid");
					this.OnparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leaf", DbType="Bit NOT NULL")]
		public bool leaf
		{
			get
			{
				return this._leaf;
			}
			set
			{
				if ((this._leaf != value))
				{
					this.OnleafChanging(value);
					this.SendPropertyChanging();
					this._leaf = value;
					this.SendPropertyChanged("leaf");
					this.OnleafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requiresReturnPolicy", DbType="Bit")]
		public System.Nullable<bool> requiresReturnPolicy
		{
			get
			{
				return this._requiresReturnPolicy;
			}
			set
			{
				if ((this._requiresReturnPolicy != value))
				{
					this.OnrequiresReturnPolicyChanging(value);
					this.SendPropertyChanging();
					this._requiresReturnPolicy = value;
					this.SendPropertyChanged("requiresReturnPolicy");
					this.OnrequiresReturnPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_done", DbType="Bit")]
		public System.Nullable<bool> done
		{
			get
			{
				return this._done;
			}
			set
			{
				if ((this._done != value))
				{
					this.OndoneChanging(value);
					this.SendPropertyChanging();
					this._done = value;
					this.SendPropertyChanged("done");
					this.OndoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supportsVariants", DbType="Bit")]
		public System.Nullable<bool> supportsVariants
		{
			get
			{
				return this._supportsVariants;
			}
			set
			{
				if ((this._supportsVariants != value))
				{
					this.OnsupportsVariantsChanging(value);
					this.SendPropertyChanging();
					this._supportsVariants = value;
					this.SendPropertyChanged("supportsVariants");
					this.OnsupportsVariantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_category_ebay_condition", Storage="_ebay_conditions", ThisKey="id", OtherKey="ebayrowid")]
		public EntitySet<ebay_condition> ebay_conditions
		{
			get
			{
				return this._ebay_conditions;
			}
			set
			{
				this._ebay_conditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_category_ebay_listingduration", Storage="_ebay_listingdurations", ThisKey="id", OtherKey="ebayrowid")]
		public EntitySet<ebay_listingduration> ebay_listingdurations
		{
			get
			{
				return this._ebay_listingdurations;
			}
			set
			{
				this._ebay_listingdurations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ebay_conditions(ebay_condition entity)
		{
			this.SendPropertyChanging();
			entity.ebay_category = this;
		}
		
		private void detach_ebay_conditions(ebay_condition entity)
		{
			this.SendPropertyChanging();
			entity.ebay_category = null;
		}
		
		private void attach_ebay_listingdurations(ebay_listingduration entity)
		{
			this.SendPropertyChanging();
			entity.ebay_category = this;
		}
		
		private void detach_ebay_listingdurations(ebay_listingduration entity)
		{
			this.SendPropertyChanging();
			entity.ebay_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_shippingservices")]
	public partial class ebay_shippingservice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _siteid;
		
		private string _description;
		
		private string _servicetype;
		
		private bool _isInternational;
		
		private bool _requiresWeight;
		
		private bool _requiresDimension;
		
		private EntitySet<ebay_shippingrule> _ebay_shippingrules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsiteidChanging(string value);
    partial void OnsiteidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnservicetypeChanging(string value);
    partial void OnservicetypeChanged();
    partial void OnisInternationalChanging(bool value);
    partial void OnisInternationalChanged();
    partial void OnrequiresWeightChanging(bool value);
    partial void OnrequiresWeightChanged();
    partial void OnrequiresDimensionChanging(bool value);
    partial void OnrequiresDimensionChanged();
    #endregion
		
		public ebay_shippingservice()
		{
			this._ebay_shippingrules = new EntitySet<ebay_shippingrule>(new Action<ebay_shippingrule>(this.attach_ebay_shippingrules), new Action<ebay_shippingrule>(this.detach_ebay_shippingrules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string siteid
		{
			get
			{
				return this._siteid;
			}
			set
			{
				if ((this._siteid != value))
				{
					this.OnsiteidChanging(value);
					this.SendPropertyChanging();
					this._siteid = value;
					this.SendPropertyChanged("siteid");
					this.OnsiteidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servicetype", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string servicetype
		{
			get
			{
				return this._servicetype;
			}
			set
			{
				if ((this._servicetype != value))
				{
					this.OnservicetypeChanging(value);
					this.SendPropertyChanging();
					this._servicetype = value;
					this.SendPropertyChanged("servicetype");
					this.OnservicetypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isInternational", DbType="Bit NOT NULL")]
		public bool isInternational
		{
			get
			{
				return this._isInternational;
			}
			set
			{
				if ((this._isInternational != value))
				{
					this.OnisInternationalChanging(value);
					this.SendPropertyChanging();
					this._isInternational = value;
					this.SendPropertyChanged("isInternational");
					this.OnisInternationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requiresWeight", DbType="Bit NOT NULL")]
		public bool requiresWeight
		{
			get
			{
				return this._requiresWeight;
			}
			set
			{
				if ((this._requiresWeight != value))
				{
					this.OnrequiresWeightChanging(value);
					this.SendPropertyChanging();
					this._requiresWeight = value;
					this.SendPropertyChanged("requiresWeight");
					this.OnrequiresWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requiresDimension", DbType="Bit NOT NULL")]
		public bool requiresDimension
		{
			get
			{
				return this._requiresDimension;
			}
			set
			{
				if ((this._requiresDimension != value))
				{
					this.OnrequiresDimensionChanging(value);
					this.SendPropertyChanging();
					this._requiresDimension = value;
					this.SendPropertyChanged("requiresDimension");
					this.OnrequiresDimensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_shippingservice_ebay_shippingrule", Storage="_ebay_shippingrules", ThisKey="id", OtherKey="serviceid")]
		public EntitySet<ebay_shippingrule> ebay_shippingrules
		{
			get
			{
				return this._ebay_shippingrules;
			}
			set
			{
				this._ebay_shippingrules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ebay_shippingrules(ebay_shippingrule entity)
		{
			this.SendPropertyChanging();
			entity.ebay_shippingservice = this;
		}
		
		private void detach_ebay_shippingrules(ebay_shippingrule entity)
		{
			this.SendPropertyChanging();
			entity.ebay_shippingservice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_shippingprofiles")]
	public partial class ebay_shippingprofile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _title;
		
		private long _subdomainid;
		
		private string _siteid;
		
		private EntitySet<ebay_shippingrule> _ebay_shippingrules;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnsiteidChanging(string value);
    partial void OnsiteidChanged();
    #endregion
		
		public ebay_shippingprofile()
		{
			this._ebay_shippingrules = new EntitySet<ebay_shippingrule>(new Action<ebay_shippingrule>(this.attach_ebay_shippingrules), new Action<ebay_shippingrule>(this.detach_ebay_shippingrules));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string siteid
		{
			get
			{
				return this._siteid;
			}
			set
			{
				if ((this._siteid != value))
				{
					this.OnsiteidChanging(value);
					this.SendPropertyChanging();
					this._siteid = value;
					this.SendPropertyChanged("siteid");
					this.OnsiteidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_shippingprofile_ebay_shippingrule", Storage="_ebay_shippingrules", ThisKey="id", OtherKey="profileid")]
		public EntitySet<ebay_shippingrule> ebay_shippingrules
		{
			get
			{
				return this._ebay_shippingrules;
			}
			set
			{
				this._ebay_shippingrules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_ebay_shippingprofile", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.ebay_shippingprofiles.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.ebay_shippingprofiles.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ebay_shippingrules(ebay_shippingrule entity)
		{
			this.SendPropertyChanging();
			entity.ebay_shippingprofile = this;
		}
		
		private void detach_ebay_shippingrules(ebay_shippingrule entity)
		{
			this.SendPropertyChanging();
			entity.ebay_shippingprofile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_shippingrules")]
	public partial class ebay_shippingrule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _profileid;
		
		private int _serviceid;
		
		private decimal _cost;
		
		private EntitySet<ebay_shippingrule_location> _ebay_shippingrule_locations;
		
		private EntityRef<ebay_shippingprofile> _ebay_shippingprofile;
		
		private EntityRef<ebay_shippingservice> _ebay_shippingservice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnprofileidChanging(long value);
    partial void OnprofileidChanged();
    partial void OnserviceidChanging(int value);
    partial void OnserviceidChanged();
    partial void OncostChanging(decimal value);
    partial void OncostChanged();
    #endregion
		
		public ebay_shippingrule()
		{
			this._ebay_shippingrule_locations = new EntitySet<ebay_shippingrule_location>(new Action<ebay_shippingrule_location>(this.attach_ebay_shippingrule_locations), new Action<ebay_shippingrule_location>(this.detach_ebay_shippingrule_locations));
			this._ebay_shippingprofile = default(EntityRef<ebay_shippingprofile>);
			this._ebay_shippingservice = default(EntityRef<ebay_shippingservice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileid", DbType="BigInt NOT NULL")]
		public long profileid
		{
			get
			{
				return this._profileid;
			}
			set
			{
				if ((this._profileid != value))
				{
					if (this._ebay_shippingprofile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprofileidChanging(value);
					this.SendPropertyChanging();
					this._profileid = value;
					this.SendPropertyChanged("profileid");
					this.OnprofileidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceid", DbType="Int NOT NULL")]
		public int serviceid
		{
			get
			{
				return this._serviceid;
			}
			set
			{
				if ((this._serviceid != value))
				{
					if (this._ebay_shippingservice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceidChanging(value);
					this.SendPropertyChanging();
					this._serviceid = value;
					this.SendPropertyChanged("serviceid");
					this.OnserviceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Money NOT NULL")]
		public decimal cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_shippingrule_ebay_shippingrule_location", Storage="_ebay_shippingrule_locations", ThisKey="id", OtherKey="ruleid")]
		public EntitySet<ebay_shippingrule_location> ebay_shippingrule_locations
		{
			get
			{
				return this._ebay_shippingrule_locations;
			}
			set
			{
				this._ebay_shippingrule_locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_shippingprofile_ebay_shippingrule", Storage="_ebay_shippingprofile", ThisKey="profileid", OtherKey="id", IsForeignKey=true)]
		public ebay_shippingprofile ebay_shippingprofile
		{
			get
			{
				return this._ebay_shippingprofile.Entity;
			}
			set
			{
				ebay_shippingprofile previousValue = this._ebay_shippingprofile.Entity;
				if (((previousValue != value) 
							|| (this._ebay_shippingprofile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_shippingprofile.Entity = null;
						previousValue.ebay_shippingrules.Remove(this);
					}
					this._ebay_shippingprofile.Entity = value;
					if ((value != null))
					{
						value.ebay_shippingrules.Add(this);
						this._profileid = value.id;
					}
					else
					{
						this._profileid = default(long);
					}
					this.SendPropertyChanged("ebay_shippingprofile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_shippingservice_ebay_shippingrule", Storage="_ebay_shippingservice", ThisKey="serviceid", OtherKey="id", IsForeignKey=true)]
		public ebay_shippingservice ebay_shippingservice
		{
			get
			{
				return this._ebay_shippingservice.Entity;
			}
			set
			{
				ebay_shippingservice previousValue = this._ebay_shippingservice.Entity;
				if (((previousValue != value) 
							|| (this._ebay_shippingservice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_shippingservice.Entity = null;
						previousValue.ebay_shippingrules.Remove(this);
					}
					this._ebay_shippingservice.Entity = value;
					if ((value != null))
					{
						value.ebay_shippingrules.Add(this);
						this._serviceid = value.id;
					}
					else
					{
						this._serviceid = default(int);
					}
					this.SendPropertyChanged("ebay_shippingservice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ebay_shippingrule_locations(ebay_shippingrule_location entity)
		{
			this.SendPropertyChanging();
			entity.ebay_shippingrule = this;
		}
		
		private void detach_ebay_shippingrule_locations(ebay_shippingrule_location entity)
		{
			this.SendPropertyChanging();
			entity.ebay_shippingrule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_shippinglocations")]
	public partial class ebay_shippinglocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _siteid;
		
		private string _description;
		
		private string _location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsiteidChanging(string value);
    partial void OnsiteidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public ebay_shippinglocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string siteid
		{
			get
			{
				return this._siteid;
			}
			set
			{
				if ((this._siteid != value))
				{
					this.OnsiteidChanging(value);
					this.SendPropertyChanging();
					this._siteid = value;
					this.SendPropertyChanged("siteid");
					this.OnsiteidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_shippingrule_locations")]
	public partial class ebay_shippingrule_location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _ruleid;
		
		private string _description;
		
		private string _location;
		
		private EntityRef<ebay_shippingrule> _ebay_shippingrule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnruleidChanging(long value);
    partial void OnruleidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public ebay_shippingrule_location()
		{
			this._ebay_shippingrule = default(EntityRef<ebay_shippingrule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ruleid", DbType="BigInt NOT NULL")]
		public long ruleid
		{
			get
			{
				return this._ruleid;
			}
			set
			{
				if ((this._ruleid != value))
				{
					if (this._ebay_shippingrule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnruleidChanging(value);
					this.SendPropertyChanging();
					this._ruleid = value;
					this.SendPropertyChanged("ruleid");
					this.OnruleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_shippingrule_ebay_shippingrule_location", Storage="_ebay_shippingrule", ThisKey="ruleid", OtherKey="id", IsForeignKey=true)]
		public ebay_shippingrule ebay_shippingrule
		{
			get
			{
				return this._ebay_shippingrule.Entity;
			}
			set
			{
				ebay_shippingrule previousValue = this._ebay_shippingrule.Entity;
				if (((previousValue != value) 
							|| (this._ebay_shippingrule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_shippingrule.Entity = null;
						previousValue.ebay_shippingrule_locations.Remove(this);
					}
					this._ebay_shippingrule.Entity = value;
					if ((value != null))
					{
						value.ebay_shippingrule_locations.Add(this);
						this._ruleid = value.id;
					}
					else
					{
						this._ruleid = default(long);
					}
					this.SendPropertyChanged("ebay_shippingrule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_dispatchtimes")]
	public partial class ebay_dispatchtime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _siteid;
		
		private int _dispatchTime;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsiteidChanging(string value);
    partial void OnsiteidChanged();
    partial void OndispatchTimeChanging(int value);
    partial void OndispatchTimeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ebay_dispatchtime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string siteid
		{
			get
			{
				return this._siteid;
			}
			set
			{
				if ((this._siteid != value))
				{
					this.OnsiteidChanging(value);
					this.SendPropertyChanging();
					this._siteid = value;
					this.SendPropertyChanged("siteid");
					this.OnsiteidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dispatchTime", DbType="Int NOT NULL")]
		public int dispatchTime
		{
			get
			{
				return this._dispatchTime;
			}
			set
			{
				if ((this._dispatchTime != value))
				{
					this.OndispatchTimeChanging(value);
					this.SendPropertyChanging();
					this._dispatchTime = value;
					this.SendPropertyChanged("dispatchTime");
					this.OndispatchTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _role;
		
		private string _fullName;
		
		private string _email;
		
		private string _proxiedEmail;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _gender;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _passwordHash;
		
		private System.Nullable<long> _organisation;
		
		private string _timezone;
		
		private string _phoneNumber;
		
		private string _openID;
		
		private string _FBID;
		
		private string _GFCID;
		
		private System.DateTime _created;
		
		private System.DateTime _lastLogin;
		
		private string _title;
		
		private string _notes;
		
		private System.Nullable<int> _confirmationCode;
		
		private int _settings;
		
		private System.Nullable<long> _profilePhoto;
		
		private System.Nullable<int> _permissions;
		
		private string _viewid;
		
		private string _externalProfilePhoto;
		
		private string _twitterID;
		
		private System.Nullable<System.DateTime> _lastOfflineCheck;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private string _externalProfileUrl;
		
		private System.Nullable<long> _ebayID;
		
		private EntitySet<activity> _activities;
		
		private EntitySet<changeHistoryItem> _changeHistoryItems;
		
		private EntitySet<favourite> _favourites;
		
		private EntitySet<message> _messages;
		
		private EntitySet<message> _messages1;
		
		private EntitySet<linkRequest> _linkRequests;
		
		private EntitySet<linkRequest> _linkRequests1;
		
		private EntitySet<product_comment> _product_comments;
		
		private EntitySet<contactGroupMember> _contactGroupMembers;
		
		private EntitySet<cart> _carts;
		
		private EntitySet<article> _articles;
		
		private EntitySet<comment> _comments;
		
		private EntitySet<order> _orders;
		
		private EntitySet<order> _orders1;
		
		private EntitySet<page> _pages;
		
		private EntityRef<image> _image;
		
		private EntityRef<organisation> _organisation1;
		
		private EntityRef<ebay_user> _ebay_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnroleChanging(int value);
    partial void OnroleChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnproxiedEmailChanging(string value);
    partial void OnproxiedEmailChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    partial void OnorganisationChanging(System.Nullable<long> value);
    partial void OnorganisationChanged();
    partial void OntimezoneChanging(string value);
    partial void OntimezoneChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnopenIDChanging(string value);
    partial void OnopenIDChanged();
    partial void OnFBIDChanging(string value);
    partial void OnFBIDChanged();
    partial void OnGFCIDChanging(string value);
    partial void OnGFCIDChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnlastLoginChanging(System.DateTime value);
    partial void OnlastLoginChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnconfirmationCodeChanging(System.Nullable<int> value);
    partial void OnconfirmationCodeChanged();
    partial void OnsettingsChanging(int value);
    partial void OnsettingsChanged();
    partial void OnprofilePhotoChanging(System.Nullable<long> value);
    partial void OnprofilePhotoChanged();
    partial void OnpermissionsChanging(System.Nullable<int> value);
    partial void OnpermissionsChanged();
    partial void OnviewidChanging(string value);
    partial void OnviewidChanged();
    partial void OnexternalProfilePhotoChanging(string value);
    partial void OnexternalProfilePhotoChanged();
    partial void OntwitterIDChanging(string value);
    partial void OntwitterIDChanged();
    partial void OnlastOfflineCheckChanging(System.Nullable<System.DateTime> value);
    partial void OnlastOfflineCheckChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    partial void OnexternalProfileUrlChanging(string value);
    partial void OnexternalProfileUrlChanged();
    partial void OnebayIDChanging(System.Nullable<long> value);
    partial void OnebayIDChanged();
    #endregion
		
		public user()
		{
			this._activities = new EntitySet<activity>(new Action<activity>(this.attach_activities), new Action<activity>(this.detach_activities));
			this._changeHistoryItems = new EntitySet<changeHistoryItem>(new Action<changeHistoryItem>(this.attach_changeHistoryItems), new Action<changeHistoryItem>(this.detach_changeHistoryItems));
			this._favourites = new EntitySet<favourite>(new Action<favourite>(this.attach_favourites), new Action<favourite>(this.detach_favourites));
			this._messages = new EntitySet<message>(new Action<message>(this.attach_messages), new Action<message>(this.detach_messages));
			this._messages1 = new EntitySet<message>(new Action<message>(this.attach_messages1), new Action<message>(this.detach_messages1));
			this._linkRequests = new EntitySet<linkRequest>(new Action<linkRequest>(this.attach_linkRequests), new Action<linkRequest>(this.detach_linkRequests));
			this._linkRequests1 = new EntitySet<linkRequest>(new Action<linkRequest>(this.attach_linkRequests1), new Action<linkRequest>(this.detach_linkRequests1));
			this._product_comments = new EntitySet<product_comment>(new Action<product_comment>(this.attach_product_comments), new Action<product_comment>(this.detach_product_comments));
			this._contactGroupMembers = new EntitySet<contactGroupMember>(new Action<contactGroupMember>(this.attach_contactGroupMembers), new Action<contactGroupMember>(this.detach_contactGroupMembers));
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			this._articles = new EntitySet<article>(new Action<article>(this.attach_articles), new Action<article>(this.detach_articles));
			this._comments = new EntitySet<comment>(new Action<comment>(this.attach_comments), new Action<comment>(this.detach_comments));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._orders1 = new EntitySet<order>(new Action<order>(this.attach_orders1), new Action<order>(this.detach_orders1));
			this._pages = new EntitySet<page>(new Action<page>(this.attach_pages), new Action<page>(this.detach_pages));
			this._image = default(EntityRef<image>);
			this._organisation1 = default(EntityRef<organisation>);
			this._ebay_user = default(EntityRef<ebay_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int NOT NULL")]
		public int role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(300)")]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(320)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proxiedEmail", DbType="VarChar(320)")]
		public string proxiedEmail
		{
			get
			{
				return this._proxiedEmail;
			}
			set
			{
				if ((this._proxiedEmail != value))
				{
					this.OnproxiedEmailChanging(value);
					this.SendPropertyChanging();
					this._proxiedEmail = value;
					this.SendPropertyChanged("proxiedEmail");
					this.OnproxiedEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(8)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(128)")]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(128)")]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="VarChar(128)")]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organisation", DbType="BigInt")]
		public System.Nullable<long> organisation
		{
			get
			{
				return this._organisation;
			}
			set
			{
				if ((this._organisation != value))
				{
					if (this._organisation1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorganisationChanging(value);
					this.SendPropertyChanging();
					this._organisation = value;
					this.SendPropertyChanged("organisation");
					this.OnorganisationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timezone", DbType="VarChar(64)")]
		public string timezone
		{
			get
			{
				return this._timezone;
			}
			set
			{
				if ((this._timezone != value))
				{
					this.OntimezoneChanging(value);
					this.SendPropertyChanging();
					this._timezone = value;
					this.SendPropertyChanged("timezone");
					this.OntimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(50)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_openID", DbType="VarChar(128)")]
		public string openID
		{
			get
			{
				return this._openID;
			}
			set
			{
				if ((this._openID != value))
				{
					this.OnopenIDChanging(value);
					this.SendPropertyChanging();
					this._openID = value;
					this.SendPropertyChanged("openID");
					this.OnopenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBID", DbType="VarChar(128)")]
		public string FBID
		{
			get
			{
				return this._FBID;
			}
			set
			{
				if ((this._FBID != value))
				{
					this.OnFBIDChanging(value);
					this.SendPropertyChanging();
					this._FBID = value;
					this.SendPropertyChanged("FBID");
					this.OnFBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GFCID", DbType="VarChar(128)")]
		public string GFCID
		{
			get
			{
				return this._GFCID;
			}
			set
			{
				if ((this._GFCID != value))
				{
					this.OnGFCIDChanging(value);
					this.SendPropertyChanging();
					this._GFCID = value;
					this.SendPropertyChanged("GFCID");
					this.OnGFCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLogin", DbType="DateTime NOT NULL")]
		public System.DateTime lastLogin
		{
			get
			{
				return this._lastLogin;
			}
			set
			{
				if ((this._lastLogin != value))
				{
					this.OnlastLoginChanging(value);
					this.SendPropertyChanging();
					this._lastLogin = value;
					this.SendPropertyChanged("lastLogin");
					this.OnlastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(128)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(1000)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationCode", DbType="Int")]
		public System.Nullable<int> confirmationCode
		{
			get
			{
				return this._confirmationCode;
			}
			set
			{
				if ((this._confirmationCode != value))
				{
					this.OnconfirmationCodeChanging(value);
					this.SendPropertyChanging();
					this._confirmationCode = value;
					this.SendPropertyChanged("confirmationCode");
					this.OnconfirmationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settings", DbType="Int NOT NULL")]
		public int settings
		{
			get
			{
				return this._settings;
			}
			set
			{
				if ((this._settings != value))
				{
					this.OnsettingsChanging(value);
					this.SendPropertyChanging();
					this._settings = value;
					this.SendPropertyChanged("settings");
					this.OnsettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePhoto", DbType="BigInt")]
		public System.Nullable<long> profilePhoto
		{
			get
			{
				return this._profilePhoto;
			}
			set
			{
				if ((this._profilePhoto != value))
				{
					if (this._image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprofilePhotoChanging(value);
					this.SendPropertyChanging();
					this._profilePhoto = value;
					this.SendPropertyChanged("profilePhoto");
					this.OnprofilePhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissions", DbType="Int")]
		public System.Nullable<int> permissions
		{
			get
			{
				return this._permissions;
			}
			set
			{
				if ((this._permissions != value))
				{
					this.OnpermissionsChanging(value);
					this.SendPropertyChanging();
					this._permissions = value;
					this.SendPropertyChanged("permissions");
					this.OnpermissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_viewid", DbType="VarChar(32)")]
		public string viewid
		{
			get
			{
				return this._viewid;
			}
			set
			{
				if ((this._viewid != value))
				{
					this.OnviewidChanging(value);
					this.SendPropertyChanging();
					this._viewid = value;
					this.SendPropertyChanged("viewid");
					this.OnviewidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externalProfilePhoto", DbType="VarChar(128)")]
		public string externalProfilePhoto
		{
			get
			{
				return this._externalProfilePhoto;
			}
			set
			{
				if ((this._externalProfilePhoto != value))
				{
					this.OnexternalProfilePhotoChanging(value);
					this.SendPropertyChanging();
					this._externalProfilePhoto = value;
					this.SendPropertyChanged("externalProfilePhoto");
					this.OnexternalProfilePhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_twitterID", DbType="VarChar(128)")]
		public string twitterID
		{
			get
			{
				return this._twitterID;
			}
			set
			{
				if ((this._twitterID != value))
				{
					this.OntwitterIDChanging(value);
					this.SendPropertyChanging();
					this._twitterID = value;
					this.SendPropertyChanged("twitterID");
					this.OntwitterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastOfflineCheck", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastOfflineCheck
		{
			get
			{
				return this._lastOfflineCheck;
			}
			set
			{
				if ((this._lastOfflineCheck != value))
				{
					this.OnlastOfflineCheckChanging(value);
					this.SendPropertyChanging();
					this._lastOfflineCheck = value;
					this.SendPropertyChanged("lastOfflineCheck");
					this.OnlastOfflineCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externalProfileUrl", DbType="VarChar(128)")]
		public string externalProfileUrl
		{
			get
			{
				return this._externalProfileUrl;
			}
			set
			{
				if ((this._externalProfileUrl != value))
				{
					this.OnexternalProfileUrlChanging(value);
					this.SendPropertyChanging();
					this._externalProfileUrl = value;
					this.SendPropertyChanged("externalProfileUrl");
					this.OnexternalProfileUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebayID", DbType="BigInt")]
		public System.Nullable<long> ebayID
		{
			get
			{
				return this._ebayID;
			}
			set
			{
				if ((this._ebayID != value))
				{
					if (this._ebay_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnebayIDChanging(value);
					this.SendPropertyChanging();
					this._ebayID = value;
					this.SendPropertyChanged("ebayID");
					this.OnebayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_activity", Storage="_activities", ThisKey="id", OtherKey="owner")]
		public EntitySet<activity> activities
		{
			get
			{
				return this._activities;
			}
			set
			{
				this._activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_changeHistoryItem", Storage="_changeHistoryItems", ThisKey="id", OtherKey="changer")]
		public EntitySet<changeHistoryItem> changeHistoryItems
		{
			get
			{
				return this._changeHistoryItems;
			}
			set
			{
				this._changeHistoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_favourite", Storage="_favourites", ThisKey="id", OtherKey="owner")]
		public EntitySet<favourite> favourites
		{
			get
			{
				return this._favourites;
			}
			set
			{
				this._favourites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_message", Storage="_messages", ThisKey="id", OtherKey="recipient")]
		public EntitySet<message> messages
		{
			get
			{
				return this._messages;
			}
			set
			{
				this._messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_message1", Storage="_messages1", ThisKey="id", OtherKey="sender")]
		public EntitySet<message> messages1
		{
			get
			{
				return this._messages1;
			}
			set
			{
				this._messages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_linkRequest", Storage="_linkRequests", ThisKey="id", OtherKey="friendid")]
		public EntitySet<linkRequest> linkRequests
		{
			get
			{
				return this._linkRequests;
			}
			set
			{
				this._linkRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_linkRequest1", Storage="_linkRequests1", ThisKey="id", OtherKey="userid")]
		public EntitySet<linkRequest> linkRequests1
		{
			get
			{
				return this._linkRequests1;
			}
			set
			{
				this._linkRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_product_comment", Storage="_product_comments", ThisKey="id", OtherKey="commenter")]
		public EntitySet<product_comment> product_comments
		{
			get
			{
				return this._product_comments;
			}
			set
			{
				this._product_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_contactGroupMember", Storage="_contactGroupMembers", ThisKey="id", OtherKey="userid")]
		public EntitySet<contactGroupMember> contactGroupMembers
		{
			get
			{
				return this._contactGroupMembers;
			}
			set
			{
				this._contactGroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_cart", Storage="_carts", ThisKey="id", OtherKey="userid")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_article", Storage="_articles", ThisKey="id", OtherKey="creator")]
		public EntitySet<article> articles
		{
			get
			{
				return this._articles;
			}
			set
			{
				this._articles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_comment", Storage="_comments", ThisKey="id", OtherKey="creator")]
		public EntitySet<comment> comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				this._comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_orders", ThisKey="id", OtherKey="receiverUserid")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order1", Storage="_orders1", ThisKey="id", OtherKey="owner")]
		public EntitySet<order> orders1
		{
			get
			{
				return this._orders1;
			}
			set
			{
				this._orders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_page", Storage="_pages", ThisKey="id", OtherKey="creator")]
		public EntitySet<page> pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				this._pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="image_user", Storage="_image", ThisKey="profilePhoto", OtherKey="id", IsForeignKey=true, DeleteRule="SET NULL")]
		public image image
		{
			get
			{
				return this._image.Entity;
			}
			set
			{
				image previousValue = this._image.Entity;
				if (((previousValue != value) 
							|| (this._image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._image.Entity = null;
						previousValue.users.Remove(this);
					}
					this._image.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._profilePhoto = value.id;
					}
					else
					{
						this._profilePhoto = default(Nullable<long>);
					}
					this.SendPropertyChanged("image");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organisation_user", Storage="_organisation1", ThisKey="organisation", OtherKey="id", IsForeignKey=true)]
		public organisation organisation1
		{
			get
			{
				return this._organisation1.Entity;
			}
			set
			{
				organisation previousValue = this._organisation1.Entity;
				if (((previousValue != value) 
							|| (this._organisation1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organisation1.Entity = null;
						previousValue.users.Remove(this);
					}
					this._organisation1.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._organisation = value.id;
					}
					else
					{
						this._organisation = default(Nullable<long>);
					}
					this.SendPropertyChanged("organisation1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_user_user", Storage="_ebay_user", ThisKey="ebayID", OtherKey="id", IsForeignKey=true)]
		public ebay_user ebay_user
		{
			get
			{
				return this._ebay_user.Entity;
			}
			set
			{
				ebay_user previousValue = this._ebay_user.Entity;
				if (((previousValue != value) 
							|| (this._ebay_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_user.Entity = null;
						previousValue.users.Remove(this);
					}
					this._ebay_user.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._ebayID = value.id;
					}
					else
					{
						this._ebayID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ebay_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_activities(activity entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_activities(activity entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_changeHistoryItems(changeHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_changeHistoryItems(changeHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_favourites(favourite entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_favourites(favourite entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_messages(message entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_messages(message entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_messages1(message entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_messages1(message entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
		
		private void attach_linkRequests(linkRequest entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_linkRequests(linkRequest entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_linkRequests1(linkRequest entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_linkRequests1(linkRequest entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
		
		private void attach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_contactGroupMembers(contactGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_contactGroupMembers(contactGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_articles(article entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_articles(article entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_comments(comment entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_orders1(order entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_orders1(order entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
		
		private void attach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_users")]
	public partial class ebay_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _ebayuserid;
		
		private int _feedback;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnebayuseridChanging(string value);
    partial void OnebayuseridChanged();
    partial void OnfeedbackChanging(int value);
    partial void OnfeedbackChanged();
    #endregion
		
		public ebay_user()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebayuserid", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string ebayuserid
		{
			get
			{
				return this._ebayuserid;
			}
			set
			{
				if ((this._ebayuserid != value))
				{
					this.OnebayuseridChanging(value);
					this.SendPropertyChanging();
					this._ebayuserid = value;
					this.SendPropertyChanged("ebayuserid");
					this.OnebayuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_feedback", DbType="Int NOT NULL")]
		public int feedback
		{
			get
			{
				return this._feedback;
			}
			set
			{
				if ((this._feedback != value))
				{
					this.OnfeedbackChanging(value);
					this.SendPropertyChanging();
					this._feedback = value;
					this.SendPropertyChanged("feedback");
					this.OnfeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_user_user", Storage="_users", ThisKey="id", OtherKey="ebayID")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.ebay_user = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.ebay_user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_orders")]
	public partial class ebay_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _orderid;
		
		private System.DateTime _created;
		
		private string _status;
		
		private long _subdomainid;
		
		private EntitySet<ebay_orderitem> _ebay_orderitems;
		
		private EntitySet<order> _orders;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnorderidChanging(string value);
    partial void OnorderidChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public ebay_order()
		{
			this._ebay_orderitems = new EntitySet<ebay_orderitem>(new Action<ebay_orderitem>(this.attach_ebay_orderitems), new Action<ebay_orderitem>(this.detach_ebay_orderitems));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_order_ebay_orderitem", Storage="_ebay_orderitems", ThisKey="id", OtherKey="orderid")]
		public EntitySet<ebay_orderitem> ebay_orderitems
		{
			get
			{
				return this._ebay_orderitems;
			}
			set
			{
				this._ebay_orderitems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_order_order", Storage="_orders", ThisKey="id", OtherKey="ebayID")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_ebay_order", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.ebay_orders.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.ebay_orders.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ebay_orderitems(ebay_orderitem entity)
		{
			this.SendPropertyChanging();
			entity.ebay_order = this;
		}
		
		private void detach_ebay_orderitems(ebay_orderitem entity)
		{
			this.SendPropertyChanging();
			entity.ebay_order = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.ebay_order = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.ebay_order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_orderitems")]
	public partial class ebay_orderitem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _orderid;
		
		private string _lineid;
		
		private EntityRef<ebay_order> _ebay_order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnorderidChanging(long value);
    partial void OnorderidChanged();
    partial void OnlineidChanging(string value);
    partial void OnlineidChanged();
    #endregion
		
		public ebay_orderitem()
		{
			this._ebay_order = default(EntityRef<ebay_order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="BigInt NOT NULL")]
		public long orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					if (this._ebay_order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lineid
		{
			get
			{
				return this._lineid;
			}
			set
			{
				if ((this._lineid != value))
				{
					this.OnlineidChanging(value);
					this.SendPropertyChanging();
					this._lineid = value;
					this.SendPropertyChanged("lineid");
					this.OnlineidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_order_ebay_orderitem", Storage="_ebay_order", ThisKey="orderid", OtherKey="id", IsForeignKey=true)]
		public ebay_order ebay_order
		{
			get
			{
				return this._ebay_order.Entity;
			}
			set
			{
				ebay_order previousValue = this._ebay_order.Entity;
				if (((previousValue != value) 
							|| (this._ebay_order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_order.Entity = null;
						previousValue.ebay_orderitems.Remove(this);
					}
					this._ebay_order.Entity = value;
					if ((value != null))
					{
						value.ebay_orderitems.Add(this);
						this._orderid = value.id;
					}
					else
					{
						this._orderid = default(long);
					}
					this.SendPropertyChanged("ebay_order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _owner;
		
		private string _type;
		
		private string _status;
		
		private long _orderNumber;
		
		private System.DateTime _orderDate;
		
		private System.Nullable<System.DateTime> _actualReceivedDate;
		
		private System.Nullable<long> _inventoryLocation;
		
		private string _inventoryLocation_del;
		
		private System.Nullable<long> _receiverUserid;
		
		private string _receiverFullName;
		
		private string _receiverAddress;
		
		private int _currency;
		
		private string _terms;
		
		private System.DateTime _created;
		
		private decimal _total;
		
		private decimal _totalPaid;
		
		private System.Nullable<decimal> _taxAmount;
		
		private System.Nullable<decimal> _shippingCost;
		
		private string _shippingMethod;
		
		private string _shipwireShippingid;
		
		private System.Nullable<decimal> _discountPercentage;
		
		private System.Nullable<decimal> _discountValue;
		
		private string _discountCouponCode;
		
		private string _shippingEmail;
		
		private string _billingEmail;
		
		private System.Nullable<long> _shippingAddressID;
		
		private System.Nullable<long> _billingAddressID;
		
		private System.Nullable<long> _ebayID;
		
		private string _viewid;
		
		private System.Nullable<int> _flags;
		
		private System.Nullable<System.DateTime> _lastUpdate;
		
		private EntityRef<shipwireTransaction> _shipwireTransaction;
		
		private EntityRef<transaction> _transactions;
		
		private EntitySet<transaction> _transactions1;
		
		private EntitySet<orderItem> _orderItems;
		
		private EntitySet<cart> _carts;
		
		private EntitySet<payment> _payments;
		
		private EntityRef<address> _address;
		
		private EntityRef<address> _address1;
		
		private EntityRef<ebay_order> _ebay_order;
		
		private EntityRef<inventoryLocation> _inventoryLocation1;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnownerChanging(long value);
    partial void OnownerChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnorderNumberChanging(long value);
    partial void OnorderNumberChanged();
    partial void OnorderDateChanging(System.DateTime value);
    partial void OnorderDateChanged();
    partial void OnactualReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnactualReceivedDateChanged();
    partial void OninventoryLocationChanging(System.Nullable<long> value);
    partial void OninventoryLocationChanged();
    partial void OninventoryLocation_delChanging(string value);
    partial void OninventoryLocation_delChanged();
    partial void OnreceiverUseridChanging(System.Nullable<long> value);
    partial void OnreceiverUseridChanged();
    partial void OnreceiverFullNameChanging(string value);
    partial void OnreceiverFullNameChanged();
    partial void OnreceiverAddressChanging(string value);
    partial void OnreceiverAddressChanged();
    partial void OncurrencyChanging(int value);
    partial void OncurrencyChanged();
    partial void OntermsChanging(string value);
    partial void OntermsChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OntotalChanging(decimal value);
    partial void OntotalChanged();
    partial void OntotalPaidChanging(decimal value);
    partial void OntotalPaidChanged();
    partial void OntaxAmountChanging(System.Nullable<decimal> value);
    partial void OntaxAmountChanged();
    partial void OnshippingCostChanging(System.Nullable<decimal> value);
    partial void OnshippingCostChanged();
    partial void OnshippingMethodChanging(string value);
    partial void OnshippingMethodChanged();
    partial void OnshipwireShippingidChanging(string value);
    partial void OnshipwireShippingidChanged();
    partial void OndiscountPercentageChanging(System.Nullable<decimal> value);
    partial void OndiscountPercentageChanged();
    partial void OndiscountValueChanging(System.Nullable<decimal> value);
    partial void OndiscountValueChanged();
    partial void OndiscountCouponCodeChanging(string value);
    partial void OndiscountCouponCodeChanged();
    partial void OnshippingEmailChanging(string value);
    partial void OnshippingEmailChanged();
    partial void OnbillingEmailChanging(string value);
    partial void OnbillingEmailChanged();
    partial void OnshippingAddressIDChanging(System.Nullable<long> value);
    partial void OnshippingAddressIDChanged();
    partial void OnbillingAddressIDChanging(System.Nullable<long> value);
    partial void OnbillingAddressIDChanged();
    partial void OnebayIDChanging(System.Nullable<long> value);
    partial void OnebayIDChanged();
    partial void OnviewidChanging(string value);
    partial void OnviewidChanged();
    partial void OnflagsChanging(System.Nullable<int> value);
    partial void OnflagsChanged();
    partial void OnlastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdateChanged();
    #endregion
		
		public order()
		{
			this._shipwireTransaction = default(EntityRef<shipwireTransaction>);
			this._transactions = default(EntityRef<transaction>);
			this._transactions1 = new EntitySet<transaction>(new Action<transaction>(this.attach_transactions1), new Action<transaction>(this.detach_transactions1));
			this._orderItems = new EntitySet<orderItem>(new Action<orderItem>(this.attach_orderItems), new Action<orderItem>(this.detach_orderItems));
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			this._payments = new EntitySet<payment>(new Action<payment>(this.attach_payments), new Action<payment>(this.detach_payments));
			this._address = default(EntityRef<address>);
			this._address1 = default(EntityRef<address>);
			this._ebay_order = default(EntityRef<ebay_order>);
			this._inventoryLocation1 = default(EntityRef<inventoryLocation>);
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_owner", DbType="BigInt NOT NULL")]
		public long owner
		{
			get
			{
				return this._owner;
			}
			set
			{
				if ((this._owner != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnownerChanging(value);
					this.SendPropertyChanging();
					this._owner = value;
					this.SendPropertyChanged("owner");
					this.OnownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderNumber", DbType="BigInt NOT NULL")]
		public long orderNumber
		{
			get
			{
				return this._orderNumber;
			}
			set
			{
				if ((this._orderNumber != value))
				{
					this.OnorderNumberChanging(value);
					this.SendPropertyChanging();
					this._orderNumber = value;
					this.SendPropertyChanged("orderNumber");
					this.OnorderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderDate", DbType="DateTime NOT NULL")]
		public System.DateTime orderDate
		{
			get
			{
				return this._orderDate;
			}
			set
			{
				if ((this._orderDate != value))
				{
					this.OnorderDateChanging(value);
					this.SendPropertyChanging();
					this._orderDate = value;
					this.SendPropertyChanged("orderDate");
					this.OnorderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actualReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> actualReceivedDate
		{
			get
			{
				return this._actualReceivedDate;
			}
			set
			{
				if ((this._actualReceivedDate != value))
				{
					this.OnactualReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._actualReceivedDate = value;
					this.SendPropertyChanged("actualReceivedDate");
					this.OnactualReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoryLocation", DbType="BigInt")]
		public System.Nullable<long> inventoryLocation
		{
			get
			{
				return this._inventoryLocation;
			}
			set
			{
				if ((this._inventoryLocation != value))
				{
					if (this._inventoryLocation1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninventoryLocationChanging(value);
					this.SendPropertyChanging();
					this._inventoryLocation = value;
					this.SendPropertyChanged("inventoryLocation");
					this.OninventoryLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoryLocation_del", DbType="NVarChar(128)")]
		public string inventoryLocation_del
		{
			get
			{
				return this._inventoryLocation_del;
			}
			set
			{
				if ((this._inventoryLocation_del != value))
				{
					this.OninventoryLocation_delChanging(value);
					this.SendPropertyChanging();
					this._inventoryLocation_del = value;
					this.SendPropertyChanged("inventoryLocation_del");
					this.OninventoryLocation_delChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverUserid", DbType="BigInt")]
		public System.Nullable<long> receiverUserid
		{
			get
			{
				return this._receiverUserid;
			}
			set
			{
				if ((this._receiverUserid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreceiverUseridChanging(value);
					this.SendPropertyChanging();
					this._receiverUserid = value;
					this.SendPropertyChanged("receiverUserid");
					this.OnreceiverUseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverFullName", DbType="NVarChar(300)")]
		public string receiverFullName
		{
			get
			{
				return this._receiverFullName;
			}
			set
			{
				if ((this._receiverFullName != value))
				{
					this.OnreceiverFullNameChanging(value);
					this.SendPropertyChanging();
					this._receiverFullName = value;
					this.SendPropertyChanged("receiverFullName");
					this.OnreceiverFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiverAddress", DbType="NVarChar(1000)")]
		public string receiverAddress
		{
			get
			{
				return this._receiverAddress;
			}
			set
			{
				if ((this._receiverAddress != value))
				{
					this.OnreceiverAddressChanging(value);
					this.SendPropertyChanging();
					this._receiverAddress = value;
					this.SendPropertyChanged("receiverAddress");
					this.OnreceiverAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="Int NOT NULL")]
		public int currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terms", DbType="NVarChar(1000)")]
		public string terms
		{
			get
			{
				return this._terms;
			}
			set
			{
				if ((this._terms != value))
				{
					this.OntermsChanging(value);
					this.SendPropertyChanging();
					this._terms = value;
					this.SendPropertyChanged("terms");
					this.OntermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Money NOT NULL")]
		public decimal total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPaid", DbType="Money NOT NULL")]
		public decimal totalPaid
		{
			get
			{
				return this._totalPaid;
			}
			set
			{
				if ((this._totalPaid != value))
				{
					this.OntotalPaidChanging(value);
					this.SendPropertyChanging();
					this._totalPaid = value;
					this.SendPropertyChanged("totalPaid");
					this.OntotalPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxAmount", DbType="Money")]
		public System.Nullable<decimal> taxAmount
		{
			get
			{
				return this._taxAmount;
			}
			set
			{
				if ((this._taxAmount != value))
				{
					this.OntaxAmountChanging(value);
					this.SendPropertyChanging();
					this._taxAmount = value;
					this.SendPropertyChanged("taxAmount");
					this.OntaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingCost", DbType="Money")]
		public System.Nullable<decimal> shippingCost
		{
			get
			{
				return this._shippingCost;
			}
			set
			{
				if ((this._shippingCost != value))
				{
					this.OnshippingCostChanging(value);
					this.SendPropertyChanging();
					this._shippingCost = value;
					this.SendPropertyChanged("shippingCost");
					this.OnshippingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingMethod", DbType="VarChar(200)")]
		public string shippingMethod
		{
			get
			{
				return this._shippingMethod;
			}
			set
			{
				if ((this._shippingMethod != value))
				{
					this.OnshippingMethodChanging(value);
					this.SendPropertyChanging();
					this._shippingMethod = value;
					this.SendPropertyChanged("shippingMethod");
					this.OnshippingMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipwireShippingid", DbType="VarChar(5)")]
		public string shipwireShippingid
		{
			get
			{
				return this._shipwireShippingid;
			}
			set
			{
				if ((this._shipwireShippingid != value))
				{
					this.OnshipwireShippingidChanging(value);
					this.SendPropertyChanging();
					this._shipwireShippingid = value;
					this.SendPropertyChanged("shipwireShippingid");
					this.OnshipwireShippingidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountPercentage", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> discountPercentage
		{
			get
			{
				return this._discountPercentage;
			}
			set
			{
				if ((this._discountPercentage != value))
				{
					this.OndiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._discountPercentage = value;
					this.SendPropertyChanged("discountPercentage");
					this.OndiscountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountValue", DbType="Money")]
		public System.Nullable<decimal> discountValue
		{
			get
			{
				return this._discountValue;
			}
			set
			{
				if ((this._discountValue != value))
				{
					this.OndiscountValueChanging(value);
					this.SendPropertyChanging();
					this._discountValue = value;
					this.SendPropertyChanged("discountValue");
					this.OndiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountCouponCode", DbType="NVarChar(50)")]
		public string discountCouponCode
		{
			get
			{
				return this._discountCouponCode;
			}
			set
			{
				if ((this._discountCouponCode != value))
				{
					this.OndiscountCouponCodeChanging(value);
					this.SendPropertyChanging();
					this._discountCouponCode = value;
					this.SendPropertyChanged("discountCouponCode");
					this.OndiscountCouponCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingEmail", DbType="NVarChar(255)")]
		public string shippingEmail
		{
			get
			{
				return this._shippingEmail;
			}
			set
			{
				if ((this._shippingEmail != value))
				{
					this.OnshippingEmailChanging(value);
					this.SendPropertyChanging();
					this._shippingEmail = value;
					this.SendPropertyChanged("shippingEmail");
					this.OnshippingEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingEmail", DbType="NVarChar(255)")]
		public string billingEmail
		{
			get
			{
				return this._billingEmail;
			}
			set
			{
				if ((this._billingEmail != value))
				{
					this.OnbillingEmailChanging(value);
					this.SendPropertyChanging();
					this._billingEmail = value;
					this.SendPropertyChanged("billingEmail");
					this.OnbillingEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingAddressID", DbType="BigInt")]
		public System.Nullable<long> shippingAddressID
		{
			get
			{
				return this._shippingAddressID;
			}
			set
			{
				if ((this._shippingAddressID != value))
				{
					if (this._address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshippingAddressIDChanging(value);
					this.SendPropertyChanging();
					this._shippingAddressID = value;
					this.SendPropertyChanged("shippingAddressID");
					this.OnshippingAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingAddressID", DbType="BigInt")]
		public System.Nullable<long> billingAddressID
		{
			get
			{
				return this._billingAddressID;
			}
			set
			{
				if ((this._billingAddressID != value))
				{
					if (this._address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbillingAddressIDChanging(value);
					this.SendPropertyChanging();
					this._billingAddressID = value;
					this.SendPropertyChanged("billingAddressID");
					this.OnbillingAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebayID", DbType="BigInt")]
		public System.Nullable<long> ebayID
		{
			get
			{
				return this._ebayID;
			}
			set
			{
				if ((this._ebayID != value))
				{
					if (this._ebay_order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnebayIDChanging(value);
					this.SendPropertyChanging();
					this._ebayID = value;
					this.SendPropertyChanged("ebayID");
					this.OnebayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_viewid", DbType="VarChar(32)")]
		public string viewid
		{
			get
			{
				return this._viewid;
			}
			set
			{
				if ((this._viewid != value))
				{
					this.OnviewidChanging(value);
					this.SendPropertyChanging();
					this._viewid = value;
					this.SendPropertyChanged("viewid");
					this.OnviewidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="Int")]
		public System.Nullable<int> flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdate
		{
			get
			{
				return this._lastUpdate;
			}
			set
			{
				if ((this._lastUpdate != value))
				{
					this.OnlastUpdateChanging(value);
					this.SendPropertyChanging();
					this._lastUpdate = value;
					this.SendPropertyChanged("lastUpdate");
					this.OnlastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_shipwireTransaction", Storage="_shipwireTransaction", ThisKey="id", OtherKey="orderid", IsUnique=true, IsForeignKey=false)]
		public shipwireTransaction shipwireTransaction
		{
			get
			{
				return this._shipwireTransaction.Entity;
			}
			set
			{
				shipwireTransaction previousValue = this._shipwireTransaction.Entity;
				if (((previousValue != value) 
							|| (this._shipwireTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._shipwireTransaction.Entity = null;
						previousValue.order = null;
					}
					this._shipwireTransaction.Entity = value;
					if ((value != null))
					{
						value.order = this;
					}
					this.SendPropertyChanged("shipwireTransaction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_transaction", Storage="_transactions", ThisKey="id", OtherKey="primaryOrderID", IsUnique=true, IsForeignKey=false)]
		public transaction transactions
		{
			get
			{
				return this._transactions.Entity;
			}
			set
			{
				transaction previousValue = this._transactions.Entity;
				if (((previousValue != value) 
							|| (this._transactions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._transactions.Entity = null;
						previousValue.order = null;
					}
					this._transactions.Entity = value;
					if ((value != null))
					{
						value.order = this;
					}
					this.SendPropertyChanged("transactions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_transaction1", Storage="_transactions1", ThisKey="id", OtherKey="secondaryOrderID")]
		public EntitySet<transaction> transactions1
		{
			get
			{
				return this._transactions1;
			}
			set
			{
				this._transactions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_orderItem", Storage="_orderItems", ThisKey="id", OtherKey="orderid")]
		public EntitySet<orderItem> orderItems
		{
			get
			{
				return this._orderItems;
			}
			set
			{
				this._orderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_cart", Storage="_carts", ThisKey="id", OtherKey="orderid")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_payment", Storage="_payments", ThisKey="id", OtherKey="orderid")]
		public EntitySet<payment> payments
		{
			get
			{
				return this._payments;
			}
			set
			{
				this._payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_order", Storage="_address", ThisKey="shippingAddressID", OtherKey="id", IsForeignKey=true)]
		public address address
		{
			get
			{
				return this._address.Entity;
			}
			set
			{
				address previousValue = this._address.Entity;
				if (((previousValue != value) 
							|| (this._address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._address.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._shippingAddressID = value.id;
					}
					else
					{
						this._shippingAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_order1", Storage="_address1", ThisKey="billingAddressID", OtherKey="id", IsForeignKey=true)]
		public address address1
		{
			get
			{
				return this._address1.Entity;
			}
			set
			{
				address previousValue = this._address1.Entity;
				if (((previousValue != value) 
							|| (this._address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address1.Entity = null;
						previousValue.orders1.Remove(this);
					}
					this._address1.Entity = value;
					if ((value != null))
					{
						value.orders1.Add(this);
						this._billingAddressID = value.id;
					}
					else
					{
						this._billingAddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_order_order", Storage="_ebay_order", ThisKey="ebayID", OtherKey="id", IsForeignKey=true)]
		public ebay_order ebay_order
		{
			get
			{
				return this._ebay_order.Entity;
			}
			set
			{
				ebay_order previousValue = this._ebay_order.Entity;
				if (((previousValue != value) 
							|| (this._ebay_order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_order.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._ebay_order.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._ebayID = value.id;
					}
					else
					{
						this._ebayID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ebay_order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="inventoryLocation_order", Storage="_inventoryLocation1", ThisKey="inventoryLocation", OtherKey="id", IsForeignKey=true)]
		public inventoryLocation inventoryLocation1
		{
			get
			{
				return this._inventoryLocation1.Entity;
			}
			set
			{
				inventoryLocation previousValue = this._inventoryLocation1.Entity;
				if (((previousValue != value) 
							|| (this._inventoryLocation1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._inventoryLocation1.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._inventoryLocation1.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._inventoryLocation = value.id;
					}
					else
					{
						this._inventoryLocation = default(Nullable<long>);
					}
					this.SendPropertyChanged("inventoryLocation1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_user", ThisKey="receiverUserid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._receiverUserid = value.id;
					}
					else
					{
						this._receiverUserid = default(Nullable<long>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order1", Storage="_user1", ThisKey="owner", OtherKey="id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.orders1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.orders1.Add(this);
						this._owner = value.id;
					}
					else
					{
						this._owner = default(long);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_transactions1(transaction entity)
		{
			this.SendPropertyChanging();
			entity.order1 = this;
		}
		
		private void detach_transactions1(transaction entity)
		{
			this.SendPropertyChanging();
			entity.order1 = null;
		}
		
		private void attach_orderItems(orderItem entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_orderItems(orderItem entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
		
		private void attach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ebay_products")]
	public partial class ebay_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _listingType;
		
		private string _ebayid;
		
		private bool _isActive;
		
		private string _siteid;
		
		private int _categoryid;
		
		private System.Nullable<int> _categoryid_secondary;
		
		private System.Nullable<int> _condition;
		
		private string _returnPolicy;
		
		private string _returnWithin;
		
		private string _refundPolicy;
		
		private string _duration;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private bool _includeAddress;
		
		private string _listingFees;
		
		private System.Nullable<long> _profileid;
		
		private int _quantity;
		
		private int _dispatchTime;
		
		private bool _autorelist;
		
		private System.Nullable<decimal> _startPrice;
		
		private System.Nullable<decimal> _buynowPrice;
		
		private System.Nullable<decimal> _reservePrice;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnlistingTypeChanging(string value);
    partial void OnlistingTypeChanged();
    partial void OnebayidChanging(string value);
    partial void OnebayidChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnsiteidChanging(string value);
    partial void OnsiteidChanged();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void Oncategoryid_secondaryChanging(System.Nullable<int> value);
    partial void Oncategoryid_secondaryChanged();
    partial void OnconditionChanging(System.Nullable<int> value);
    partial void OnconditionChanged();
    partial void OnreturnPolicyChanging(string value);
    partial void OnreturnPolicyChanged();
    partial void OnreturnWithinChanging(string value);
    partial void OnreturnWithinChanged();
    partial void OnrefundPolicyChanging(string value);
    partial void OnrefundPolicyChanged();
    partial void OndurationChanging(string value);
    partial void OndurationChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnendTimeChanged();
    partial void OnincludeAddressChanging(bool value);
    partial void OnincludeAddressChanged();
    partial void OnlistingFeesChanging(string value);
    partial void OnlistingFeesChanged();
    partial void OnprofileidChanging(System.Nullable<long> value);
    partial void OnprofileidChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OndispatchTimeChanging(int value);
    partial void OndispatchTimeChanged();
    partial void OnautorelistChanging(bool value);
    partial void OnautorelistChanged();
    partial void OnstartPriceChanging(System.Nullable<decimal> value);
    partial void OnstartPriceChanged();
    partial void OnbuynowPriceChanging(System.Nullable<decimal> value);
    partial void OnbuynowPriceChanged();
    partial void OnreservePriceChanging(System.Nullable<decimal> value);
    partial void OnreservePriceChanged();
    #endregion
		
		public ebay_product()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_listingType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string listingType
		{
			get
			{
				return this._listingType;
			}
			set
			{
				if ((this._listingType != value))
				{
					this.OnlistingTypeChanging(value);
					this.SendPropertyChanging();
					this._listingType = value;
					this.SendPropertyChanged("listingType");
					this.OnlistingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebayid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ebayid
		{
			get
			{
				return this._ebayid;
			}
			set
			{
				if ((this._ebayid != value))
				{
					this.OnebayidChanging(value);
					this.SendPropertyChanging();
					this._ebayid = value;
					this.SendPropertyChanged("ebayid");
					this.OnebayidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siteid", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string siteid
		{
			get
			{
				return this._siteid;
			}
			set
			{
				if ((this._siteid != value))
				{
					this.OnsiteidChanging(value);
					this.SendPropertyChanging();
					this._siteid = value;
					this.SendPropertyChanged("siteid");
					this.OnsiteidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", DbType="Int NOT NULL")]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid_secondary", DbType="Int")]
		public System.Nullable<int> categoryid_secondary
		{
			get
			{
				return this._categoryid_secondary;
			}
			set
			{
				if ((this._categoryid_secondary != value))
				{
					this.Oncategoryid_secondaryChanging(value);
					this.SendPropertyChanging();
					this._categoryid_secondary = value;
					this.SendPropertyChanged("categoryid_secondary");
					this.Oncategoryid_secondaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_condition", DbType="Int")]
		public System.Nullable<int> condition
		{
			get
			{
				return this._condition;
			}
			set
			{
				if ((this._condition != value))
				{
					this.OnconditionChanging(value);
					this.SendPropertyChanging();
					this._condition = value;
					this.SendPropertyChanged("condition");
					this.OnconditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnPolicy", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string returnPolicy
		{
			get
			{
				return this._returnPolicy;
			}
			set
			{
				if ((this._returnPolicy != value))
				{
					this.OnreturnPolicyChanging(value);
					this.SendPropertyChanging();
					this._returnPolicy = value;
					this.SendPropertyChanged("returnPolicy");
					this.OnreturnPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnWithin", DbType="VarChar(10)")]
		public string returnWithin
		{
			get
			{
				return this._returnWithin;
			}
			set
			{
				if ((this._returnWithin != value))
				{
					this.OnreturnWithinChanging(value);
					this.SendPropertyChanging();
					this._returnWithin = value;
					this.SendPropertyChanged("returnWithin");
					this.OnreturnWithinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_refundPolicy", DbType="VarChar(20)")]
		public string refundPolicy
		{
			get
			{
				return this._refundPolicy;
			}
			set
			{
				if ((this._refundPolicy != value))
				{
					this.OnrefundPolicyChanging(value);
					this.SendPropertyChanging();
					this._refundPolicy = value;
					this.SendPropertyChanged("refundPolicy");
					this.OnrefundPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_includeAddress", DbType="Bit NOT NULL")]
		public bool includeAddress
		{
			get
			{
				return this._includeAddress;
			}
			set
			{
				if ((this._includeAddress != value))
				{
					this.OnincludeAddressChanging(value);
					this.SendPropertyChanging();
					this._includeAddress = value;
					this.SendPropertyChanged("includeAddress");
					this.OnincludeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_listingFees", DbType="VarChar(10)")]
		public string listingFees
		{
			get
			{
				return this._listingFees;
			}
			set
			{
				if ((this._listingFees != value))
				{
					this.OnlistingFeesChanging(value);
					this.SendPropertyChanging();
					this._listingFees = value;
					this.SendPropertyChanged("listingFees");
					this.OnlistingFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileid", DbType="BigInt")]
		public System.Nullable<long> profileid
		{
			get
			{
				return this._profileid;
			}
			set
			{
				if ((this._profileid != value))
				{
					this.OnprofileidChanging(value);
					this.SendPropertyChanging();
					this._profileid = value;
					this.SendPropertyChanged("profileid");
					this.OnprofileidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dispatchTime", DbType="Int NOT NULL")]
		public int dispatchTime
		{
			get
			{
				return this._dispatchTime;
			}
			set
			{
				if ((this._dispatchTime != value))
				{
					this.OndispatchTimeChanging(value);
					this.SendPropertyChanging();
					this._dispatchTime = value;
					this.SendPropertyChanged("dispatchTime");
					this.OndispatchTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autorelist", DbType="Bit NOT NULL")]
		public bool autorelist
		{
			get
			{
				return this._autorelist;
			}
			set
			{
				if ((this._autorelist != value))
				{
					this.OnautorelistChanging(value);
					this.SendPropertyChanging();
					this._autorelist = value;
					this.SendPropertyChanged("autorelist");
					this.OnautorelistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startPrice", DbType="Money")]
		public System.Nullable<decimal> startPrice
		{
			get
			{
				return this._startPrice;
			}
			set
			{
				if ((this._startPrice != value))
				{
					this.OnstartPriceChanging(value);
					this.SendPropertyChanging();
					this._startPrice = value;
					this.SendPropertyChanged("startPrice");
					this.OnstartPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buynowPrice", DbType="Money")]
		public System.Nullable<decimal> buynowPrice
		{
			get
			{
				return this._buynowPrice;
			}
			set
			{
				if ((this._buynowPrice != value))
				{
					this.OnbuynowPriceChanging(value);
					this.SendPropertyChanging();
					this._buynowPrice = value;
					this.SendPropertyChanged("buynowPrice");
					this.OnbuynowPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservePrice", DbType="Money")]
		public System.Nullable<decimal> reservePrice
		{
			get
			{
				return this._reservePrice;
			}
			set
			{
				if ((this._reservePrice != value))
				{
					this.OnreservePriceChanging(value);
					this.SendPropertyChanging();
					this._reservePrice = value;
					this.SendPropertyChanged("reservePrice");
					this.OnreservePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_product_product", Storage="_products", ThisKey="id", OtherKey="ebayID")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.ebay_product = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.ebay_product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.article_tags")]
	public partial class article_tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _handle;
		
		private long _subdomainid;
		
		private long _articleid;
		
		private EntityRef<article> _article;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnhandleChanging(string value);
    partial void OnhandleChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnarticleidChanging(long value);
    partial void OnarticleidChanged();
    #endregion
		
		public article_tag()
		{
			this._article = default(EntityRef<article>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handle", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string handle
		{
			get
			{
				return this._handle;
			}
			set
			{
				if ((this._handle != value))
				{
					this.OnhandleChanging(value);
					this.SendPropertyChanging();
					this._handle = value;
					this.SendPropertyChanged("handle");
					this.OnhandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_articleid", DbType="BigInt NOT NULL")]
		public long articleid
		{
			get
			{
				return this._articleid;
			}
			set
			{
				if ((this._articleid != value))
				{
					if (this._article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnarticleidChanging(value);
					this.SendPropertyChanging();
					this._articleid = value;
					this.SendPropertyChanged("articleid");
					this.OnarticleidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="article_article_tag", Storage="_article", ThisKey="articleid", OtherKey="id", IsForeignKey=true)]
		public article article
		{
			get
			{
				return this._article.Entity;
			}
			set
			{
				article previousValue = this._article.Entity;
				if (((previousValue != value) 
							|| (this._article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._article.Entity = null;
						previousValue.article_tags.Remove(this);
					}
					this._article.Entity = value;
					if ((value != null))
					{
						value.article_tags.Add(this);
						this._articleid = value.id;
					}
					else
					{
						this._articleid = default(long);
					}
					this.SendPropertyChanged("article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_article_tag", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.article_tags.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.article_tags.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tags")]
	public partial class tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _handle;
		
		private long _productid;
		
		private long _subdomainid;
		
		private EntityRef<product> _product;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnhandleChanging(string value);
    partial void OnhandleChanged();
    partial void OnproductidChanging(long value);
    partial void OnproductidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    #endregion
		
		public tag()
		{
			this._product = default(EntityRef<product>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handle", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string handle
		{
			get
			{
				return this._handle;
			}
			set
			{
				if ((this._handle != value))
				{
					this.OnhandleChanging(value);
					this.SendPropertyChanging();
					this._handle = value;
					this.SendPropertyChanged("handle");
					this.OnhandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt NOT NULL")]
		public long productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_tag", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.tags1.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.tags1.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(long);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_tag", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.tags.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.tags.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trademe_listingduration")]
	public partial class trademe_listingduration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _categoryid;
		
		private byte _duration;
		
		private EntityRef<trademe_category> _trademe_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncategoryidChanging(string value);
    partial void OncategoryidChanged();
    partial void OndurationChanging(byte value);
    partial void OndurationChanged();
    #endregion
		
		public trademe_listingduration()
		{
			this._trademe_category = default(EntityRef<trademe_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					if (this._trademe_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="TinyInt NOT NULL")]
		public byte duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_category_trademe_listingduration", Storage="_trademe_category", ThisKey="categoryid", OtherKey="id", IsForeignKey=true)]
		public trademe_category trademe_category
		{
			get
			{
				return this._trademe_category.Entity;
			}
			set
			{
				trademe_category previousValue = this._trademe_category.Entity;
				if (((previousValue != value) 
							|| (this._trademe_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trademe_category.Entity = null;
						previousValue.trademe_listingdurations.Remove(this);
					}
					this._trademe_category.Entity = value;
					if ((value != null))
					{
						value.trademe_listingdurations.Add(this);
						this._categoryid = value.id;
					}
					else
					{
						this._categoryid = default(string);
					}
					this.SendPropertyChanged("trademe_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_images")]
	public partial class product_image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _productid;
		
		private string _url;
		
		private long _subdomainid;
		
		private System.Nullable<int> _trademephotoid;
		
		private EntitySet<product> _products;
		
		private EntityRef<product> _product;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnproductidChanging(System.Nullable<long> value);
    partial void OnproductidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OntrademephotoidChanging(System.Nullable<int> value);
    partial void OntrademephotoidChanged();
    #endregion
		
		public product_image()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._product = default(EntityRef<product>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="BigInt")]
		public System.Nullable<long> productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trademephotoid", DbType="Int")]
		public System.Nullable<int> trademephotoid
		{
			get
			{
				return this._trademephotoid;
			}
			set
			{
				if ((this._trademephotoid != value))
				{
					this.OntrademephotoidChanging(value);
					this.SendPropertyChanging();
					this._trademephotoid = value;
					this.SendPropertyChanged("trademephotoid");
					this.OntrademephotoidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_image_product", Storage="_products", ThisKey="id", OtherKey="thumb")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_image", Storage="_product", ThisKey="productid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.product_images.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.product_images.Add(this);
						this._productid = value.id;
					}
					else
					{
						this._productid = default(Nullable<long>);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product_image", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.product_images.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.product_images.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.product_image = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.product_image = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _category;
		
		private long _subdomainid;
		
		private string _title;
		
		private string _details;
		
		private System.Nullable<long> _thumb;
		
		private System.Nullable<decimal> _sellingPrice;
		
		private System.Nullable<long> _stockUnitId;
		
		private string _otherNotes;
		
		private System.Nullable<decimal> _costPrice;
		
		private System.DateTime _created;
		
		private System.Nullable<System.DateTime> _updated;
		
		private int _flags;
		
		private System.Nullable<int> _hits;
		
		private string _gbaseID;
		
		private string _dimensions;
		
		private string _shipwireDetails;
		
		private System.Nullable<decimal> _tax;
		
		private System.Nullable<decimal> _specialPrice;
		
		private System.Nullable<long> _shippingProfileID;
		
		private System.Nullable<long> _gbase;
		
		private string _tags;
		
		private bool _trackInventory;
		
		private System.Nullable<long> _ebayID;
		
		private System.Nullable<long> _trademeID;
		
		private EntitySet<favourite> _favourites;
		
		private EntitySet<googleBlogsProductPost> _googleBlogsProductPosts;
		
		private EntitySet<product_comment> _product_comments;
		
		private EntitySet<facebook_import> _facebook_imports;
		
		private EntityRef<wordpressPost> _wordpressPosts;
		
		private EntityRef<tumblrPost> _tumblrPosts;
		
		private EntitySet<contactGroupPricing> _contactGroupPricings;
		
		private EntitySet<productCollectionMember> _productCollectionMembers;
		
		private EntitySet<product_variant> _product_variants;
		
		private EntityRef<products_digital> _products_digitals;
		
		private EntitySet<tag> _tags1;
		
		private EntitySet<product_image> _product_images;
		
		private EntityRef<ebay_product> _ebay_product;
		
		private EntityRef<gbase_product> _gbase_product;
		
		private EntityRef<product_image> _product_image;
		
		private EntityRef<productCategory> _productCategory;
		
		private EntityRef<shippingProfile> _shippingProfile;
		
		private EntityRef<stockUnit> _stockUnit;
		
		private EntityRef<trademe_product> _trademe_product;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncategoryChanging(System.Nullable<long> value);
    partial void OncategoryChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnthumbChanging(System.Nullable<long> value);
    partial void OnthumbChanged();
    partial void OnsellingPriceChanging(System.Nullable<decimal> value);
    partial void OnsellingPriceChanged();
    partial void OnstockUnitIdChanging(System.Nullable<long> value);
    partial void OnstockUnitIdChanged();
    partial void OnotherNotesChanging(string value);
    partial void OnotherNotesChanged();
    partial void OncostPriceChanging(System.Nullable<decimal> value);
    partial void OncostPriceChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnupdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedChanged();
    partial void OnflagsChanging(int value);
    partial void OnflagsChanged();
    partial void OnhitsChanging(System.Nullable<int> value);
    partial void OnhitsChanged();
    partial void OngbaseIDChanging(string value);
    partial void OngbaseIDChanged();
    partial void OndimensionsChanging(string value);
    partial void OndimensionsChanged();
    partial void OnshipwireDetailsChanging(string value);
    partial void OnshipwireDetailsChanged();
    partial void OntaxChanging(System.Nullable<decimal> value);
    partial void OntaxChanged();
    partial void OnspecialPriceChanging(System.Nullable<decimal> value);
    partial void OnspecialPriceChanged();
    partial void OnshippingProfileIDChanging(System.Nullable<long> value);
    partial void OnshippingProfileIDChanged();
    partial void OngbaseChanging(System.Nullable<long> value);
    partial void OngbaseChanged();
    partial void OntagsChanging(string value);
    partial void OntagsChanged();
    partial void OntrackInventoryChanging(bool value);
    partial void OntrackInventoryChanged();
    partial void OnebayIDChanging(System.Nullable<long> value);
    partial void OnebayIDChanged();
    partial void OntrademeIDChanging(System.Nullable<long> value);
    partial void OntrademeIDChanged();
    #endregion
		
		public product()
		{
			this._favourites = new EntitySet<favourite>(new Action<favourite>(this.attach_favourites), new Action<favourite>(this.detach_favourites));
			this._googleBlogsProductPosts = new EntitySet<googleBlogsProductPost>(new Action<googleBlogsProductPost>(this.attach_googleBlogsProductPosts), new Action<googleBlogsProductPost>(this.detach_googleBlogsProductPosts));
			this._product_comments = new EntitySet<product_comment>(new Action<product_comment>(this.attach_product_comments), new Action<product_comment>(this.detach_product_comments));
			this._facebook_imports = new EntitySet<facebook_import>(new Action<facebook_import>(this.attach_facebook_imports), new Action<facebook_import>(this.detach_facebook_imports));
			this._wordpressPosts = default(EntityRef<wordpressPost>);
			this._tumblrPosts = default(EntityRef<tumblrPost>);
			this._contactGroupPricings = new EntitySet<contactGroupPricing>(new Action<contactGroupPricing>(this.attach_contactGroupPricings), new Action<contactGroupPricing>(this.detach_contactGroupPricings));
			this._productCollectionMembers = new EntitySet<productCollectionMember>(new Action<productCollectionMember>(this.attach_productCollectionMembers), new Action<productCollectionMember>(this.detach_productCollectionMembers));
			this._product_variants = new EntitySet<product_variant>(new Action<product_variant>(this.attach_product_variants), new Action<product_variant>(this.detach_product_variants));
			this._products_digitals = default(EntityRef<products_digital>);
			this._tags1 = new EntitySet<tag>(new Action<tag>(this.attach_tags1), new Action<tag>(this.detach_tags1));
			this._product_images = new EntitySet<product_image>(new Action<product_image>(this.attach_product_images), new Action<product_image>(this.detach_product_images));
			this._ebay_product = default(EntityRef<ebay_product>);
			this._gbase_product = default(EntityRef<gbase_product>);
			this._product_image = default(EntityRef<product_image>);
			this._productCategory = default(EntityRef<productCategory>);
			this._shippingProfile = default(EntityRef<shippingProfile>);
			this._stockUnit = default(EntityRef<stockUnit>);
			this._trademe_product = default(EntityRef<trademe_product>);
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="BigInt")]
		public System.Nullable<long> category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					if (this._productCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumb", DbType="BigInt")]
		public System.Nullable<long> thumb
		{
			get
			{
				return this._thumb;
			}
			set
			{
				if ((this._thumb != value))
				{
					if (this._product_image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnthumbChanging(value);
					this.SendPropertyChanging();
					this._thumb = value;
					this.SendPropertyChanged("thumb");
					this.OnthumbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellingPrice", DbType="Money")]
		public System.Nullable<decimal> sellingPrice
		{
			get
			{
				return this._sellingPrice;
			}
			set
			{
				if ((this._sellingPrice != value))
				{
					this.OnsellingPriceChanging(value);
					this.SendPropertyChanging();
					this._sellingPrice = value;
					this.SendPropertyChanged("sellingPrice");
					this.OnsellingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stockUnitId", DbType="BigInt")]
		public System.Nullable<long> stockUnitId
		{
			get
			{
				return this._stockUnitId;
			}
			set
			{
				if ((this._stockUnitId != value))
				{
					if (this._stockUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstockUnitIdChanging(value);
					this.SendPropertyChanging();
					this._stockUnitId = value;
					this.SendPropertyChanged("stockUnitId");
					this.OnstockUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_otherNotes", DbType="NVarChar(1000)")]
		public string otherNotes
		{
			get
			{
				return this._otherNotes;
			}
			set
			{
				if ((this._otherNotes != value))
				{
					this.OnotherNotesChanging(value);
					this.SendPropertyChanging();
					this._otherNotes = value;
					this.SendPropertyChanged("otherNotes");
					this.OnotherNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costPrice", DbType="Money")]
		public System.Nullable<decimal> costPrice
		{
			get
			{
				return this._costPrice;
			}
			set
			{
				if ((this._costPrice != value))
				{
					this.OncostPriceChanging(value);
					this.SendPropertyChanging();
					this._costPrice = value;
					this.SendPropertyChanged("costPrice");
					this.OncostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> updated
		{
			get
			{
				return this._updated;
			}
			set
			{
				if ((this._updated != value))
				{
					this.OnupdatedChanging(value);
					this.SendPropertyChanging();
					this._updated = value;
					this.SendPropertyChanged("updated");
					this.OnupdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="Int NOT NULL")]
		public int flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hits", DbType="Int")]
		public System.Nullable<int> hits
		{
			get
			{
				return this._hits;
			}
			set
			{
				if ((this._hits != value))
				{
					this.OnhitsChanging(value);
					this.SendPropertyChanging();
					this._hits = value;
					this.SendPropertyChanged("hits");
					this.OnhitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gbaseID", DbType="VarChar(100)")]
		public string gbaseID
		{
			get
			{
				return this._gbaseID;
			}
			set
			{
				if ((this._gbaseID != value))
				{
					this.OngbaseIDChanging(value);
					this.SendPropertyChanging();
					this._gbaseID = value;
					this.SendPropertyChanged("gbaseID");
					this.OngbaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dimensions", DbType="VarChar(100)")]
		public string dimensions
		{
			get
			{
				return this._dimensions;
			}
			set
			{
				if ((this._dimensions != value))
				{
					this.OndimensionsChanging(value);
					this.SendPropertyChanging();
					this._dimensions = value;
					this.SendPropertyChanged("dimensions");
					this.OndimensionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipwireDetails", DbType="VarChar(100)")]
		public string shipwireDetails
		{
			get
			{
				return this._shipwireDetails;
			}
			set
			{
				if ((this._shipwireDetails != value))
				{
					this.OnshipwireDetailsChanging(value);
					this.SendPropertyChanging();
					this._shipwireDetails = value;
					this.SendPropertyChanged("shipwireDetails");
					this.OnshipwireDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialPrice", DbType="Money")]
		public System.Nullable<decimal> specialPrice
		{
			get
			{
				return this._specialPrice;
			}
			set
			{
				if ((this._specialPrice != value))
				{
					this.OnspecialPriceChanging(value);
					this.SendPropertyChanging();
					this._specialPrice = value;
					this.SendPropertyChanged("specialPrice");
					this.OnspecialPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingProfileID", DbType="BigInt")]
		public System.Nullable<long> shippingProfileID
		{
			get
			{
				return this._shippingProfileID;
			}
			set
			{
				if ((this._shippingProfileID != value))
				{
					if (this._shippingProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshippingProfileIDChanging(value);
					this.SendPropertyChanging();
					this._shippingProfileID = value;
					this.SendPropertyChanged("shippingProfileID");
					this.OnshippingProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gbase", DbType="BigInt")]
		public System.Nullable<long> gbase
		{
			get
			{
				return this._gbase;
			}
			set
			{
				if ((this._gbase != value))
				{
					if (this._gbase_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngbaseChanging(value);
					this.SendPropertyChanging();
					this._gbase = value;
					this.SendPropertyChanged("gbase");
					this.OngbaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tags", DbType="NVarChar(1000)")]
		public string tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				if ((this._tags != value))
				{
					this.OntagsChanging(value);
					this.SendPropertyChanging();
					this._tags = value;
					this.SendPropertyChanged("tags");
					this.OntagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trackInventory", DbType="Bit NOT NULL")]
		public bool trackInventory
		{
			get
			{
				return this._trackInventory;
			}
			set
			{
				if ((this._trackInventory != value))
				{
					this.OntrackInventoryChanging(value);
					this.SendPropertyChanging();
					this._trackInventory = value;
					this.SendPropertyChanged("trackInventory");
					this.OntrackInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebayID", DbType="BigInt")]
		public System.Nullable<long> ebayID
		{
			get
			{
				return this._ebayID;
			}
			set
			{
				if ((this._ebayID != value))
				{
					if (this._ebay_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnebayIDChanging(value);
					this.SendPropertyChanging();
					this._ebayID = value;
					this.SendPropertyChanged("ebayID");
					this.OnebayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trademeID", DbType="BigInt")]
		public System.Nullable<long> trademeID
		{
			get
			{
				return this._trademeID;
			}
			set
			{
				if ((this._trademeID != value))
				{
					if (this._trademe_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntrademeIDChanging(value);
					this.SendPropertyChanging();
					this._trademeID = value;
					this.SendPropertyChanged("trademeID");
					this.OntrademeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_favourite", Storage="_favourites", ThisKey="id", OtherKey="productid")]
		public EntitySet<favourite> favourites
		{
			get
			{
				return this._favourites;
			}
			set
			{
				this._favourites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_googleBlogsProductPost", Storage="_googleBlogsProductPosts", ThisKey="id", OtherKey="productid")]
		public EntitySet<googleBlogsProductPost> googleBlogsProductPosts
		{
			get
			{
				return this._googleBlogsProductPosts;
			}
			set
			{
				this._googleBlogsProductPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_comment", Storage="_product_comments", ThisKey="id", OtherKey="productid")]
		public EntitySet<product_comment> product_comments
		{
			get
			{
				return this._product_comments;
			}
			set
			{
				this._product_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_facebook_import", Storage="_facebook_imports", ThisKey="id", OtherKey="productid")]
		public EntitySet<facebook_import> facebook_imports
		{
			get
			{
				return this._facebook_imports;
			}
			set
			{
				this._facebook_imports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_wordpressPost", Storage="_wordpressPosts", ThisKey="id", OtherKey="productid", IsUnique=true, IsForeignKey=false)]
		public wordpressPost wordpressPosts
		{
			get
			{
				return this._wordpressPosts.Entity;
			}
			set
			{
				wordpressPost previousValue = this._wordpressPosts.Entity;
				if (((previousValue != value) 
							|| (this._wordpressPosts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._wordpressPosts.Entity = null;
						previousValue.product = null;
					}
					this._wordpressPosts.Entity = value;
					if ((value != null))
					{
						value.product = this;
					}
					this.SendPropertyChanged("wordpressPosts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_tumblrPost", Storage="_tumblrPosts", ThisKey="id", OtherKey="productid", IsUnique=true, IsForeignKey=false)]
		public tumblrPost tumblrPosts
		{
			get
			{
				return this._tumblrPosts.Entity;
			}
			set
			{
				tumblrPost previousValue = this._tumblrPosts.Entity;
				if (((previousValue != value) 
							|| (this._tumblrPosts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tumblrPosts.Entity = null;
						previousValue.product = null;
					}
					this._tumblrPosts.Entity = value;
					if ((value != null))
					{
						value.product = this;
					}
					this.SendPropertyChanged("tumblrPosts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_contactGroupPricing", Storage="_contactGroupPricings", ThisKey="id", OtherKey="productid")]
		public EntitySet<contactGroupPricing> contactGroupPricings
		{
			get
			{
				return this._contactGroupPricings;
			}
			set
			{
				this._contactGroupPricings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_productCollectionMember", Storage="_productCollectionMembers", ThisKey="id", OtherKey="productid")]
		public EntitySet<productCollectionMember> productCollectionMembers
		{
			get
			{
				return this._productCollectionMembers;
			}
			set
			{
				this._productCollectionMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_variant", Storage="_product_variants", ThisKey="id", OtherKey="productid")]
		public EntitySet<product_variant> product_variants
		{
			get
			{
				return this._product_variants;
			}
			set
			{
				this._product_variants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_products_digital", Storage="_products_digitals", ThisKey="id", OtherKey="productid", IsUnique=true, IsForeignKey=false)]
		public products_digital products_digitals
		{
			get
			{
				return this._products_digitals.Entity;
			}
			set
			{
				products_digital previousValue = this._products_digitals.Entity;
				if (((previousValue != value) 
							|| (this._products_digitals.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._products_digitals.Entity = null;
						previousValue.product = null;
					}
					this._products_digitals.Entity = value;
					if ((value != null))
					{
						value.product = this;
					}
					this.SendPropertyChanged("products_digitals");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_tag", Storage="_tags1", ThisKey="id", OtherKey="productid")]
		public EntitySet<tag> tags1
		{
			get
			{
				return this._tags1;
			}
			set
			{
				this._tags1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_product_image", Storage="_product_images", ThisKey="id", OtherKey="productid")]
		public EntitySet<product_image> product_images
		{
			get
			{
				return this._product_images;
			}
			set
			{
				this._product_images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ebay_product_product", Storage="_ebay_product", ThisKey="ebayID", OtherKey="id", IsForeignKey=true)]
		public ebay_product ebay_product
		{
			get
			{
				return this._ebay_product.Entity;
			}
			set
			{
				ebay_product previousValue = this._ebay_product.Entity;
				if (((previousValue != value) 
							|| (this._ebay_product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ebay_product.Entity = null;
						previousValue.products.Remove(this);
					}
					this._ebay_product.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._ebayID = value.id;
					}
					else
					{
						this._ebayID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ebay_product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gbase_product_product", Storage="_gbase_product", ThisKey="gbase", OtherKey="id", IsForeignKey=true)]
		public gbase_product gbase_product
		{
			get
			{
				return this._gbase_product.Entity;
			}
			set
			{
				gbase_product previousValue = this._gbase_product.Entity;
				if (((previousValue != value) 
							|| (this._gbase_product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gbase_product.Entity = null;
						previousValue.products.Remove(this);
					}
					this._gbase_product.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._gbase = value.id;
					}
					else
					{
						this._gbase = default(Nullable<long>);
					}
					this.SendPropertyChanged("gbase_product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_image_product", Storage="_product_image", ThisKey="thumb", OtherKey="id", IsForeignKey=true)]
		public product_image product_image
		{
			get
			{
				return this._product_image.Entity;
			}
			set
			{
				product_image previousValue = this._product_image.Entity;
				if (((previousValue != value) 
							|| (this._product_image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product_image.Entity = null;
						previousValue.products.Remove(this);
					}
					this._product_image.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._thumb = value.id;
					}
					else
					{
						this._thumb = default(Nullable<long>);
					}
					this.SendPropertyChanged("product_image");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productCategory_product", Storage="_productCategory", ThisKey="category", OtherKey="id", IsForeignKey=true)]
		public productCategory productCategory
		{
			get
			{
				return this._productCategory.Entity;
			}
			set
			{
				productCategory previousValue = this._productCategory.Entity;
				if (((previousValue != value) 
							|| (this._productCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._productCategory.Entity = null;
						previousValue.products.Remove(this);
					}
					this._productCategory.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._category = value.id;
					}
					else
					{
						this._category = default(Nullable<long>);
					}
					this.SendPropertyChanged("productCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="shippingProfile_product", Storage="_shippingProfile", ThisKey="shippingProfileID", OtherKey="id", IsForeignKey=true)]
		public shippingProfile shippingProfile
		{
			get
			{
				return this._shippingProfile.Entity;
			}
			set
			{
				shippingProfile previousValue = this._shippingProfile.Entity;
				if (((previousValue != value) 
							|| (this._shippingProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._shippingProfile.Entity = null;
						previousValue.products.Remove(this);
					}
					this._shippingProfile.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._shippingProfileID = value.id;
					}
					else
					{
						this._shippingProfileID = default(Nullable<long>);
					}
					this.SendPropertyChanged("shippingProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stockUnit_product", Storage="_stockUnit", ThisKey="stockUnitId", OtherKey="id", IsForeignKey=true)]
		public stockUnit stockUnit
		{
			get
			{
				return this._stockUnit.Entity;
			}
			set
			{
				stockUnit previousValue = this._stockUnit.Entity;
				if (((previousValue != value) 
							|| (this._stockUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._stockUnit.Entity = null;
						previousValue.products.Remove(this);
					}
					this._stockUnit.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._stockUnitId = value.id;
					}
					else
					{
						this._stockUnitId = default(Nullable<long>);
					}
					this.SendPropertyChanged("stockUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_product_product", Storage="_trademe_product", ThisKey="trademeID", OtherKey="id", IsForeignKey=true)]
		public trademe_product trademe_product
		{
			get
			{
				return this._trademe_product.Entity;
			}
			set
			{
				trademe_product previousValue = this._trademe_product.Entity;
				if (((previousValue != value) 
							|| (this._trademe_product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trademe_product.Entity = null;
						previousValue.products.Remove(this);
					}
					this._trademe_product.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._trademeID = value.id;
					}
					else
					{
						this._trademeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("trademe_product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.products.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_favourites(favourite entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_favourites(favourite entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_googleBlogsProductPosts(googleBlogsProductPost entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_googleBlogsProductPosts(googleBlogsProductPost entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_facebook_imports(facebook_import entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_facebook_imports(facebook_import entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_contactGroupPricings(contactGroupPricing entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_contactGroupPricings(contactGroupPricing entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_productCollectionMembers(productCollectionMember entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_productCollectionMembers(productCollectionMember entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_product_variants(product_variant entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_product_variants(product_variant entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_tags1(tag entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_tags1(tag entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_product_images(product_image entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_product_images(product_image entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trademe_categories")]
	public partial class trademe_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _parentid;
		
		private bool _isLeaf;
		
		private System.Nullable<byte> _default_listingduration;
		
		private bool _active;
		
		private EntitySet<trademe_listingduration> _trademe_listingdurations;
		
		private EntitySet<trademe_category> _trademe_categories;
		
		private EntityRef<trademe_category> _trademe_category1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentidChanging(string value);
    partial void OnparentidChanged();
    partial void OnisLeafChanging(bool value);
    partial void OnisLeafChanged();
    partial void Ondefault_listingdurationChanging(System.Nullable<byte> value);
    partial void Ondefault_listingdurationChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public trademe_category()
		{
			this._trademe_listingdurations = new EntitySet<trademe_listingduration>(new Action<trademe_listingduration>(this.attach_trademe_listingdurations), new Action<trademe_listingduration>(this.detach_trademe_listingdurations));
			this._trademe_categories = new EntitySet<trademe_category>(new Action<trademe_category>(this.attach_trademe_categories), new Action<trademe_category>(this.detach_trademe_categories));
			this._trademe_category1 = default(EntityRef<trademe_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentid", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string parentid
		{
			get
			{
				return this._parentid;
			}
			set
			{
				if ((this._parentid != value))
				{
					if (this._trademe_category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentidChanging(value);
					this.SendPropertyChanging();
					this._parentid = value;
					this.SendPropertyChanged("parentid");
					this.OnparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLeaf", DbType="Bit NOT NULL")]
		public bool isLeaf
		{
			get
			{
				return this._isLeaf;
			}
			set
			{
				if ((this._isLeaf != value))
				{
					this.OnisLeafChanging(value);
					this.SendPropertyChanging();
					this._isLeaf = value;
					this.SendPropertyChanged("isLeaf");
					this.OnisLeafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_default_listingduration", DbType="TinyInt")]
		public System.Nullable<byte> default_listingduration
		{
			get
			{
				return this._default_listingduration;
			}
			set
			{
				if ((this._default_listingduration != value))
				{
					this.Ondefault_listingdurationChanging(value);
					this.SendPropertyChanging();
					this._default_listingduration = value;
					this.SendPropertyChanged("default_listingduration");
					this.Ondefault_listingdurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_category_trademe_listingduration", Storage="_trademe_listingdurations", ThisKey="id", OtherKey="categoryid")]
		public EntitySet<trademe_listingduration> trademe_listingdurations
		{
			get
			{
				return this._trademe_listingdurations;
			}
			set
			{
				this._trademe_listingdurations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_category_trademe_category", Storage="_trademe_categories", ThisKey="id", OtherKey="parentid")]
		public EntitySet<trademe_category> trademe_categories
		{
			get
			{
				return this._trademe_categories;
			}
			set
			{
				this._trademe_categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_category_trademe_category", Storage="_trademe_category1", ThisKey="parentid", OtherKey="id", IsForeignKey=true)]
		public trademe_category trademe_category1
		{
			get
			{
				return this._trademe_category1.Entity;
			}
			set
			{
				trademe_category previousValue = this._trademe_category1.Entity;
				if (((previousValue != value) 
							|| (this._trademe_category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trademe_category1.Entity = null;
						previousValue.trademe_categories.Remove(this);
					}
					this._trademe_category1.Entity = value;
					if ((value != null))
					{
						value.trademe_categories.Add(this);
						this._parentid = value.id;
					}
					else
					{
						this._parentid = default(string);
					}
					this.SendPropertyChanged("trademe_category1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trademe_listingdurations(trademe_listingduration entity)
		{
			this.SendPropertyChanging();
			entity.trademe_category = this;
		}
		
		private void detach_trademe_listingdurations(trademe_listingduration entity)
		{
			this.SendPropertyChanging();
			entity.trademe_category = null;
		}
		
		private void attach_trademe_categories(trademe_category entity)
		{
			this.SendPropertyChanging();
			entity.trademe_category1 = this;
		}
		
		private void detach_trademe_categories(trademe_category entity)
		{
			this.SendPropertyChanging();
			entity.trademe_category1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trademe_shippingcosts")]
	public partial class trademe_shippingcost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private decimal _cost;
		
		private string _description;
		
		private long _trademeproductid;
		
		private EntityRef<trademe_product> _trademe_product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncostChanging(decimal value);
    partial void OncostChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OntrademeproductidChanging(long value);
    partial void OntrademeproductidChanged();
    #endregion
		
		public trademe_shippingcost()
		{
			this._trademe_product = default(EntityRef<trademe_product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Money NOT NULL")]
		public decimal cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trademeproductid", DbType="BigInt NOT NULL")]
		public long trademeproductid
		{
			get
			{
				return this._trademeproductid;
			}
			set
			{
				if ((this._trademeproductid != value))
				{
					if (this._trademe_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntrademeproductidChanging(value);
					this.SendPropertyChanging();
					this._trademeproductid = value;
					this.SendPropertyChanged("trademeproductid");
					this.OntrademeproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_product_trademe_shippingcost", Storage="_trademe_product", ThisKey="trademeproductid", OtherKey="id", IsForeignKey=true)]
		public trademe_product trademe_product
		{
			get
			{
				return this._trademe_product.Entity;
			}
			set
			{
				trademe_product previousValue = this._trademe_product.Entity;
				if (((previousValue != value) 
							|| (this._trademe_product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trademe_product.Entity = null;
						previousValue.trademe_shippingcosts.Remove(this);
					}
					this._trademe_product.Entity = value;
					if ((value != null))
					{
						value.trademe_shippingcosts.Add(this);
						this._trademeproductid = value.id;
					}
					else
					{
						this._trademeproductid = default(long);
					}
					this.SendPropertyChanged("trademe_product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trademe_products")]
	public partial class trademe_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private int _listingid;
		
		private System.Nullable<decimal> _listingfees;
		
		private string _categoryid;
		
		private decimal _startPrice;
		
		private decimal _reservePrice;
		
		private System.Nullable<decimal> _buynowPrice;
		
		private byte _duration;
		
		private byte _pickup;
		
		private bool _isnew;
		
		private bool _authenticatedOnly;
		
		private bool _isclassified;
		
		private int _quantity;
		
		private bool _isBold;
		
		private bool _isFeatured;
		
		private bool _isHomepageFeatured;
		
		private bool _hasGallery;
		
		private bool _flatShipping;
		
		private bool _isActive;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private bool _autorelist;
		
		private bool _safetrader;
		
		private EntitySet<product> _products;
		
		private EntitySet<trademe_shippingcost> _trademe_shippingcosts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnlistingidChanging(int value);
    partial void OnlistingidChanged();
    partial void OnlistingfeesChanging(System.Nullable<decimal> value);
    partial void OnlistingfeesChanged();
    partial void OncategoryidChanging(string value);
    partial void OncategoryidChanged();
    partial void OnstartPriceChanging(decimal value);
    partial void OnstartPriceChanged();
    partial void OnreservePriceChanging(decimal value);
    partial void OnreservePriceChanged();
    partial void OnbuynowPriceChanging(System.Nullable<decimal> value);
    partial void OnbuynowPriceChanged();
    partial void OndurationChanging(byte value);
    partial void OndurationChanged();
    partial void OnpickupChanging(byte value);
    partial void OnpickupChanged();
    partial void OnisnewChanging(bool value);
    partial void OnisnewChanged();
    partial void OnauthenticatedOnlyChanging(bool value);
    partial void OnauthenticatedOnlyChanged();
    partial void OnisclassifiedChanging(bool value);
    partial void OnisclassifiedChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnisBoldChanging(bool value);
    partial void OnisBoldChanged();
    partial void OnisFeaturedChanging(bool value);
    partial void OnisFeaturedChanged();
    partial void OnisHomepageFeaturedChanging(bool value);
    partial void OnisHomepageFeaturedChanged();
    partial void OnhasGalleryChanging(bool value);
    partial void OnhasGalleryChanged();
    partial void OnflatShippingChanging(bool value);
    partial void OnflatShippingChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnendTimeChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OnautorelistChanging(bool value);
    partial void OnautorelistChanged();
    partial void OnsafetraderChanging(bool value);
    partial void OnsafetraderChanged();
    #endregion
		
		public trademe_product()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._trademe_shippingcosts = new EntitySet<trademe_shippingcost>(new Action<trademe_shippingcost>(this.attach_trademe_shippingcosts), new Action<trademe_shippingcost>(this.detach_trademe_shippingcosts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_listingid", DbType="Int NOT NULL")]
		public int listingid
		{
			get
			{
				return this._listingid;
			}
			set
			{
				if ((this._listingid != value))
				{
					this.OnlistingidChanging(value);
					this.SendPropertyChanging();
					this._listingid = value;
					this.SendPropertyChanged("listingid");
					this.OnlistingidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_listingfees", DbType="Money")]
		public System.Nullable<decimal> listingfees
		{
			get
			{
				return this._listingfees;
			}
			set
			{
				if ((this._listingfees != value))
				{
					this.OnlistingfeesChanging(value);
					this.SendPropertyChanging();
					this._listingfees = value;
					this.SendPropertyChanged("listingfees");
					this.OnlistingfeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startPrice", DbType="Money NOT NULL")]
		public decimal startPrice
		{
			get
			{
				return this._startPrice;
			}
			set
			{
				if ((this._startPrice != value))
				{
					this.OnstartPriceChanging(value);
					this.SendPropertyChanging();
					this._startPrice = value;
					this.SendPropertyChanged("startPrice");
					this.OnstartPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reservePrice", DbType="Money NOT NULL")]
		public decimal reservePrice
		{
			get
			{
				return this._reservePrice;
			}
			set
			{
				if ((this._reservePrice != value))
				{
					this.OnreservePriceChanging(value);
					this.SendPropertyChanging();
					this._reservePrice = value;
					this.SendPropertyChanged("reservePrice");
					this.OnreservePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buynowPrice", DbType="Money")]
		public System.Nullable<decimal> buynowPrice
		{
			get
			{
				return this._buynowPrice;
			}
			set
			{
				if ((this._buynowPrice != value))
				{
					this.OnbuynowPriceChanging(value);
					this.SendPropertyChanging();
					this._buynowPrice = value;
					this.SendPropertyChanged("buynowPrice");
					this.OnbuynowPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="TinyInt NOT NULL")]
		public byte duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pickup", DbType="TinyInt NOT NULL")]
		public byte pickup
		{
			get
			{
				return this._pickup;
			}
			set
			{
				if ((this._pickup != value))
				{
					this.OnpickupChanging(value);
					this.SendPropertyChanging();
					this._pickup = value;
					this.SendPropertyChanged("pickup");
					this.OnpickupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isnew", DbType="Bit NOT NULL")]
		public bool isnew
		{
			get
			{
				return this._isnew;
			}
			set
			{
				if ((this._isnew != value))
				{
					this.OnisnewChanging(value);
					this.SendPropertyChanging();
					this._isnew = value;
					this.SendPropertyChanged("isnew");
					this.OnisnewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authenticatedOnly", DbType="Bit NOT NULL")]
		public bool authenticatedOnly
		{
			get
			{
				return this._authenticatedOnly;
			}
			set
			{
				if ((this._authenticatedOnly != value))
				{
					this.OnauthenticatedOnlyChanging(value);
					this.SendPropertyChanging();
					this._authenticatedOnly = value;
					this.SendPropertyChanged("authenticatedOnly");
					this.OnauthenticatedOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isclassified", DbType="Bit NOT NULL")]
		public bool isclassified
		{
			get
			{
				return this._isclassified;
			}
			set
			{
				if ((this._isclassified != value))
				{
					this.OnisclassifiedChanging(value);
					this.SendPropertyChanging();
					this._isclassified = value;
					this.SendPropertyChanged("isclassified");
					this.OnisclassifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isBold", DbType="Bit NOT NULL")]
		public bool isBold
		{
			get
			{
				return this._isBold;
			}
			set
			{
				if ((this._isBold != value))
				{
					this.OnisBoldChanging(value);
					this.SendPropertyChanging();
					this._isBold = value;
					this.SendPropertyChanged("isBold");
					this.OnisBoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFeatured", DbType="Bit NOT NULL")]
		public bool isFeatured
		{
			get
			{
				return this._isFeatured;
			}
			set
			{
				if ((this._isFeatured != value))
				{
					this.OnisFeaturedChanging(value);
					this.SendPropertyChanging();
					this._isFeatured = value;
					this.SendPropertyChanged("isFeatured");
					this.OnisFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHomepageFeatured", DbType="Bit NOT NULL")]
		public bool isHomepageFeatured
		{
			get
			{
				return this._isHomepageFeatured;
			}
			set
			{
				if ((this._isHomepageFeatured != value))
				{
					this.OnisHomepageFeaturedChanging(value);
					this.SendPropertyChanging();
					this._isHomepageFeatured = value;
					this.SendPropertyChanged("isHomepageFeatured");
					this.OnisHomepageFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasGallery", DbType="Bit NOT NULL")]
		public bool hasGallery
		{
			get
			{
				return this._hasGallery;
			}
			set
			{
				if ((this._hasGallery != value))
				{
					this.OnhasGalleryChanging(value);
					this.SendPropertyChanging();
					this._hasGallery = value;
					this.SendPropertyChanged("hasGallery");
					this.OnhasGalleryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flatShipping", DbType="Bit NOT NULL")]
		public bool flatShipping
		{
			get
			{
				return this._flatShipping;
			}
			set
			{
				if ((this._flatShipping != value))
				{
					this.OnflatShippingChanging(value);
					this.SendPropertyChanging();
					this._flatShipping = value;
					this.SendPropertyChanged("flatShipping");
					this.OnflatShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autorelist", DbType="Bit NOT NULL")]
		public bool autorelist
		{
			get
			{
				return this._autorelist;
			}
			set
			{
				if ((this._autorelist != value))
				{
					this.OnautorelistChanging(value);
					this.SendPropertyChanging();
					this._autorelist = value;
					this.SendPropertyChanged("autorelist");
					this.OnautorelistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_safetrader", DbType="Bit NOT NULL")]
		public bool safetrader
		{
			get
			{
				return this._safetrader;
			}
			set
			{
				if ((this._safetrader != value))
				{
					this.OnsafetraderChanging(value);
					this.SendPropertyChanging();
					this._safetrader = value;
					this.SendPropertyChanged("safetrader");
					this.OnsafetraderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_product_product", Storage="_products", ThisKey="id", OtherKey="trademeID")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trademe_product_trademe_shippingcost", Storage="_trademe_shippingcosts", ThisKey="id", OtherKey="trademeproductid")]
		public EntitySet<trademe_shippingcost> trademe_shippingcosts
		{
			get
			{
				return this._trademe_shippingcosts;
			}
			set
			{
				this._trademe_shippingcosts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.trademe_product = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.trademe_product = null;
		}
		
		private void attach_trademe_shippingcosts(trademe_shippingcost entity)
		{
			this.SendPropertyChanging();
			entity.trademe_product = this;
		}
		
		private void detach_trademe_shippingcosts(trademe_shippingcost entity)
		{
			this.SendPropertyChanging();
			entity.trademe_product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MASTERsubdomains")]
	public partial class MASTERsubdomain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private System.Nullable<long> _creator;
		
		private long _total_products_mine;
		
		private long _total_orders_sent;
		
		private long _total_orders_received;
		
		private long _total_invoices_sent;
		
		private long _total_invoices_received;
		
		private long _total_contacts_public;
		
		private long _total_contacts_private;
		
		private long _total_contacts_staff;
		
		private long _total_outofstock;
		
		private string _storeCustomCss;
		
		private string _storeAboutPage;
		
		private string _accountType;
		
		private string _accountTypeNew;
		
		private System.Nullable<byte> _accountTypeStatus;
		
		private string _accountTransactionID;
		
		private string _bloggerSessionKey;
		
		private string _metaTagVerification;
		
		private int _flags;
		
		private string _customDomain;
		
		private string _shipwireEmail;
		
		private string _shipwirePassword;
		
		private System.Nullable<int> _currency;
		
		private System.Nullable<decimal> _default_taxrate;
		
		private System.Nullable<long> _gbaseid;
		
		private string _returnPolicy;
		
		private string _paymentTerms;
		
		private System.Nullable<long> _facebookCoupon;
		
		private System.Nullable<long> _currentThemeID;
		
		private string _storeName;
		
		private string _uniqueid;
		
		private System.Nullable<System.DateTime> _ebay_lastsync;
		
		private string _affiliateID;
		
		private System.Nullable<long> _affiliateReferrer;
		
		private System.Nullable<System.DateTime> _trialExpiry;
		
		private EntitySet<friend> _friends;
		
		private EntitySet<friend> _friends1;
		
		private EntitySet<facebookPage> _facebookPages;
		
		private EntitySet<opensocialPage> _opensocialPages;
		
		private EntitySet<twitterSearch> _twitterSearches;
		
		private EntitySet<image> _images;
		
		private EntitySet<inventoryLocation> _inventoryLocations;
		
		private EntitySet<productCategory> _productCategories;
		
		private EntitySet<googleBlog> _googleBlogs;
		
		private EntitySet<product_comment> _product_comments;
		
		private EntitySet<video> _videos;
		
		private EntitySet<review> _reviews;
		
		private EntitySet<oauth_token> _oauth_tokens;
		
		private EntitySet<stockUnit> _stockUnits;
		
		private EntitySet<facebook_token> _facebook_tokens;
		
		private EntityRef<wordpressSite> _wordpressSites;
		
		private EntityRef<tumblrSite> _tumblrSites;
		
		private EntitySet<contactGroup> _contactGroups;
		
		private EntitySet<cart> _carts;
		
		private EntitySet<blog> _blogs;
		
		private EntitySet<linklist> _linklists;
		
		private EntitySet<coupon> _coupons;
		
		private EntitySet<shippingProfile> _shippingProfiles;
		
		private EntitySet<organisation> _organisations;
		
		private EntitySet<paymentMethod> _paymentMethods;
		
		private EntitySet<ebay_shippingprofile> _ebay_shippingprofiles;
		
		private EntitySet<ebay_order> _ebay_orders;
		
		private EntitySet<article_tag> _article_tags;
		
		private EntitySet<tag> _tags;
		
		private EntitySet<product_image> _product_images;
		
		private EntitySet<product> _products;
		
		private EntitySet<MASTERsubdomain> _MASTERsubdomains;
		
		private EntitySet<page> _pages;
		
		private EntitySet<product_collection> _product_collections;
		
		private EntitySet<indexingQueue> _indexingQueues;
		
		private EntityRef<coupon> _coupon;
		
		private EntityRef<googleBase> _googleBase;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain1;
		
		private EntityRef<organisation> _organisation;
		
		private EntityRef<theme> _theme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncreatorChanging(System.Nullable<long> value);
    partial void OncreatorChanged();
    partial void Ontotal_products_mineChanging(long value);
    partial void Ontotal_products_mineChanged();
    partial void Ontotal_orders_sentChanging(long value);
    partial void Ontotal_orders_sentChanged();
    partial void Ontotal_orders_receivedChanging(long value);
    partial void Ontotal_orders_receivedChanged();
    partial void Ontotal_invoices_sentChanging(long value);
    partial void Ontotal_invoices_sentChanged();
    partial void Ontotal_invoices_receivedChanging(long value);
    partial void Ontotal_invoices_receivedChanged();
    partial void Ontotal_contacts_publicChanging(long value);
    partial void Ontotal_contacts_publicChanged();
    partial void Ontotal_contacts_privateChanging(long value);
    partial void Ontotal_contacts_privateChanged();
    partial void Ontotal_contacts_staffChanging(long value);
    partial void Ontotal_contacts_staffChanged();
    partial void Ontotal_outofstockChanging(long value);
    partial void Ontotal_outofstockChanged();
    partial void OnstoreCustomCssChanging(string value);
    partial void OnstoreCustomCssChanged();
    partial void OnstoreAboutPageChanging(string value);
    partial void OnstoreAboutPageChanged();
    partial void OnaccountTypeChanging(string value);
    partial void OnaccountTypeChanged();
    partial void OnaccountTypeNewChanging(string value);
    partial void OnaccountTypeNewChanged();
    partial void OnaccountTypeStatusChanging(System.Nullable<byte> value);
    partial void OnaccountTypeStatusChanged();
    partial void OnaccountTransactionIDChanging(string value);
    partial void OnaccountTransactionIDChanged();
    partial void OnbloggerSessionKeyChanging(string value);
    partial void OnbloggerSessionKeyChanged();
    partial void OnmetaTagVerificationChanging(string value);
    partial void OnmetaTagVerificationChanged();
    partial void OnflagsChanging(int value);
    partial void OnflagsChanged();
    partial void OncustomDomainChanging(string value);
    partial void OncustomDomainChanged();
    partial void OnshipwireEmailChanging(string value);
    partial void OnshipwireEmailChanged();
    partial void OnshipwirePasswordChanging(string value);
    partial void OnshipwirePasswordChanged();
    partial void OncurrencyChanging(System.Nullable<int> value);
    partial void OncurrencyChanged();
    partial void Ondefault_taxrateChanging(System.Nullable<decimal> value);
    partial void Ondefault_taxrateChanged();
    partial void OngbaseidChanging(System.Nullable<long> value);
    partial void OngbaseidChanged();
    partial void OnreturnPolicyChanging(string value);
    partial void OnreturnPolicyChanged();
    partial void OnpaymentTermsChanging(string value);
    partial void OnpaymentTermsChanged();
    partial void OnfacebookCouponChanging(System.Nullable<long> value);
    partial void OnfacebookCouponChanged();
    partial void OncurrentThemeIDChanging(System.Nullable<long> value);
    partial void OncurrentThemeIDChanged();
    partial void OnstoreNameChanging(string value);
    partial void OnstoreNameChanged();
    partial void OnuniqueidChanging(string value);
    partial void OnuniqueidChanged();
    partial void Onebay_lastsyncChanging(System.Nullable<System.DateTime> value);
    partial void Onebay_lastsyncChanged();
    partial void OnaffiliateIDChanging(string value);
    partial void OnaffiliateIDChanged();
    partial void OnaffiliateReferrerChanging(System.Nullable<long> value);
    partial void OnaffiliateReferrerChanged();
    partial void OntrialExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OntrialExpiryChanged();
    #endregion
		
		public MASTERsubdomain()
		{
			this._friends = new EntitySet<friend>(new Action<friend>(this.attach_friends), new Action<friend>(this.detach_friends));
			this._friends1 = new EntitySet<friend>(new Action<friend>(this.attach_friends1), new Action<friend>(this.detach_friends1));
			this._facebookPages = new EntitySet<facebookPage>(new Action<facebookPage>(this.attach_facebookPages), new Action<facebookPage>(this.detach_facebookPages));
			this._opensocialPages = new EntitySet<opensocialPage>(new Action<opensocialPage>(this.attach_opensocialPages), new Action<opensocialPage>(this.detach_opensocialPages));
			this._twitterSearches = new EntitySet<twitterSearch>(new Action<twitterSearch>(this.attach_twitterSearches), new Action<twitterSearch>(this.detach_twitterSearches));
			this._images = new EntitySet<image>(new Action<image>(this.attach_images), new Action<image>(this.detach_images));
			this._inventoryLocations = new EntitySet<inventoryLocation>(new Action<inventoryLocation>(this.attach_inventoryLocations), new Action<inventoryLocation>(this.detach_inventoryLocations));
			this._productCategories = new EntitySet<productCategory>(new Action<productCategory>(this.attach_productCategories), new Action<productCategory>(this.detach_productCategories));
			this._googleBlogs = new EntitySet<googleBlog>(new Action<googleBlog>(this.attach_googleBlogs), new Action<googleBlog>(this.detach_googleBlogs));
			this._product_comments = new EntitySet<product_comment>(new Action<product_comment>(this.attach_product_comments), new Action<product_comment>(this.detach_product_comments));
			this._videos = new EntitySet<video>(new Action<video>(this.attach_videos), new Action<video>(this.detach_videos));
			this._reviews = new EntitySet<review>(new Action<review>(this.attach_reviews), new Action<review>(this.detach_reviews));
			this._oauth_tokens = new EntitySet<oauth_token>(new Action<oauth_token>(this.attach_oauth_tokens), new Action<oauth_token>(this.detach_oauth_tokens));
			this._stockUnits = new EntitySet<stockUnit>(new Action<stockUnit>(this.attach_stockUnits), new Action<stockUnit>(this.detach_stockUnits));
			this._facebook_tokens = new EntitySet<facebook_token>(new Action<facebook_token>(this.attach_facebook_tokens), new Action<facebook_token>(this.detach_facebook_tokens));
			this._wordpressSites = default(EntityRef<wordpressSite>);
			this._tumblrSites = default(EntityRef<tumblrSite>);
			this._contactGroups = new EntitySet<contactGroup>(new Action<contactGroup>(this.attach_contactGroups), new Action<contactGroup>(this.detach_contactGroups));
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			this._blogs = new EntitySet<blog>(new Action<blog>(this.attach_blogs), new Action<blog>(this.detach_blogs));
			this._linklists = new EntitySet<linklist>(new Action<linklist>(this.attach_linklists), new Action<linklist>(this.detach_linklists));
			this._coupons = new EntitySet<coupon>(new Action<coupon>(this.attach_coupons), new Action<coupon>(this.detach_coupons));
			this._shippingProfiles = new EntitySet<shippingProfile>(new Action<shippingProfile>(this.attach_shippingProfiles), new Action<shippingProfile>(this.detach_shippingProfiles));
			this._organisations = new EntitySet<organisation>(new Action<organisation>(this.attach_organisations), new Action<organisation>(this.detach_organisations));
			this._paymentMethods = new EntitySet<paymentMethod>(new Action<paymentMethod>(this.attach_paymentMethods), new Action<paymentMethod>(this.detach_paymentMethods));
			this._ebay_shippingprofiles = new EntitySet<ebay_shippingprofile>(new Action<ebay_shippingprofile>(this.attach_ebay_shippingprofiles), new Action<ebay_shippingprofile>(this.detach_ebay_shippingprofiles));
			this._ebay_orders = new EntitySet<ebay_order>(new Action<ebay_order>(this.attach_ebay_orders), new Action<ebay_order>(this.detach_ebay_orders));
			this._article_tags = new EntitySet<article_tag>(new Action<article_tag>(this.attach_article_tags), new Action<article_tag>(this.detach_article_tags));
			this._tags = new EntitySet<tag>(new Action<tag>(this.attach_tags), new Action<tag>(this.detach_tags));
			this._product_images = new EntitySet<product_image>(new Action<product_image>(this.attach_product_images), new Action<product_image>(this.detach_product_images));
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._MASTERsubdomains = new EntitySet<MASTERsubdomain>(new Action<MASTERsubdomain>(this.attach_MASTERsubdomains), new Action<MASTERsubdomain>(this.detach_MASTERsubdomains));
			this._pages = new EntitySet<page>(new Action<page>(this.attach_pages), new Action<page>(this.detach_pages));
			this._product_collections = new EntitySet<product_collection>(new Action<product_collection>(this.attach_product_collections), new Action<product_collection>(this.detach_product_collections));
			this._indexingQueues = new EntitySet<indexingQueue>(new Action<indexingQueue>(this.attach_indexingQueues), new Action<indexingQueue>(this.detach_indexingQueues));
			this._coupon = default(EntityRef<coupon>);
			this._googleBase = default(EntityRef<googleBase>);
			this._MASTERsubdomain1 = default(EntityRef<MASTERsubdomain>);
			this._organisation = default(EntityRef<organisation>);
			this._theme = default(EntityRef<theme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creator", DbType="BigInt")]
		public System.Nullable<long> creator
		{
			get
			{
				return this._creator;
			}
			set
			{
				if ((this._creator != value))
				{
					if (this._organisation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreatorChanging(value);
					this.SendPropertyChanging();
					this._creator = value;
					this.SendPropertyChanged("creator");
					this.OncreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_products_mine", DbType="BigInt NOT NULL")]
		public long total_products_mine
		{
			get
			{
				return this._total_products_mine;
			}
			set
			{
				if ((this._total_products_mine != value))
				{
					this.Ontotal_products_mineChanging(value);
					this.SendPropertyChanging();
					this._total_products_mine = value;
					this.SendPropertyChanged("total_products_mine");
					this.Ontotal_products_mineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_orders_sent", DbType="BigInt NOT NULL")]
		public long total_orders_sent
		{
			get
			{
				return this._total_orders_sent;
			}
			set
			{
				if ((this._total_orders_sent != value))
				{
					this.Ontotal_orders_sentChanging(value);
					this.SendPropertyChanging();
					this._total_orders_sent = value;
					this.SendPropertyChanged("total_orders_sent");
					this.Ontotal_orders_sentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_orders_received", DbType="BigInt NOT NULL")]
		public long total_orders_received
		{
			get
			{
				return this._total_orders_received;
			}
			set
			{
				if ((this._total_orders_received != value))
				{
					this.Ontotal_orders_receivedChanging(value);
					this.SendPropertyChanging();
					this._total_orders_received = value;
					this.SendPropertyChanged("total_orders_received");
					this.Ontotal_orders_receivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_invoices_sent", DbType="BigInt NOT NULL")]
		public long total_invoices_sent
		{
			get
			{
				return this._total_invoices_sent;
			}
			set
			{
				if ((this._total_invoices_sent != value))
				{
					this.Ontotal_invoices_sentChanging(value);
					this.SendPropertyChanging();
					this._total_invoices_sent = value;
					this.SendPropertyChanged("total_invoices_sent");
					this.Ontotal_invoices_sentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_invoices_received", DbType="BigInt NOT NULL")]
		public long total_invoices_received
		{
			get
			{
				return this._total_invoices_received;
			}
			set
			{
				if ((this._total_invoices_received != value))
				{
					this.Ontotal_invoices_receivedChanging(value);
					this.SendPropertyChanging();
					this._total_invoices_received = value;
					this.SendPropertyChanged("total_invoices_received");
					this.Ontotal_invoices_receivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_contacts_public", DbType="BigInt NOT NULL")]
		public long total_contacts_public
		{
			get
			{
				return this._total_contacts_public;
			}
			set
			{
				if ((this._total_contacts_public != value))
				{
					this.Ontotal_contacts_publicChanging(value);
					this.SendPropertyChanging();
					this._total_contacts_public = value;
					this.SendPropertyChanged("total_contacts_public");
					this.Ontotal_contacts_publicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_contacts_private", DbType="BigInt NOT NULL")]
		public long total_contacts_private
		{
			get
			{
				return this._total_contacts_private;
			}
			set
			{
				if ((this._total_contacts_private != value))
				{
					this.Ontotal_contacts_privateChanging(value);
					this.SendPropertyChanging();
					this._total_contacts_private = value;
					this.SendPropertyChanged("total_contacts_private");
					this.Ontotal_contacts_privateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_contacts_staff", DbType="BigInt NOT NULL")]
		public long total_contacts_staff
		{
			get
			{
				return this._total_contacts_staff;
			}
			set
			{
				if ((this._total_contacts_staff != value))
				{
					this.Ontotal_contacts_staffChanging(value);
					this.SendPropertyChanging();
					this._total_contacts_staff = value;
					this.SendPropertyChanged("total_contacts_staff");
					this.Ontotal_contacts_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_outofstock", DbType="BigInt NOT NULL")]
		public long total_outofstock
		{
			get
			{
				return this._total_outofstock;
			}
			set
			{
				if ((this._total_outofstock != value))
				{
					this.Ontotal_outofstockChanging(value);
					this.SendPropertyChanging();
					this._total_outofstock = value;
					this.SendPropertyChanged("total_outofstock");
					this.Ontotal_outofstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_storeCustomCss", DbType="VarChar(1000)")]
		public string storeCustomCss
		{
			get
			{
				return this._storeCustomCss;
			}
			set
			{
				if ((this._storeCustomCss != value))
				{
					this.OnstoreCustomCssChanging(value);
					this.SendPropertyChanging();
					this._storeCustomCss = value;
					this.SendPropertyChanged("storeCustomCss");
					this.OnstoreCustomCssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_storeAboutPage", DbType="NVarChar(1000)")]
		public string storeAboutPage
		{
			get
			{
				return this._storeAboutPage;
			}
			set
			{
				if ((this._storeAboutPage != value))
				{
					this.OnstoreAboutPageChanging(value);
					this.SendPropertyChanging();
					this._storeAboutPage = value;
					this.SendPropertyChanged("storeAboutPage");
					this.OnstoreAboutPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountType", DbType="VarChar(16)")]
		public string accountType
		{
			get
			{
				return this._accountType;
			}
			set
			{
				if ((this._accountType != value))
				{
					this.OnaccountTypeChanging(value);
					this.SendPropertyChanging();
					this._accountType = value;
					this.SendPropertyChanged("accountType");
					this.OnaccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountTypeNew", DbType="VarChar(16)")]
		public string accountTypeNew
		{
			get
			{
				return this._accountTypeNew;
			}
			set
			{
				if ((this._accountTypeNew != value))
				{
					this.OnaccountTypeNewChanging(value);
					this.SendPropertyChanging();
					this._accountTypeNew = value;
					this.SendPropertyChanged("accountTypeNew");
					this.OnaccountTypeNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountTypeStatus", DbType="TinyInt")]
		public System.Nullable<byte> accountTypeStatus
		{
			get
			{
				return this._accountTypeStatus;
			}
			set
			{
				if ((this._accountTypeStatus != value))
				{
					this.OnaccountTypeStatusChanging(value);
					this.SendPropertyChanging();
					this._accountTypeStatus = value;
					this.SendPropertyChanged("accountTypeStatus");
					this.OnaccountTypeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountTransactionID", DbType="VarChar(30)")]
		public string accountTransactionID
		{
			get
			{
				return this._accountTransactionID;
			}
			set
			{
				if ((this._accountTransactionID != value))
				{
					this.OnaccountTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._accountTransactionID = value;
					this.SendPropertyChanged("accountTransactionID");
					this.OnaccountTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bloggerSessionKey", DbType="VarChar(64)")]
		public string bloggerSessionKey
		{
			get
			{
				return this._bloggerSessionKey;
			}
			set
			{
				if ((this._bloggerSessionKey != value))
				{
					this.OnbloggerSessionKeyChanging(value);
					this.SendPropertyChanging();
					this._bloggerSessionKey = value;
					this.SendPropertyChanged("bloggerSessionKey");
					this.OnbloggerSessionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metaTagVerification", DbType="VarChar(100)")]
		public string metaTagVerification
		{
			get
			{
				return this._metaTagVerification;
			}
			set
			{
				if ((this._metaTagVerification != value))
				{
					this.OnmetaTagVerificationChanging(value);
					this.SendPropertyChanging();
					this._metaTagVerification = value;
					this.SendPropertyChanged("metaTagVerification");
					this.OnmetaTagVerificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="Int NOT NULL")]
		public int flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customDomain", DbType="VarChar(256)")]
		public string customDomain
		{
			get
			{
				return this._customDomain;
			}
			set
			{
				if ((this._customDomain != value))
				{
					this.OncustomDomainChanging(value);
					this.SendPropertyChanging();
					this._customDomain = value;
					this.SendPropertyChanged("customDomain");
					this.OncustomDomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipwireEmail", DbType="VarChar(320)")]
		public string shipwireEmail
		{
			get
			{
				return this._shipwireEmail;
			}
			set
			{
				if ((this._shipwireEmail != value))
				{
					this.OnshipwireEmailChanging(value);
					this.SendPropertyChanging();
					this._shipwireEmail = value;
					this.SendPropertyChanged("shipwireEmail");
					this.OnshipwireEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipwirePassword", DbType="VarChar(50)")]
		public string shipwirePassword
		{
			get
			{
				return this._shipwirePassword;
			}
			set
			{
				if ((this._shipwirePassword != value))
				{
					this.OnshipwirePasswordChanging(value);
					this.SendPropertyChanging();
					this._shipwirePassword = value;
					this.SendPropertyChanged("shipwirePassword");
					this.OnshipwirePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="Int")]
		public System.Nullable<int> currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_default_taxrate", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> default_taxrate
		{
			get
			{
				return this._default_taxrate;
			}
			set
			{
				if ((this._default_taxrate != value))
				{
					this.Ondefault_taxrateChanging(value);
					this.SendPropertyChanging();
					this._default_taxrate = value;
					this.SendPropertyChanged("default_taxrate");
					this.Ondefault_taxrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gbaseid", DbType="BigInt")]
		public System.Nullable<long> gbaseid
		{
			get
			{
				return this._gbaseid;
			}
			set
			{
				if ((this._gbaseid != value))
				{
					if (this._googleBase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngbaseidChanging(value);
					this.SendPropertyChanging();
					this._gbaseid = value;
					this.SendPropertyChanged("gbaseid");
					this.OngbaseidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_returnPolicy", DbType="NVarChar(1000)")]
		public string returnPolicy
		{
			get
			{
				return this._returnPolicy;
			}
			set
			{
				if ((this._returnPolicy != value))
				{
					this.OnreturnPolicyChanging(value);
					this.SendPropertyChanging();
					this._returnPolicy = value;
					this.SendPropertyChanged("returnPolicy");
					this.OnreturnPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paymentTerms", DbType="NVarChar(1000)")]
		public string paymentTerms
		{
			get
			{
				return this._paymentTerms;
			}
			set
			{
				if ((this._paymentTerms != value))
				{
					this.OnpaymentTermsChanging(value);
					this.SendPropertyChanging();
					this._paymentTerms = value;
					this.SendPropertyChanged("paymentTerms");
					this.OnpaymentTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facebookCoupon", DbType="BigInt")]
		public System.Nullable<long> facebookCoupon
		{
			get
			{
				return this._facebookCoupon;
			}
			set
			{
				if ((this._facebookCoupon != value))
				{
					if (this._coupon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfacebookCouponChanging(value);
					this.SendPropertyChanging();
					this._facebookCoupon = value;
					this.SendPropertyChanged("facebookCoupon");
					this.OnfacebookCouponChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentThemeID", DbType="BigInt")]
		public System.Nullable<long> currentThemeID
		{
			get
			{
				return this._currentThemeID;
			}
			set
			{
				if ((this._currentThemeID != value))
				{
					if (this._theme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncurrentThemeIDChanging(value);
					this.SendPropertyChanging();
					this._currentThemeID = value;
					this.SendPropertyChanged("currentThemeID");
					this.OncurrentThemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_storeName", DbType="NVarChar(200)")]
		public string storeName
		{
			get
			{
				return this._storeName;
			}
			set
			{
				if ((this._storeName != value))
				{
					this.OnstoreNameChanging(value);
					this.SendPropertyChanging();
					this._storeName = value;
					this.SendPropertyChanged("storeName");
					this.OnstoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uniqueid", DbType="VarChar(10)")]
		public string uniqueid
		{
			get
			{
				return this._uniqueid;
			}
			set
			{
				if ((this._uniqueid != value))
				{
					this.OnuniqueidChanging(value);
					this.SendPropertyChanging();
					this._uniqueid = value;
					this.SendPropertyChanged("uniqueid");
					this.OnuniqueidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ebay_lastsync", DbType="DateTime")]
		public System.Nullable<System.DateTime> ebay_lastsync
		{
			get
			{
				return this._ebay_lastsync;
			}
			set
			{
				if ((this._ebay_lastsync != value))
				{
					this.Onebay_lastsyncChanging(value);
					this.SendPropertyChanging();
					this._ebay_lastsync = value;
					this.SendPropertyChanged("ebay_lastsync");
					this.Onebay_lastsyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affiliateID", DbType="VarChar(10)")]
		public string affiliateID
		{
			get
			{
				return this._affiliateID;
			}
			set
			{
				if ((this._affiliateID != value))
				{
					this.OnaffiliateIDChanging(value);
					this.SendPropertyChanging();
					this._affiliateID = value;
					this.SendPropertyChanged("affiliateID");
					this.OnaffiliateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_affiliateReferrer", DbType="BigInt")]
		public System.Nullable<long> affiliateReferrer
		{
			get
			{
				return this._affiliateReferrer;
			}
			set
			{
				if ((this._affiliateReferrer != value))
				{
					if (this._MASTERsubdomain1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaffiliateReferrerChanging(value);
					this.SendPropertyChanging();
					this._affiliateReferrer = value;
					this.SendPropertyChanged("affiliateReferrer");
					this.OnaffiliateReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trialExpiry", DbType="DateTime")]
		public System.Nullable<System.DateTime> trialExpiry
		{
			get
			{
				return this._trialExpiry;
			}
			set
			{
				if ((this._trialExpiry != value))
				{
					this.OntrialExpiryChanging(value);
					this.SendPropertyChanging();
					this._trialExpiry = value;
					this.SendPropertyChanged("trialExpiry");
					this.OntrialExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_friend", Storage="_friends", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<friend> friends
		{
			get
			{
				return this._friends;
			}
			set
			{
				this._friends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_friend1", Storage="_friends1", ThisKey="id", OtherKey="friendsubdomainid")]
		public EntitySet<friend> friends1
		{
			get
			{
				return this._friends1;
			}
			set
			{
				this._friends1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_facebookPage", Storage="_facebookPages", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<facebookPage> facebookPages
		{
			get
			{
				return this._facebookPages;
			}
			set
			{
				this._facebookPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_opensocialPage", Storage="_opensocialPages", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<opensocialPage> opensocialPages
		{
			get
			{
				return this._opensocialPages;
			}
			set
			{
				this._opensocialPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_twitterSearch", Storage="_twitterSearches", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<twitterSearch> twitterSearches
		{
			get
			{
				return this._twitterSearches;
			}
			set
			{
				this._twitterSearches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_image", Storage="_images", ThisKey="id", OtherKey="subdomain")]
		public EntitySet<image> images
		{
			get
			{
				return this._images;
			}
			set
			{
				this._images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_inventoryLocation", Storage="_inventoryLocations", ThisKey="id", OtherKey="subdomain")]
		public EntitySet<inventoryLocation> inventoryLocations
		{
			get
			{
				return this._inventoryLocations;
			}
			set
			{
				this._inventoryLocations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_productCategory", Storage="_productCategories", ThisKey="id", OtherKey="subdomain")]
		public EntitySet<productCategory> productCategories
		{
			get
			{
				return this._productCategories;
			}
			set
			{
				this._productCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_googleBlog", Storage="_googleBlogs", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<googleBlog> googleBlogs
		{
			get
			{
				return this._googleBlogs;
			}
			set
			{
				this._googleBlogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product_comment", Storage="_product_comments", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<product_comment> product_comments
		{
			get
			{
				return this._product_comments;
			}
			set
			{
				this._product_comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_video", Storage="_videos", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<video> videos
		{
			get
			{
				return this._videos;
			}
			set
			{
				this._videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_review", Storage="_reviews", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<review> reviews
		{
			get
			{
				return this._reviews;
			}
			set
			{
				this._reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_oauth_token", Storage="_oauth_tokens", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<oauth_token> oauth_tokens
		{
			get
			{
				return this._oauth_tokens;
			}
			set
			{
				this._oauth_tokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_stockUnit", Storage="_stockUnits", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<stockUnit> stockUnits
		{
			get
			{
				return this._stockUnits;
			}
			set
			{
				this._stockUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_facebook_token", Storage="_facebook_tokens", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<facebook_token> facebook_tokens
		{
			get
			{
				return this._facebook_tokens;
			}
			set
			{
				this._facebook_tokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_wordpressSite", Storage="_wordpressSites", ThisKey="id", OtherKey="subdomainid", IsUnique=true, IsForeignKey=false)]
		public wordpressSite wordpressSites
		{
			get
			{
				return this._wordpressSites.Entity;
			}
			set
			{
				wordpressSite previousValue = this._wordpressSites.Entity;
				if (((previousValue != value) 
							|| (this._wordpressSites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._wordpressSites.Entity = null;
						previousValue.MASTERsubdomain = null;
					}
					this._wordpressSites.Entity = value;
					if ((value != null))
					{
						value.MASTERsubdomain = this;
					}
					this.SendPropertyChanged("wordpressSites");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_tumblrSite", Storage="_tumblrSites", ThisKey="id", OtherKey="subdomainid", IsUnique=true, IsForeignKey=false)]
		public tumblrSite tumblrSites
		{
			get
			{
				return this._tumblrSites.Entity;
			}
			set
			{
				tumblrSite previousValue = this._tumblrSites.Entity;
				if (((previousValue != value) 
							|| (this._tumblrSites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tumblrSites.Entity = null;
						previousValue.MASTERsubdomain = null;
					}
					this._tumblrSites.Entity = value;
					if ((value != null))
					{
						value.MASTERsubdomain = this;
					}
					this.SendPropertyChanged("tumblrSites");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_contactGroup", Storage="_contactGroups", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<contactGroup> contactGroups
		{
			get
			{
				return this._contactGroups;
			}
			set
			{
				this._contactGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_cart", Storage="_carts", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_blog", Storage="_blogs", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<blog> blogs
		{
			get
			{
				return this._blogs;
			}
			set
			{
				this._blogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_linklist", Storage="_linklists", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<linklist> linklists
		{
			get
			{
				return this._linklists;
			}
			set
			{
				this._linklists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_coupon", Storage="_coupons", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<coupon> coupons
		{
			get
			{
				return this._coupons;
			}
			set
			{
				this._coupons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_shippingProfile", Storage="_shippingProfiles", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<shippingProfile> shippingProfiles
		{
			get
			{
				return this._shippingProfiles;
			}
			set
			{
				this._shippingProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_organisation", Storage="_organisations", ThisKey="id", OtherKey="subdomain")]
		public EntitySet<organisation> organisations
		{
			get
			{
				return this._organisations;
			}
			set
			{
				this._organisations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_paymentMethod", Storage="_paymentMethods", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<paymentMethod> paymentMethods
		{
			get
			{
				return this._paymentMethods;
			}
			set
			{
				this._paymentMethods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_ebay_shippingprofile", Storage="_ebay_shippingprofiles", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<ebay_shippingprofile> ebay_shippingprofiles
		{
			get
			{
				return this._ebay_shippingprofiles;
			}
			set
			{
				this._ebay_shippingprofiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_ebay_order", Storage="_ebay_orders", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<ebay_order> ebay_orders
		{
			get
			{
				return this._ebay_orders;
			}
			set
			{
				this._ebay_orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_article_tag", Storage="_article_tags", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<article_tag> article_tags
		{
			get
			{
				return this._article_tags;
			}
			set
			{
				this._article_tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_tag", Storage="_tags", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<tag> tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				this._tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product_image", Storage="_product_images", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<product_image> product_images
		{
			get
			{
				return this._product_images;
			}
			set
			{
				this._product_images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product", Storage="_products", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_MASTERsubdomain", Storage="_MASTERsubdomains", ThisKey="id", OtherKey="affiliateReferrer")]
		public EntitySet<MASTERsubdomain> MASTERsubdomains
		{
			get
			{
				return this._MASTERsubdomains;
			}
			set
			{
				this._MASTERsubdomains.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_page", Storage="_pages", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<page> pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				this._pages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product_collection", Storage="_product_collections", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<product_collection> product_collections
		{
			get
			{
				return this._product_collections;
			}
			set
			{
				this._product_collections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_indexingQueue", Storage="_indexingQueues", ThisKey="id", OtherKey="subdomainid")]
		public EntitySet<indexingQueue> indexingQueues
		{
			get
			{
				return this._indexingQueues;
			}
			set
			{
				this._indexingQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coupon_MASTERsubdomain", Storage="_coupon", ThisKey="facebookCoupon", OtherKey="id", IsForeignKey=true)]
		public coupon coupon
		{
			get
			{
				return this._coupon.Entity;
			}
			set
			{
				coupon previousValue = this._coupon.Entity;
				if (((previousValue != value) 
							|| (this._coupon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._coupon.Entity = null;
						previousValue.MASTERsubdomains.Remove(this);
					}
					this._coupon.Entity = value;
					if ((value != null))
					{
						value.MASTERsubdomains.Add(this);
						this._facebookCoupon = value.id;
					}
					else
					{
						this._facebookCoupon = default(Nullable<long>);
					}
					this.SendPropertyChanged("coupon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="googleBase_MASTERsubdomain", Storage="_googleBase", ThisKey="gbaseid", OtherKey="id", IsForeignKey=true)]
		public googleBase googleBase
		{
			get
			{
				return this._googleBase.Entity;
			}
			set
			{
				googleBase previousValue = this._googleBase.Entity;
				if (((previousValue != value) 
							|| (this._googleBase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._googleBase.Entity = null;
						previousValue.MASTERsubdomains.Remove(this);
					}
					this._googleBase.Entity = value;
					if ((value != null))
					{
						value.MASTERsubdomains.Add(this);
						this._gbaseid = value.id;
					}
					else
					{
						this._gbaseid = default(Nullable<long>);
					}
					this.SendPropertyChanged("googleBase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_MASTERsubdomain", Storage="_MASTERsubdomain1", ThisKey="affiliateReferrer", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain1
		{
			get
			{
				return this._MASTERsubdomain1.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain1.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain1.Entity = null;
						previousValue.MASTERsubdomains.Remove(this);
					}
					this._MASTERsubdomain1.Entity = value;
					if ((value != null))
					{
						value.MASTERsubdomains.Add(this);
						this._affiliateReferrer = value.id;
					}
					else
					{
						this._affiliateReferrer = default(Nullable<long>);
					}
					this.SendPropertyChanged("MASTERsubdomain1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organisation_MASTERsubdomain", Storage="_organisation", ThisKey="creator", OtherKey="id", IsForeignKey=true)]
		public organisation organisation
		{
			get
			{
				return this._organisation.Entity;
			}
			set
			{
				organisation previousValue = this._organisation.Entity;
				if (((previousValue != value) 
							|| (this._organisation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organisation.Entity = null;
						previousValue.MASTERsubdomains.Remove(this);
					}
					this._organisation.Entity = value;
					if ((value != null))
					{
						value.MASTERsubdomains.Add(this);
						this._creator = value.id;
					}
					else
					{
						this._creator = default(Nullable<long>);
					}
					this.SendPropertyChanged("organisation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theme_MASTERsubdomain", Storage="_theme", ThisKey="currentThemeID", OtherKey="id", IsForeignKey=true)]
		public theme theme
		{
			get
			{
				return this._theme.Entity;
			}
			set
			{
				theme previousValue = this._theme.Entity;
				if (((previousValue != value) 
							|| (this._theme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._theme.Entity = null;
						previousValue.MASTERsubdomains.Remove(this);
					}
					this._theme.Entity = value;
					if ((value != null))
					{
						value.MASTERsubdomains.Add(this);
						this._currentThemeID = value.id;
					}
					else
					{
						this._currentThemeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("theme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_friends(friend entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_friends(friend entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_friends1(friend entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain1 = this;
		}
		
		private void detach_friends1(friend entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain1 = null;
		}
		
		private void attach_facebookPages(facebookPage entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_facebookPages(facebookPage entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_opensocialPages(opensocialPage entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_opensocialPages(opensocialPage entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_twitterSearches(twitterSearch entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_twitterSearches(twitterSearch entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_images(image entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_images(image entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_inventoryLocations(inventoryLocation entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_inventoryLocations(inventoryLocation entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_productCategories(productCategory entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_productCategories(productCategory entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_googleBlogs(googleBlog entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_googleBlogs(googleBlog entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_product_comments(product_comment entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_videos(video entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_videos(video entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_reviews(review entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_oauth_tokens(oauth_token entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_oauth_tokens(oauth_token entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_stockUnits(stockUnit entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_stockUnits(stockUnit entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_facebook_tokens(facebook_token entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_facebook_tokens(facebook_token entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_contactGroups(contactGroup entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_contactGroups(contactGroup entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_blogs(blog entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_blogs(blog entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_linklists(linklist entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_linklists(linklist entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_coupons(coupon entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_coupons(coupon entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_shippingProfiles(shippingProfile entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_shippingProfiles(shippingProfile entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_organisations(organisation entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_paymentMethods(paymentMethod entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_paymentMethods(paymentMethod entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_ebay_shippingprofiles(ebay_shippingprofile entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_ebay_shippingprofiles(ebay_shippingprofile entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_ebay_orders(ebay_order entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_ebay_orders(ebay_order entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_article_tags(article_tag entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_article_tags(article_tag entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_tags(tag entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_tags(tag entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_product_images(product_image entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_product_images(product_image entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain1 = this;
		}
		
		private void detach_MASTERsubdomains(MASTERsubdomain entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain1 = null;
		}
		
		private void attach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_pages(page entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_product_collections(product_collection entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_product_collections(product_collection entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
		
		private void attach_indexingQueues(indexingQueue entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = this;
		}
		
		private void detach_indexingQueues(indexingQueue entity)
		{
			this.SendPropertyChanging();
			entity.MASTERsubdomain = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pages")]
	public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _content;
		
		private long _subdomainid;
		
		private string _permalink;
		
		private long _creator;
		
		private System.DateTime _updated;
		
		private int _settings;
		
		private string _templatename;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OnpermalinkChanging(string value);
    partial void OnpermalinkChanged();
    partial void OncreatorChanging(long value);
    partial void OncreatorChanged();
    partial void OnupdatedChanging(System.DateTime value);
    partial void OnupdatedChanged();
    partial void OnsettingsChanging(int value);
    partial void OnsettingsChanged();
    partial void OntemplatenameChanging(string value);
    partial void OntemplatenameChanged();
    #endregion
		
		public page()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permalink", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string permalink
		{
			get
			{
				return this._permalink;
			}
			set
			{
				if ((this._permalink != value))
				{
					this.OnpermalinkChanging(value);
					this.SendPropertyChanging();
					this._permalink = value;
					this.SendPropertyChanged("permalink");
					this.OnpermalinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creator", DbType="BigInt NOT NULL")]
		public long creator
		{
			get
			{
				return this._creator;
			}
			set
			{
				if ((this._creator != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncreatorChanging(value);
					this.SendPropertyChanging();
					this._creator = value;
					this.SendPropertyChanged("creator");
					this.OncreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updated", DbType="DateTime NOT NULL")]
		public System.DateTime updated
		{
			get
			{
				return this._updated;
			}
			set
			{
				if ((this._updated != value))
				{
					this.OnupdatedChanging(value);
					this.SendPropertyChanging();
					this._updated = value;
					this.SendPropertyChanged("updated");
					this.OnupdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settings", DbType="Int NOT NULL")]
		public int settings
		{
			get
			{
				return this._settings;
			}
			set
			{
				if ((this._settings != value))
				{
					this.OnsettingsChanging(value);
					this.SendPropertyChanging();
					this._settings = value;
					this.SendPropertyChanged("settings");
					this.OnsettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_templatename", DbType="NVarChar(100)")]
		public string templatename
		{
			get
			{
				return this._templatename;
			}
			set
			{
				if ((this._templatename != value))
				{
					this.OntemplatenameChanging(value);
					this.SendPropertyChanging();
					this._templatename = value;
					this.SendPropertyChanged("templatename");
					this.OntemplatenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_page", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.pages.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.pages.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_page", Storage="_user", ThisKey="creator", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.pages.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.pages.Add(this);
						this._creator = value.id;
					}
					else
					{
						this._creator = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_collections")]
	public partial class product_collection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _name;
		
		private string _details;
		
		private long _subdomainid;
		
		private System.Nullable<long> _etsy_sectionid;
		
		private System.Nullable<long> _etsy_shopid;
		
		private string _permalink;
		
		private int _settings;
		
		private EntitySet<productCollectionMember> _productCollectionMembers;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void Onetsy_sectionidChanging(System.Nullable<long> value);
    partial void Onetsy_sectionidChanged();
    partial void Onetsy_shopidChanging(System.Nullable<long> value);
    partial void Onetsy_shopidChanged();
    partial void OnpermalinkChanging(string value);
    partial void OnpermalinkChanged();
    partial void OnsettingsChanging(int value);
    partial void OnsettingsChanged();
    #endregion
		
		public product_collection()
		{
			this._productCollectionMembers = new EntitySet<productCollectionMember>(new Action<productCollectionMember>(this.attach_productCollectionMembers), new Action<productCollectionMember>(this.detach_productCollectionMembers));
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(108) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="NVarChar(1000)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etsy_sectionid", DbType="BigInt")]
		public System.Nullable<long> etsy_sectionid
		{
			get
			{
				return this._etsy_sectionid;
			}
			set
			{
				if ((this._etsy_sectionid != value))
				{
					this.Onetsy_sectionidChanging(value);
					this.SendPropertyChanging();
					this._etsy_sectionid = value;
					this.SendPropertyChanged("etsy_sectionid");
					this.Onetsy_sectionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etsy_shopid", DbType="BigInt")]
		public System.Nullable<long> etsy_shopid
		{
			get
			{
				return this._etsy_shopid;
			}
			set
			{
				if ((this._etsy_shopid != value))
				{
					this.Onetsy_shopidChanging(value);
					this.SendPropertyChanging();
					this._etsy_shopid = value;
					this.SendPropertyChanged("etsy_shopid");
					this.Onetsy_shopidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permalink", DbType="NVarChar(100)")]
		public string permalink
		{
			get
			{
				return this._permalink;
			}
			set
			{
				if ((this._permalink != value))
				{
					this.OnpermalinkChanging(value);
					this.SendPropertyChanging();
					this._permalink = value;
					this.SendPropertyChanged("permalink");
					this.OnpermalinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settings", DbType="Int NOT NULL")]
		public int settings
		{
			get
			{
				return this._settings;
			}
			set
			{
				if ((this._settings != value))
				{
					this.OnsettingsChanging(value);
					this.SendPropertyChanging();
					this._settings = value;
					this.SendPropertyChanged("settings");
					this.OnsettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_collection_productCollectionMember", Storage="_productCollectionMembers", ThisKey="id", OtherKey="collectionid")]
		public EntitySet<productCollectionMember> productCollectionMembers
		{
			get
			{
				return this._productCollectionMembers;
			}
			set
			{
				this._productCollectionMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_product_collection", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.product_collections.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.product_collections.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_productCollectionMembers(productCollectionMember entity)
		{
			this.SendPropertyChanging();
			entity.product_collection = this;
		}
		
		private void detach_productCollectionMembers(productCollectionMember entity)
		{
			this.SendPropertyChanging();
			entity.product_collection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mails")]
	public partial class mail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _toName;
		
		private string _toEmail;
		
		private string _subject;
		
		private string _body;
		
		private string _reference;
		
		private string _fromEmail;
		
		private string _fromName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OntoNameChanging(string value);
    partial void OntoNameChanged();
    partial void OntoEmailChanging(string value);
    partial void OntoEmailChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnreferenceChanging(string value);
    partial void OnreferenceChanged();
    partial void OnfromEmailChanging(string value);
    partial void OnfromEmailChanged();
    partial void OnfromNameChanging(string value);
    partial void OnfromNameChanged();
    #endregion
		
		public mail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string toName
		{
			get
			{
				return this._toName;
			}
			set
			{
				if ((this._toName != value))
				{
					this.OntoNameChanging(value);
					this.SendPropertyChanging();
					this._toName = value;
					this.SendPropertyChanged("toName");
					this.OntoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toEmail", DbType="NVarChar(320) NOT NULL", CanBeNull=false)]
		public string toEmail
		{
			get
			{
				return this._toEmail;
			}
			set
			{
				if ((this._toEmail != value))
				{
					this.OntoEmailChanging(value);
					this.SendPropertyChanging();
					this._toEmail = value;
					this.SendPropertyChanged("toEmail");
					this.OntoEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reference", DbType="VarChar(100)")]
		public string reference
		{
			get
			{
				return this._reference;
			}
			set
			{
				if ((this._reference != value))
				{
					this.OnreferenceChanging(value);
					this.SendPropertyChanging();
					this._reference = value;
					this.SendPropertyChanged("reference");
					this.OnreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromEmail", DbType="NVarChar(320)")]
		public string fromEmail
		{
			get
			{
				return this._fromEmail;
			}
			set
			{
				if ((this._fromEmail != value))
				{
					this.OnfromEmailChanging(value);
					this.SendPropertyChanging();
					this._fromEmail = value;
					this.SendPropertyChanged("fromEmail");
					this.OnfromEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromName", DbType="NVarChar(200)")]
		public string fromName
		{
			get
			{
				return this._fromName;
			}
			set
			{
				if ((this._fromName != value))
				{
					this.OnfromNameChanging(value);
					this.SendPropertyChanging();
					this._fromName = value;
					this.SendPropertyChanged("fromName");
					this.OnfromNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.indexingQueue")]
	public partial class indexingQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _subdomainid;
		
		private byte _type;
		
		private System.Xml.Linq.XElement _serializedItem;
		
		private long _itemKey;
		
		private bool _deleteOnly;
		
		private EntityRef<MASTERsubdomain> _MASTERsubdomain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnsubdomainidChanging(long value);
    partial void OnsubdomainidChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OnserializedItemChanging(System.Xml.Linq.XElement value);
    partial void OnserializedItemChanged();
    partial void OnitemKeyChanging(long value);
    partial void OnitemKeyChanged();
    partial void OndeleteOnlyChanging(bool value);
    partial void OndeleteOnlyChanged();
    #endregion
		
		public indexingQueue()
		{
			this._MASTERsubdomain = default(EntityRef<MASTERsubdomain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subdomainid", DbType="BigInt NOT NULL")]
		public long subdomainid
		{
			get
			{
				return this._subdomainid;
			}
			set
			{
				if ((this._subdomainid != value))
				{
					if (this._MASTERsubdomain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsubdomainidChanging(value);
					this.SendPropertyChanging();
					this._subdomainid = value;
					this.SendPropertyChanged("subdomainid");
					this.OnsubdomainidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="TinyInt NOT NULL")]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serializedItem", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement serializedItem
		{
			get
			{
				return this._serializedItem;
			}
			set
			{
				if ((this._serializedItem != value))
				{
					this.OnserializedItemChanging(value);
					this.SendPropertyChanging();
					this._serializedItem = value;
					this.SendPropertyChanged("serializedItem");
					this.OnserializedItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemKey", DbType="BigInt NOT NULL")]
		public long itemKey
		{
			get
			{
				return this._itemKey;
			}
			set
			{
				if ((this._itemKey != value))
				{
					this.OnitemKeyChanging(value);
					this.SendPropertyChanging();
					this._itemKey = value;
					this.SendPropertyChanged("itemKey");
					this.OnitemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleteOnly", DbType="Bit NOT NULL")]
		public bool deleteOnly
		{
			get
			{
				return this._deleteOnly;
			}
			set
			{
				if ((this._deleteOnly != value))
				{
					this.OndeleteOnlyChanging(value);
					this.SendPropertyChanging();
					this._deleteOnly = value;
					this.SendPropertyChanged("deleteOnly");
					this.OndeleteOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MASTERsubdomain_indexingQueue", Storage="_MASTERsubdomain", ThisKey="subdomainid", OtherKey="id", IsForeignKey=true)]
		public MASTERsubdomain MASTERsubdomain
		{
			get
			{
				return this._MASTERsubdomain.Entity;
			}
			set
			{
				MASTERsubdomain previousValue = this._MASTERsubdomain.Entity;
				if (((previousValue != value) 
							|| (this._MASTERsubdomain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MASTERsubdomain.Entity = null;
						previousValue.indexingQueues.Remove(this);
					}
					this._MASTERsubdomain.Entity = value;
					if ((value != null))
					{
						value.indexingQueues.Add(this);
						this._subdomainid = value.id;
					}
					else
					{
						this._subdomainid = default(long);
					}
					this.SendPropertyChanged("MASTERsubdomain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
